<?xml version="1.0" encoding="UTF-8" ?>

<RedditAnnotation>
<TEXT><![CDATA[P: Please, please, please, I am begging you, if you write programming blog posts and have some sample code, please include the appropriate import/using statements for the functions you are calling in your code samples
C: I was annoyed by this same thing just yesterday—but when using Microsoft’s official docs.
C: I totally feel you man 1) find how an certain function works 2) re-Google how to import such function
C: Done: import X from "../../../../../../../../home/Otroletravaladna/definitelynotporn/whatever";
C: Also, please notate which file the code is supposed to go in when there's more than one. It definitely helps.
C: May I ask? Why doesn't the remote ssh allow the C# intellisense? Many extensions need to be installed on the server in order to function
C: They are the worst offender !
C: Weirdly, my VS Code actually updated during the day. The previous version would detect the C# file and tell me it could look for an extension that could handle C# but it didn't find anything. It was putting an @id:vs-code something in the search term. I don't remember the exact string. So after VS Code updated it did find the C# extension and installed it, but still no Intellisense in my code :( It does install vscode server on the Raspberry Pi, and I deleted it and got it to reinstall after the upgrade but it didn't help. I should probably dig around the language server debug window and see if I can find out why I used to write C code using a text editor and nmake so I'm used to having to compile to actually find the errors in my code :)
C: Yeah, they sometimes include the whole file except the includes...
C: Oddly enough, on my end it works without issue - upon installing on the server
C: If you develop C or C++ you'll know the anguish of finding exactly the .h file you need for your project to work, and then scouring the internet for the .lib file that matches it
P: Is it normal to do 4 hours of research for like 10 minutes of coding?
C: Wait till you spend a week chasing down a bug which ends up being a sum total of 5 characters.
C: Yeah that's normal. A lot of the hardest problem are like that, the change to get the desired outcome could be anything but there is only one good solution and it's not easy to figure out what it is. Sometimes it's small but sometimes it's not. Either way it's usually a lot more time researching than it is coding. You should feel good about it. Being able to find an easy solution to a complex problem by reading documentation is what makes a good engineer.
C: Absolutely.
C: yup
C: It can be way worse than that.
C: That’s engineering in general
C: Any line of code you write is a line of code that's untested and needs to be maintained. The more you can get by reading docs as opposed to hacking it together yourself, the better. Once you've spent a lot of time with the frameworks and libraries you're using you'll probably be able to spend more time coding and less time reading docs. But early on in a project it's definitely reasonable to spend a LOT of time reading documentation.
C: I once spent more than a week chasing down a bug that ended up being a single unprintable character.
C: 8 weeks. Code broke in an update. After the first week I had to take other tickets and work on it in spare time. One variable needed to be set. One line of code. Variable wasn't even used, but was throwing a nullpo at some point in unmanaged code. I was on both polar sides of livid and relieved.
C: I spent 2 weeks figuring out why a container couldn't reach the internet, and with no ideas left, I checked the IPv6 address again... I'd mistyped one number in it.
P: I’ve got a crush on a guy who loves programming. Help?
C: Ngl if I was a guy in ap computer science (and I am) I would just about die if any girl was willing to bother to write me a letter in binary.
C: Encoding a poem in binary would definitely show that you've put some effort into it and that you are interested in the things he does. I think that this is a great idea and it's not even that difficult to do. If you google a bit, you may be able to find a text-to-binary converter that will do the work for you (don't worry, googling is an essential part of programming)
C: The fact you actually listen and maybe question what he says is already a lot.
C: End it with a checksum of the poem. You can then catch him out when he tells you the ending is gibberish.
C: > If you’re a guy who loves computers, what would be the ideal way to be asked out? "Hey! Fancy going for something to drink together?" You're really overthinking this.
C: Unless you were awkward or insecure enough that instead of taking a (not subtle) hint, you'd start doing some odd shit like pointing out mistakes in the encoding. OP, keep in mind some people are utterly clueless in terms of dating. I myself in high school thought I'm so out of my SO's league, that it took me a year of her hinting to make my move.
C: thank you for the converter tip! that would have saved me a lot of time haha
C: It's especially good in binary since base two is <3
C: Depending on the length of the poem binary might give you too long of a message. If that'll be the case you could also consider hexadecimal. There are also converters for those
C: Or base64
P: Resume tips from an ex-google tech lead
C: Oh shit is this the legit alpha master tech lead????? Hi!!
C: As a software manager that has also read 100s of resumes at a time these tips are solid. And I wasn't aware companies couldn't ask for your graduation date on a degree that's interesting.
C: What drink are you sporting today?
C: The link says unable to open the file at this time. Is it just me or did the OP took it down?
C: I acknowledge your miserable excuse for a piece of barely edible flesh.
C: And they can't ask for dates on your work history, so if you have work history gaps and you're self conscious about it, just leave the dates off. Asking dates opens the company up to lawsuits about age discrimination.
C: ~~human blood~~ coffee
C: Here it is [https://drive.google.com/open?id=10b9NZDhPbUOW\_C7108IKe9ev6Ed2UG7F](https://drive.google.com/open?id=10b9NZDhPbUOW_C7108IKe9ev6Ed2UG7F)
C: It also makes sure nobody will hire you if you decline to answer
P: Should I give away my software to my company for free?
C: What you should be doing is projecting the amount they could save by using your software and set your price accordingly so they still save money, but you still get quite a lot for what you wrote. Then argue they can get ahead of their competitors or can wait and play catchup when it may be too late. Ask to sit at the table once again and talk numbers so both parties can win.
C: Absolutely not. If implementing this piece of software was part of your job, then they would be right to expect it, but it sounds like that’s not the case. This is your intellectual property and you have every right to protect it and get paid for it.
C: If they wouldn’t pay $15/month, what makes you think they’ll pay you $10? If you built it for yourself, sell it to someone who will pay, or open source it. If you built it for them without a formal agreement in place, you may be able to fight for some equity or licensing fee, but you’re probably out of luck.
C: It's perfectly normal to ask for money for software that adds value to a company that you wrote in your own time. However; it's not really 'normal' to develop something specifically for a company, dangle it in front of them, and then ask for money. They didn't ask you to build it for them. So you should not be surprised that they won't be willing to pay you for it. And then there is a huge legal grey area where you wrote software in your own time that is very specific to the business processes of a certain company. How much of an issue that is going to be, really depends on your local laws.
C: not unless you've got substantial equity in the company. Find somewhere to work that will appreciate you. 400 people x 1 hr/mo, even at minimum wage would be a solid ~3k / mo in efficiency gained, and that's an extremely conservative estimate. the costs of current inefficiency are probably far beyond that. If they're not willing to pay a little to save a lot, that's their problem
C: The problem here is that he has a very different bargaining position then when you’re selling a product. If they want to be exceptionally shitty they could even threaten to fire him if he doesn’t hand it over. It seems OPs relationship with management is already far from perfect, so he should be careful. Worst case scenario he could even lose his job. Keep in mind that this company doesn’t even want to pay for off the shelf software. Then there’s the issue that even if he ‘sells’ the software, he’s going to now have to maintain it. It does not sound OP is very experienced with whats involved with long term maintenance of software. IMO he got himself into a pretty nasty position by doing all this without discussing this up front. Not something that’s easy to fix.
C: this is fair, but with the caveat that you should absolutely walk away if the company does not want to compensate you in a way that feels fair to you. compensation is not to be expected, but neither was the software, esp developed on your own time.
C: Agree on this completely. It would have been appropriate to gain the alignment on your expectations before starting.
C: > Worst case scenario he could even lose his job. I can imagine scenarios a lot worse than that. Such as a legal battle over ownership of said software.
C: Oh totally. If they don't want to pay, don't give them the software. It's as simple as that.
P: The most absurd tests I've ever taken for a dev job
C: "Take home assignments" have become common, and I actually don't mind them if they're reasonable in size and mean that I won't have to do 4 hours of whiteboard coding on site. But one basically entailed building an entire fucking application. A long time ago, one company gave me a pretty short online quiz that was like: "Here's a horrible made-up language with ridiculous syntax and bizarre semantics. What should these short snippets print?" I thought it was a kind of fun puzzle that tested your ability to be meticulous, but it turns out... it wasn't a fake language, it was the language they actually used.
C: Yeah it happens. I'm generally interviewing the company while they're interviewing me. If a company interviews me in a silly way, verifying I had skills that were not in line with what I know I need to be a programmer, then that tells me either that the company has no idea how to test for competent engineers and thus likely has lots of incompetent engineers, or that I am not right for the job since they want me to do something different than what I want to do. Either way it's useful information to help me walk away quick before my time (and theirs) is wasted even more.
C: 4 hour long coding challenge, which is usually designed to be tackled by teams, and which (at least in my perception) had quite a bunch of flaws in the stated acceptance criteria (i.e. highly ambiguous wording and such, which allowed for many different interpretations on what to actually solve). While I passed, I ultimately didn't take the job there.
C: And the worst thing is, this company will probably think that they were right in aplly that test and that you are too lazy to work for then
C: A made up language on hackerrank That in itself is ok. But their made up language didn’t follow standard order of operations in any math problem. Left to right, not BODMAS. They told me this afterwards. They said it didn’t matter for the role I was applying for, which was implementation specialist, no coding involved I did badly, apparently most people fail (!!) and they hired someone that did better
C: I just assume, for better or worse, that they either have no idea what they're doing or are really lazy, and am glad they let me know before I wasted too much time on them.
C: I had a huge arguement with a CIO who wanted me to implement a video-on no-tabbing test for engineers. He was from a programme manager background. He was deeply shocked when I told him how rediculous the test was. He didn't beleive me when I told him that even the best developers check Internet pages when developing code.
C: [deleted]
C: I agree. I saw some post quite a while back where someone described how their interview style was very good and those who did not manage, they were glad to not have on the company anyway. There was a bit of a flaw though, it was a while back... but I think it was typically not so fitting for people on the more introvert side. So I suspect they felt like it was a success for them when people tapped out but in reality they probably just missed good opportunities.
C: Well, they do say plagiarism is the highest form of praise.
P: Do you dislike the "learn to code" mass marketing campaigns?
C: I think people should learn the basics of coding to not fear technology. But I think this movement is giving people the wrong impression at how difficult coding actually is in the real world; it’s not for everyone.
C: I got bombarded with "LEARN DATA SCIENCE IN 30 DAYS!" on Instagram Gotta say, it seemed pretty hilarious, since I've been studying data science for 2 years and I'm still not confident enough for the first job. These ads are straight up scam city. Maybe in 30 days if you're already a computer science professor...
C: I'm gonna go on a slight tangeant I think. There seems to be the this weird combination of know how to code = economic oppurtunity. It's basically marketted to elementary and secondary education as this will get your students jobs. That shouldn't be the goal. Teaching kids to code is teach a different critical thinking skill. That's what all your classes growing up supposed to do. Do you learn a useful skill that has economic oppurtunity? Hell yeah. But I think learning to code should have a bigger goal than just economic ones.
C: Most of it is honestly just easy money preying on people who want easy money. IMO the people who will put in the time to actual learn to code aren’t going to find out about coding from an instagram ad.
C: I'm a professional software developer and it just made me more afraid of technology
C: I think it's more that "coding" is too broad a term anymore. As software and automation become more and more prevalent, the range of ways in which code / programming is applied continues to diversify. E.g. each of these involves pretty different skillsets despite all vaguely falling under coding, and some of them have a huge range of required expertise/knowledge within those domains depending on what your job is. * DevOps / backend automation * IT technicians * Network engineers * Kernel/OS/engine/other low level code * Backend engineering and architecture * Web developers and mobile apps * Embedded systems * Data science etc etc Not to mention peripheral users of programming - even stuff like graphic design and modeling might use lightweight scripting simply for automation purposes.
C: >But I think learning to code should have a bigger goal than just economic ones. my professor said this about 15 years ago now but I find it relevant still to this day: you will meet two types of people in the workforce; those that work to live and those that live to work. you will find plenty of handymen who aren't handy in their spare time, plenty of logistics schedulers who couldn't give a rat's ass about route optimisation on their way to work and plenty of programmers who don't touch a computer after work. I find that some employers heavily encourage "programming is a lifestyle"-thinking, because let's be honest, it benefits them for zero cost, but I also find it a bit weird to be talking down on people entering the workforce with the explicit goal to only meet the skill set the job requires and become more proficient only during work hours - that is quite literally what work-life balance is at it's core. there is to me absolutely nothing wrong with people that see programming as "just another job", because the flip side of that is when people are simply expected to progress during their ***unpaid free time***, you end up in a scenario where your employer schedules no time during your ***paid time*** to meet the required study time to improve your skills to the point where it is required and efficiently get unpaid work out of you.
C: Lol that’s a good way to put it.
C: For example, [the more you learn about time the scarier it is](http://www.creativedeletion.com/2015/01/28/falsehoods-programmers-date-time-zones.html)
C: Store timestamps everywhere, use UTC for everything but the frontend. Schedule your vacations close to leap seconds.
P: Why are there so many condescending dickheads on Stackoverflow? Are there any alternatives?
C: > Within minutes there's always an army of people asking why I'm doing something that way, when it's completely irrelevant to the question. I had someone the other day say "the problem is you shouldn't worry about concrete types, just behaviour"... which is a completely assinine thing to say, it's irrelevant to the question and he has no idea why I'm asking it. The why I'm having a problem doesn't help solve a minimal reproducible example. It's because a lot of programming questions suffer from the [XY problem](https://en.wikipedia.org/wiki/XY_problem). The "why" is important because it often informs the correct "how."
C: Can you link to your question? I have review and edit rights on SO. I'd be happy to look it over for concrete feedback. You can PM it to me if you'd like.
C: Reddit is actually a really good place to ask questions. Try finding a subreddit for whatever programming language you're using.
C: I can't think of any alternatives, other than reddit. Even if there were good alternatives, the same toxic responders would find their way there. A lot of programmers have big egos that is stroked when they troll other programmers. It's hard to do, but ignore the trolls. They troll because they don't know how to answer your question, or they're afraid to offer advice they might be wrong (because they're afraid of getting trolled themselves.)
C: **Xy Problem** The XY problem is a communication problem encountered in help desk and similar situations in which the person asking for help obscures the real issue, (X), because instead of asking directly about issue X, they ask how to solve a secondary issue, Y, which they believe will allow them to resolve issue X.
C: I remember a question from SO where someone was asking for a regex to extract something from a string. Turns out that the string in question was always a valid JSON. OP just didn't know something like that existed. While other people kept suggesting regexes, I suggested to parse the string as JSON and simply access the value. I even got a reply that my answer isn't what OP was asking for. The why, or what you want to achieve, what's the input and output, is very important.
C: The why is important also because most problems aren't truly unique. So if you're running into problems you might be attempting to solve your non-unique problem in a unique way when it's easier and better to use the common approach and solution.
C: In my experience, Reddit is a lot more toxic than StackOverflow, but the few tech specific groups I'm in are usually pretty helpful. StackOverflow certainly has its problems, but I usually see people acting rude to folks who are asking incomplete or vague questions; not criticizing the code in the question at hand. Without reviewing the OPs question it is hard to evaluate the response.
C: good bot.
C: Really? I found most reddit programming subreddits to be a lot friendlier than SO. You're less likely to get an answer on reddit though.
P: Seems like bad code is often more profitable than good code?
C: There are many industries where this happens. If you're too good at your job, people wonder why they even need you and you get canned. Meanwhile, those bad at their job, which would then require them to get good at justifying their existence, will often be promoted.
C: It's plenty profitable until the business gets sick of your shit and hires someone competent.
C: Well, you can tell this business is top-notch just from the fact they pay someone to fly out every month to fix on-site instead of setting up a VPN.
C: Simething that _barely_ fulfils the requirements is always cheaper than something thats properly designed and allows for future expansion and modification. And that's not unique to software. Throwing together a hut out of planks is cheap, once you need to add a second floor though you are in for a real problem, probably requiring large-scale reworking of your existing structure. On the other hand if you'd have built in some sturdy material from the beginning it would be trivial to add a second floor, but your initial cost would have been higher.
C: Thankfully if you are a good dev you should be able to find a job that values you. In any case I wouldn't want a career where I'm doing the same shitty work for years just because I'm "cheating" my employers out of their money. I'd rather work on interesting things and get paid fairly for it.
C: Its very tricky though because some of the 'bugs' (but not all) were just edge cases that he didn't handle. For example all of the imported user data SHOULD have 'valid' identifiers on key fields such as username, userid as written in the specs, but sure enough the client was having some bad data come through. But instead of just rejecting that individual invalid record (this is how I wrote my code) - the new programmer did not handle these cases and the imports either corrupted the data or completely crashed the service. So then he blames this on external system database which supplies the 'bad' data. So for this particular bug he argued successfully to the client it was their fault, and now for any subsequent bug he kind of has the 'upper hand' to blame on them as now the non technical people have doubts about their internal systems and people. However I don't agree with his argument as I feel any system should fail gracefully. &#x200B; Edit: Another different bug he had to fly out and fix was because his code didn't handle another test case where someone last name had an apostrophe in it (O'Brien). And this crashed the whole system. Basically just random various bugs like this.
C: It is part of a large government agency that has strict rules on the network connectivity in this case.
C: [deleted]
C: Ouch, if a ' crashes the system then this guy needs to learn a lot about mysql injections. I think they hired an amateur. I don't know anymore what's best, my goal was always to get it working in the least amount of code. But now a days it seems to be a competition who can use the most classes. And if your simple spaghetti code works faster and better they tell you your code is ugly.
C: I was always taught you never trust the user or the data coming from the DB.
P: Why are people in stackoverflow so mean and edgy?
C: The trick is to show you've done some work before asking the question, just say something like I want to do c and I've done a and b etc. If you plain ask how to do this or that they don't like it. This is my personal experience.
C: It may be because beginners on Stack Overflow are very common. Way too common in some tags. Very often they ask really simple questions that can be answered literally in seconds with one Google search. Yet they seemingly (_seemingly_!) didn't bother to google. Many people are _done_ with this kind of newbies. Especially those who flat out dump their home assignment in their question and expect people to solve it. It looks like the term "newbie" slowly transforms to mean "wants his homework done for free without doing any prior research whatsoever". As you can see, the "mean people" could be viewed by newbies as condescending and unhelpful. Could be because they see you as one of these "write me teh codez" newbies as a kind of (possibly erroneous) generalization. It could be better not to say "I'm new, pwease be nice UwU" in your questions.
C: I hope people are not "mean and edgy" but I will say that a lot of beginners on SO don't really know how to properly ask questions. It sounds cliche but essentially many of the beginner questions are just unanswerable without more info and the asker doesn't want to provide that. If you give a simple and clear question, then you will get an answer. If you dump a bunch of code or link to your repo and say "I don't know where the problem is", that just shows you haven't put in the time to narrow down the question. There's sort of a "teach a man to fish" mentality that isn't explicitly spelled out at any point. Experienced devs know how to use breakpoints, read errors, reference the docs, and stuff like that. Learning those skills is actually far more important than getting a specific answer to your question.
C: People seem to respond better if shown what you have tried outside of searching.
C: In the spirit of stackoverflow: [REPOST!](https://www.reddit.com/r/AskProgramming/search?q=stackoverflow&restrict_sr=on&include_over_18=on)
C: I've actually found if you ask a specific question while applying technical detail and a snippet of only relevant code people on stack overflow are really helpful. Having answered a lot of questions myself I have grown to hate the people clearly trying to get others to do their homework with no effort put in on their end.
C: I guess it's time to yeet the I'm new part out
C: This is very true too.
C: Even better when the answer they link to has absolutely nothing to do with your question.
C: One could also read the Help Centre where it's explained that questions are expected to contain a Minimal, Complete and Verifiable Example as well as technical detail. Of course, the people on SO are literally there to help. For example, I _want_ to solve people's issues with their code - it's fun and it hopefully contributes to, like, the community or something like this. The only thing the OP needs to do it to _research like mad_ before asking questions and _prove_ that they indeed did the research and didn't find any acceptable answers.
P: Is it normal for programmers to forget the syntax of a language after not using it for a while ?
C: I still find my self googling "\[Programming Language\] Array" for everything. Edit: Thanks for my first silver, friend!!
C: Yup. Switching between Java & C# is hard (foreach & lambdas trip me up). But I can prolly still do VB6 or TI-BASIC if I really needed to. But not Lua/PHP. Comes down to a question of how similar two languages are & how many years I spent w/ them.
C: Yes. Not only is it impossible to remember every little detail for every language and technology you've ever worked with over the years, it's also unnecessary as long as you know where to look them up.
C: I would say it's pretty normal. I am windows programmer . By default I know hundreds of APIs and routines. After a 3 week holiday for example you are suddenly slow and confused about some things. After two days you are where you left
C: Literally googling SQL statements any time I use it, because can't be arsed to remember stuff I last used a few months ago.
C: Working as Full Stack for 10 years now and still searching for some syntax even the most languages i use today. You should not keep everything in your head. Always allocate your space for designs and good approaches for problems. In the and of the Day clean and simple code always wins. TL dr: Remembering everything wont make you a better software engineer. Good design will.
C: I can never remember if I should use *append* or *push* ....
C: So true!!
C: I love TI Basic. It was my second language after liberty basic
C: This. Brushing up your skills is quite easy when the need arises once you have some experience.
P: Does anyone else with a programming job just feel mentally exhausted just working a few hours?
C: Taking breaks throughout the day is your friend
C: I'm a veteran programmer and I have spent the better past of the last 10 years of may career fighting exhaustion and fatigue. Mental fatigue is no joke, your mind is like every other part of your body you need to work it to get strong, but it only gets stronger during rest periods. Make sure you're resting well. Good sleep is important, but also make sure your not spending all day programming and then coming home to play computer games and or focus on your computer in your down time. You to let your mind take a break. Another thing that's super important to help focus your mind and build endurance for your thoughts. Physical excersise. go to the gym a few times a week and you notice a huge improvement in your cognitive ability and your ability to focus on work for long periods of time
C: Yeah. Programmers only work like, 2 hours a day. Actual problem solving abstract thinking isn't a thing that happens 8 hours a day on command as much as the suits want you to think.
C: No joke. For me it eithers works Pomodoro style or 8 hour straight no breaks. But that's prob cuz I have ADHD so Idk how that would work for a regular person. In any case I only get tired if the work is boring. Or I am doing 10/11 hours trying to meet a deadline.
C: It's pretty common. [https://www.joelonsoftware.com/2002/01/06/fire-and-motion/](https://www.joelonsoftware.com/2002/01/06/fire-and-motion/) "Sometimes I just can’t get anything done. Sure, I come into the office, putter around, check my email every ten seconds, read the web, even do a few brainless tasks like paying the American Express bill. But getting back into the flow of writing code just doesn’t happen. These bouts of unproductiveness usually last for a day or two. But there have been times in my career as a developer when I went for weeks at a time without being able to get anything done. As they say, I’m not in flow. I’m not in the zone. I’m not anywhere." "What drives me crazy is that ever since my first job I’ve realized that as a developer, I usually average about two or three hours a day of productive coding." This is from Joel Spolsky who is by all accounts a successful software engineer. I relate with that article a lot, and I've heard similar things from some of the most brilliant programmers I know. It's not just programming, every job where you do creative mental work is hard. In grad school (in environmental sciences, not software), my thesis advisor, who was widely considered the most productive faculty member in my department, told me that excluding busywork like e-mail etc. he did about 4 hours of real work per day. There's probably \*some\* people who can consistently hammer out 8 hours of code a day, but I think they are not the norm.
C: Sometimes. Especially right now. I've spent the entire day troubleshooting, and not just one thing. I have to keep switching back to Reddit (or something else) every hour or so to give my brain a break. It actually helps.
C: Problem is I take a break, and just have no motivation to go back and face that problem again.
C: I'm glad I'm not the only one then, I feel bad if I should be working 8 hours be realistically I'm coding for maybe 2-3 hours
C: Every coder I know experiences this (often daily). In fact, if you don't get this feeling often, then I'd say you're not challenging yourself enough! Hopefully you've got enough to do that you can just switch to something more menial when you feel burnt out. It's a great skill to know when you're beaten (for the time-being), and take a break/move on to something else. You'll also often come back and find the problem unravels itself. If you don't have a good mix of taxing/menial tasks, maybe speak to your manager or consider whether the job's right for you.
C: I think I should try that, I always stick to one task and end up wasting so much time being stuck on something. I should try doing something different that's easier
P: Do you ever feel overwhelmed by the sheer amount of programming you have to learn? How do you get over this feeling of being inadequate and that it will take a very long time to get to a point where you’re good?
C: Modern programming is very , very broad, that's what leads to some of this feeling, and even web development is overly broad, and honestly it doesn't have to be... Take front end , you have 3 big name frameworks (React,Angular, Vue) each one different each one incompatible and they all sit on top of the JavaScript engine. In the old days you just learned JavaScript with a lot less complexity and you were done.. and there's like a dozen less popular frameworks that do similar things,plus hundreds of libraries and plugins and everyone is using something different, and a year from now half of it will be obsolete and unsupported. I can't count how many times people want me to upgrade their Angular 1 projects, because one thing or another risnt working because it's no longer supported. On the back end same thing , just more language options. A lot of that functionality comes from html 5 standard and browser support. So much of this complexity is not needed. All that to say, yes there's a lot to learn because developers like to develop all kinds of solutions . I would start small learn the basics of the underlying tech, it's not that hard, html5 css 3, css grid, JavaScript,nodejs and or php or python then once you have a handle begin expanding your knowledge. Do some simple web apps , and then graduate to more.complex.. you'll soon find that just using a minimalist foundation you can do virtually any web app. In fact I would argue tpday it's more important to learn external apis and db storage systems as a complent to your basic knowledge. Here's a little secret web pages today aren't really that much "better" in terms of user functionality than they were 5 or even 10 years ago, and the end user DOESNT CARE HOW YOU BUILD IT. So learn the fundamentals and go from there.
C: I had the same feeling when I was starting out I think the biggest issue for me was seeing all these technologies and like you being afraid I didn't know even half of them or how to use them. As you grow as a developer, at least for me, you start to grasp an understanding not of every framework or technology, but the point of them. You start to generalize all these different technologies and they become abstract in your head. You don't need to know every detail on how each technology works but rather the general idea of them. Once you learn one, you can use that experience and juxtapose it with the technology you want to learn. Some examples that come to mind: Didn't know what an ORM was, then I started working with one. Now when I see other ORM articles about something like EF, I'm able to use my experience to basically fill in the gaps about what they're talking about. It probably does some things the same but some things differently and has strengths and weaknesses. Another is sql, whether it's MSSQL or MySQL, I have a basic understanding of the syntax. I work on MSSQL in my day job but can come home and work on a MySQL project because I generally know the idea. Not getting hung up on the details is easier. Backend technologies: I work in dot net but I've got a good understanding on how my backend and front end talk, so if I wanted to work with a backend that's built on a different technology I have an understanding of what I need to do but the implementation details may be different than the backend I work on has. Writing this up I realized that this sounds a lot like decoupling code (ie: a class has a dependency on an interface rather than a class). I need not know every implementation of something like an ORM, front end framework, or backend technology, I just need to know what they do and learn the details if I have to work with one. Once you build that understanding of how different types of technologies work, you'll find it easier to put all these different frameworks and tools into buckets where each bucket is accomplishing some goal or task.
C: The fact that you are able to see all of this stuff that you need to learn says you are on the right track. You can only learn so much at once so pace yourself. You will get there in time and with practice.
C: We are all just a bunch of idiots going beep boop beep bop all day long. You'll get there.
C: You need to learn the concepts, the design pattern, the best practice. All of this cum from experience. The language or a new cloud technology you will need to work on you will learn very fast after the firsts times. For example I learned angular, the next job I needed to use react and I have learnt it in 2 days. I’m only a junior backend developer and not so incredible
C: >Cum
C: > All of this cum
C: It’s overwhelming
C: The sheer amount
C: From experience.
P: If you've ever programmed a deliberately toxic feature into a popular program (minor or major) how did it feel? Did you care?
C: The company I work for specializes in MLM ERPs. I feel dirty everyday
C: This is a super interesting question, you should cross-post it to a larger sub or AskReddit. I'm interested in the answers
C: I don't know if that counts, but we made a product deliberately slower. Context: The project is a B2B service that had multiple iterations already and one of the first iterations simply won't die because some slower customers simply don't want to switch. Recently, we had to re-implement more or less the entire back end, which we did by basically building a wrapper around the new service and adapting the outward facing interface. Problem was: we've cut the response time almost in half - better speed was one of the selling points of the new service. So now these slow customers would never switch on their own and we had to maintain this old garbage forever! So we just put a delay-logic into the wrapper, so that the new-old service would have the same response time as the old-old service. Usually, I don't like these "features", but in this case, our customers were just lazy and some of them were actively endangering their own customers by pure neglect ("No, we can't use TLS 1.2, can't we just use HTTP? "). So forcing them to use a proper product doesn't seem too bad.
C: We recently made a project for a company where they wanted to track of thier sales and support staff was returning all calls they missed. This means each and every call is tracked and checked to see that it's closed. Employees are fully aware no doubt. But still, this type of policing leads people down a bad scamy path in my opinion.
C: We have a thing that Enables Features. It's a lie. It's Disables them. I loathe it and work on anything else.
C: I made a program that instantly filled your desktop with 0 byte text files named, well, every number for i in range (0,1000). I only did this to myself tho to see if windows flags it as a virus. Spoilers: it doesn't.
C: Bittorrent minimizing isn't a toxic feature, you don't spend a lot of time in the client while downloads need some time, you don't really need it in the taskbar.
C: Honest question: why stay? I don't mean to pretend "find a new job" is easy, at most that's true for a small fraction of programmers with a good location/resume/immigration status. But I'm curious how these places find their programmers if they do feel bad about it.
C: Sure, will do
C: persistence is what gets flagged mostly. make it so that it installs at startup and download through chrome and see what happens
P: What's "real" programming in a day to day job like?
C: School assignments usually come very well specified. They tell you EXACTLY what your code is supposed to do in all cases. In the industry, a lot of times we get assignments that are at least a bit underspecified. Say you're tasked with implementing a new feature. In a well-structured organization, a UX team gives you UI mockups and a PM has refined the ticket enough to include most of the obvious use cases, but it's usually not bulletproof. Part of your job involves figuring out all of the little details. There's also the architecture of the whole codebase to consider. There might be some "quick and easy" way to hack together some new feature, but if it's violating the architecture then that's no good. You often have to do things in a slightly more verbose way that respects abstraction boundaries. And if you're working on a serious product that you hope to sell worldwide, there are all sorts of extra layers you have to work with. You can't just throw text on the screen, you have to get translations made for every language you support. You can't just throw components on the screen, you have to make sure it works on all screen sizes, and that it's properly structured and tagged so that it works with screen readers, oh and also make sure you're not using color as the only indicator of something. You can't just throw data in a database, you have to think about security. You might have to make the application behave differently in different regions due to legal issues. In short, you're almost never doing these little well-specified tricky algorithm things, you're doing things that are much simpler logically, but having to navigate the architecture of a large codebase.
C: Projects typically go on for years. There's an intense development phase lasting a few months followed by many years of maintenance. The vast majority of code in the world is garbage. Most projects are done by a team. You'll be working in a shared code base. You should avoid entry level jobs that let you work alone; you won't learn that way. Here I describe what is often typical. #### Team * 3-6 programmers * 1 scrum master. Not a manager, but does similar work. * 1 Product Owner (PO). The PO is a part-time member that is a business person acting as a proxy for our customers/users. * 1-2 testers. My typical workflow bottom to top: #### Daily 9:00am 10-15 minute "stand-up" meeting. Everyone gets 1 minute to summarize their status. General discussion at end. Discuss blockers and request help if you need any, perhaps to pair with someone else. When at the office, we sit close to each other. We each work 1-6 days a month at home. Most work is done from tickets. You should work on one ticket at time, with a backup one in case you get blocked (e.g. waiting for someone else). You pick a ticket from a backlog, and when done you get another one. A ticket takes 1-4 days. #### Ticket workflow 1. Get ticket from sprint backlog. If none, ask scrum master 1. Git pull from "develop" branch and create new branch from it. 1. Write acceptance test(s) 1. Write code and unit tests, TDD style if possible. 1. Push to git and create a "pull request" (a request for a code review) 1. Your automated tests will be run by a build server. 1. 2+ programmers will review your code and will reject it or merge it. 1. A tester and/or the PO will test it. Your ticket will be marked complete. Some teams automate this step. #### Weekly grooming meeting "Grooming" meeting is where we add context to existing tickets in the main backlog: more detailed specifications, testing steps, estimation by vote. The PO is invited, but cannot vote on estimations. This meeting is not about schedule or prioritization. 1 hour. #### Once per sprint meetings Every 2 weeks we get together and discuss how the last 2 weeks went; what went well, what didn't. Then we make a TODO list of ways to improve and we start the next sprint. 1 hour. A day or two before the end, we also have a planning meeting for the next sprint, with the PO. 1+ hour. EDITS: many.
C: That varies and depends on the company\project, is this a 15 person startup? or a 100K+ person company. I work for a big company, projects are super long. and there are times when I can read code and documentation for weeks only to add 2 lines of code to the code base. but when I implement something new I would say that coding is the easy part after you understood what you need to do and how to do it.
C: I think the biggest issue is just how many people are working in parallel on a project. And well, that they are usually never really done. You often have to maintain a program and make minor changes years after it is released.
C: It depends a lot on the job. In a consulting company you'll find that things are probably more similar to university, with much more structured projects that have a start and finish. As far as complexity, it really depends on the project. Most of the work I've encountered in consulting usually involves building some web app that has a whole bunch of business rules in it, but doesn't extend to the complexity of having to do any huge amount of engineering for scale since usually that bespoke app will only be used by an internal department within the client's company. Sometimes you get some user-facing app build that's more exciting because it has more of an emphasis on UI, UX and scale. In product companies, you don't really have the same concept of projects. You just have these long running products and each sprint you'll just pick up feature and bug tickets to work on. Occasionally you'll have mini projects related to that product like building out a new set of related features, but they're much less structured in my experience because you have a lot more freedom in product companies to do R&D and figuring out what the best way to do things is without having clients breathing down your neck. Edit: The one thing that's most different compared to university is the level of polish. You are usually expected to deliver something that's very reliable and doesn't just fall apart all the time.
C: ok this is a pretty loaded. question, because it very much depends on what type of programming you do (web, mobile, middleware, games, iOt etc.) and more importantly what company you work for is it a large corporation or a start-up or are you a freelancer? Let's start with a typical corporate job, you typically assigned to a team of developers working on an existing software project that fullfills some business need of the company. You will need to work WITH PEOPLE , not just developers , but project managers, business executives.etc. Also large corporations have lots of standards and policies about what software stacks you can use, what applications you can leverage, tons of security policies and restrictions., you won't have root access on the servers, all software installed must go through some getting process or use approved vendor software. You'll have a compliance department that makes sure your code isn't violating some.corporate standard or legal regulation. Finally you'll have period code audit's, most if it is done automatically via software. Most projects can be ongoing for years , especially if the project is a software as a service for the company. in smaller start ups you typically are more on your own and have less constraints on what technologies to use, and how to implement the business requirements. Also its likely more of a chaotic development environment with constantly changing software requirements and higher intensity environment. You'll likely be working more closely with the founders and may have to meet many unrealistic deadlines to get your "software to market" or have it ready for an upcoming trade show. While it can be fun and stressful at the same time, there's no guarantee it will last, startups are notorious for fizzling out. You also need to learn how work and communicate with other developers. So yeah basically the Tv sitcom *Silicon Valley* minus all the comedic references. at the end of the day software development is like most white collar professions, working and interacting with people is often times more important than being a great code.monkey. Also in larger places realize most non techies aren't enamored with coding and to them it's just a means to an end.
C: You’ll work on a team. You take on a “story”, aka a requirement, and you work on that for a week or two or maybe longer. It adds just one small feature to the project and you do it again in the next cycle. You won’t be spinning up a new project from scratch every other week.
C: But like what's the average "scope" of a program in the work world? For instance an average assignment in my current Java data structures and algorithms course will usually entail taking input from a text file or from the user via scanner, doing stuff with the data (sorting, creating objects, doing things with those objects, etc) then printing to console or to an output file and a project may consist of 3-7 class files depending on the depth of the assignment. We are usually allowed to assume that the files and user inputs will be in the correct format, with bonus points on stuff for adding in code to handle incorrect formats via printing error messages and skipping error lines or try catching stuff, etc So is career programming usually done simultaneously by dozens or hundreds of people a la Google docs writing on steroids and could have anywhere from tens to hundreds of class files and filled with loads of code to check for and handle invalid inputs and outputs? Are corporate IDEs "shared" like Google docs so that multiple people can work on and edit things at the same time, or is like "Jim, you work on ClassNameAlphaOmega and Bob, you work on ClassNameBetaPhi" and all the files are on a network drive? What happens if you try to compile and run some tests on your code if it relies on someone else's code that they're working on currently?
C: Yes programming is done simultaneously by many people, but not by sharing an IDE google-docs style. Instead people use a version control system. The most common one at the moment is "git" ([https://git-scm.com/](https://git-scm.com/)) but there are others which are still in use in some places (SVN, mercurial, etc)
C: To build on the git answer regarding a tree-structure of code diffs for source control... Your Java assignment sounds like roughly the size of a new ticket of work that you might need to build in an existing codebase. In contrast to your assignment, the exact nature of the inputs may be only approximately known, the exact way to handle the unknown kinds of inputs is not at all known, the inputs may need to change in unexpected ways next month and you're going to want to be able to easily adapt your work to handle the change, and the choices that you make for how to handle those approximate inputs will have downstream effects (because your outputs are somebody else's inputs).
P: Music or No music while coding?
C: I have videos of non English speaking people cooking street food on in the background. If they speak English it just distracts me.
C: If I’m doing mindless copy/paste typing type stuff that just needs doing with little or no thought then music helps the task pass quicker. If I actually need to think about something then the silence and zero distractions are the best option for me.
C: music or pod cast... silence is deafening
C: I can only listen to music at the same time if there are no lyrics. I play a lot of aphex twin or brian eno.
C: Lyric-less music for me. Trying to think about coding logic while having someone saying things in my ear doesn't work. I can't tune out the voice. Go for Synthwave for the extra cool bonus hacker level up style points. And definitely wear sunglasses and a leather coat while sitting at your desk ( /s, but I was serious about the synthwave part)
C: Video game soundtracks!!! Videogame music is specifically composed to be pleasant to listen to while not being distracting. I find it makes for the perfect background music while coding. My all-time favorite soundtrack is a really simple piano score to the videogame Splice by a small indie studio called Cipher Prime, my playcount on it is well over 1000, and on one of the tracks it's over 2000 because one time I had it on loop(1) for several days without realizing lol. Some other games I like a lot are Stellaris, Starcraft II, Final Fantasy X, God of War, Ori and the Will of the Wisps, and Katana ZERO. The last one is significantly more upbeat/intense than the first ones. I would definitely suggest trying this genre in general if you like the idea of listening to music while coding but have never been able to maintain concentration!
C: That’s oddly specific. Any recommendations?
C: Silence is beautiful.
C: My favourites are [Dancing Bacons](https://youtube.com/c/DancingBacons) and [Tasty Travel.](https://youtu.be/ZIF4LLHlxI0) Other good ones are [StreetFoodPk](https://youtube.com/c/StreetFoodPK), [Yummy boy](https://youtube.com/c/%EC%95%BC%EB%AF%B8%EB%B3%B4%EC%9D%B4Yummyboy) and [ETTV.](https://youtube.com/channel/UCBU8GKSd4NY0wCdcalbaltw) Bit of a weird mix but I find them relaxing for some reason. I'm a chef who's studying python for a career change so maybe they make everything feel more familiar.
C: If I could get pure silence, it would be pretty cool.
P: After finishing a 4-year degree in software, now knowing how software works, I trust programs and software, in general, a lot less. Did this happen to anybody else?
C: Yeah. Also made me a lot more patient with how long it takes some bugs in games to get fixed.
C: This is why I want to see CS education in schools. Not everyone needs to become a programmer, but that education can make it clear that computers are not magic and that programs are highly fallible.
C: Definitely. It made me a lot more impressed with the complexity of video game development, but also made me realize how slapdash a lot of programming is.
C: [Somewhat relevant xkcd](https://imgs.xkcd.com/comics/voting_software.png)
C: I now trust nothing Edit: I feel this essay about software is relevant and excellent. I read it every 12-18 months. http://www.stilldrinking.org/programming-sucks
C: welcome to the club
C: You might find this interesting. The game Halo 2 had a developer commentary and he talks about one of them bugs that happens during the cutseen he couldn't fix and then another developer on the commentary tells him how to fix it. [Here](https://youtu.be/sBi_xx26ClM) is the link It happens at 2:40
C: I think the problem with the field is that software is considered so valuable that customers will take software that explodes from time to time over no software.
C: Thanks for the laugh :)
P: Question to any black people in this sub: What do you think of the recent terminology changes within the industry?
C: I'm Black, and it's not even worth discussing. There's large systemic issues with our current structure of organizations, that have nothing to with how we name our git branches. I really don't care for performative gestures until steps are taken to allow a more diverse set of individuals to make decisions, own stake, and be a part of organizations on a higher level than individual contributors. It's also not even a Black and White issue, it's really an issue that legislation prevents this. You literally need to be a registered millionaire to take a serious stake in a company, which I don't think many SWEs understand, otherwise, they would stop what they're doing and lobby government to remove these laws. I seriously don't care about git branch names. I care about having a diverse set of companies, ran by a diverse set of people, because if you notice something with our economy, it's not at all antifragile. We just have the same stuff funded by the same people, operating in the same exact way by trying to copy Google in an age where Google will never be replicated again, and we wonder why we have such large startup failure rates. Eventually the money will dry up and people will stop funding innovation through the standard means. CC Decentralized Finance because that area is booming exactly because there's lots of hungry money looking for anything that isn't the same exact run of the mill company.
C: [deleted]
C: That is interesting and something i haven't thought of, thanks for bringing this up and curious to see some opinions
C: > blacklist/whitelist to "allowlist"/"denylist". Those are really awkward for some reason. I accept that they're changing but I vote for safe list/block list. No idea what we should call "greylisting" now though. "Delay list" maybe? Although greylisting in email/SMTP is different from greylisting in telecom/SIP which is more allow but warn. Will be interesting to see if all of the RFCs that will need to be updated settle on the same replacements.
C: >You literally need to be a registered millionaire to take a serious stake in a company Could you please elaborate on this? Which laws prevent non-millionaires from having a stake in a company? How does one register as a millionaire? Thanks in advance.
C: To me this sounds like empty platitudes so the companies don't have to do changes that really matter to its workers.
C: This is literally 99% of these things. A big public display of "virtue".
C: Yea lists, nay list, may list. "Safe list" seems too have too much of an implication to it.
C: They are referring to the SEC’s rules related to accredited investors. In order to invest in certain types of investments, such as venture capital, you need to be a millionaire or make $250K annually. The rules were recently updated to also support those with certain training/certification.
C: Gotta get that virtue signaling going some how. Instead of, you know, taking actual long term steps to fund and support programs that encourage and train POC to get into the Software Engineering field.
P: Has anyone else spent a long time implementing a solution to a problem only to discover there's a language feature that does exactly what you need?
C: I’d call it five hours learning about the feature and how it might work underneath, and truly understanding what that feature’s benefits are
C: It shows you had a good intuition on a clean way to solve the problem and just lacked the tool that would make it easier. It's much preferable to the inverse, where you throw language features at a problem while ignoring a simpler implementation. For a mechanical analogy, it's like using a spanner to remove a wheel because you can't find the proper socket. You'll feel a bit dumb when someone shows you how to do it easier, but you're still better off than the guy who brought out an angle grinder instead.
C: Sure.. it's happened to me.. it's a lesson to do you research before investing Dev time.. but sometimes you justc miss it.. it happens
C: The ruby language , and RoR , got me once, real good, days!
C: Wow, awesome advice thank you! Turned my perspective around on what I saw as a waste of time.
C: I did this once with C#'s [FileSystemWatcher](https://docs.microsoft.com/en-us/dotnet/api/system.io.filesystemwatcher?view=netcore-3.1). Wrote a whole class that periodically scanned a targeted directory, checking when the files were last updated, new, or removed, then broadcast an event to inform listeners of changes. Then by chance a few weeks later, I read something off topic to this where someone mentioned reliability issues with FSW and how it's not 100% reliable. Then I went back during a refactoring session and rewrote my class that did the same thing only using a timer instead of relying on system events like how FSW works
C: hm, doing research before dev time is an interesting idea. i usually try to mentally map out the path i need to take (when working on an existing project, when buildign from scratch there's a whole design phase that would cover this). &#x200B; what do you usually do in the research to make sure you're aware of everything? &#x200B; the problem is i dont realize i need a particular implementation until i run up against some sort of error.
C: Yeah, I think as long as you're learning something new, you're not wasting your time! I spent 12 hours over the past 3 days working on adding OpenFaaS to our k8s development cluster, only to realize at the end of the 12 hours that it was gonna be more of a hassle to work with OpenFaaS compared to our current implementation. It could be considered wasted time, but now I understand a pretty widely used, very cool piece of technology!
C: Personally before I start to implement anything really complicated I Google "Do complicated thing in language" to see if I'm reinventing the wheel. But you can go years not knowing about some random thing that would make life easier until someone mentions it. It just how it goes haha
P: Why is C++ such a controversial language?
C: When people approach a big language like C++ with fear instead of curiosity the most likely result is that a lot of people would hate the language. Also, the part that C++ is heavily criticized by big personalities like Linus Torvalds makes a lot of people cargo cult around it, instead of learning the reasons why. Some of the critics are old, some are based in misconceptions about C++ like "C++ is a weird mess. My new language would increase productivity 50 to 80% over it" well yes, but only if your problem is in the same set of the new language targets. And that part of "**My** new language", C++ is not made by one person anymore, C++ doesn't serve the interest of a single person or a single company but instead a large and diverse group of developers in all kind of industries. A single person can't design a language for the same user group as C++ anymore (and also ISO standardization is a big plus in some industries). The story of C++ is interesting because *in spite of* everything against it, it is still one of the most successful languages. A lot of big personalities trash talk about C++, even big companies like sun and ibm did their part to trash talk about C++ explicitly, some universities care a lot about what ""the industry" says and listened to them making professors and new students hate the language as well, and even C++ didn't have a big financial investment. So, I think is controversial because of fear and disinformation. ["C++ is there because we can build good systems for people" - Bjarne](https://youtu.be/_wzc7a3McOs?t=3354)
C: Google: Did you mean “How to start war in r/AskProgramming”?
C: The answer is C++ has a wide group of programmers who are aware of it and all of them have very different preferred styles of programming an unconscious biases because of it. If you pardon me I'm going to talk in the language of this [talk](https://www.youtube.com/watch?v=mZyvIHYn2zk) on the perverts guide to programming languages. So C was, in the beginning, a language that was primarily chosen for its productivity it was a more productive assembler and thus the programmers who chose it were mostly psychopathic not really interested in rules but mostly just interested in getting the job done. C doesn't have some kind of coherent mental model. C++ is a language that came along to try to add abstractions to C in order to make it easier to express ideas.C++ is a hysterical fork of C. Philosophically, this is more to like if python was implemented on top of PHP. Afterward, C changed because languages became more friendly in general and the crowd around C became more interested in proving they could deal with the lack of expressiveness and handholding in C. In the language of the perverts guide, C became masochistic. C++ has due to its long history lots more ceremony and tasks that don't appear in say python and ruby and thus attracts lots of obsessional programmers. So, yea C++ is a hysterical fork of a masochistic language that used to be psychopathic and itself is more obsessional because of the march of time. All these 4 groups of people fight about C++. The psychopaths find the focus on abstraction pointless. The masochists can't show how disciplined they are by using new abstractions so they don't like them. The obsessives are focused on the minutiae of the language to the annoyance of everyone and the hysterical are busy making a statically typed python. &#x200B; Edit: Woot! Thanks for the gold kind stranger. Hang Loose!
C: C++ is not the only language that is regularly shit on by developers. JavaScript is another example. What do these languages have in common? * They are or were widely used in industry * They provide many ways to write bad code.
C: First of all, some context for those quotes. The Torvalds quote is like 20 years old, when C++ was a much worse language than it is now. Torvalds has even softened towards C++ in recent years. I doubt he'd say something like that today. Jonathan Blow is frankly talking out of his ass. C++ is the industry standard for game development for a reason. And he has no metrics at all to back up his claim. In fact, his language isn't even publicly available yet. However, C++ is a weird mess. It's a massive language, backwards compatible with C for the most part, and with older versions of itself. For this reason you see lots of weird edge cases and duplication of features that you don't have in other languages. Some of the complexity of C++ is unavoidable though. Things like having no garbage collector. For the domains that use C++, where things being performat and real-time are important, a garbage collector is a non-starter. So you basically have to deal with the memory yourself, which seems like added complexity to people not working in those kinds of domains. A lot of people also don't learn C++ very well, and end up hating it because of this. For example, in the C++ class I used to TA, the profs would tell kids to just use `new` and `delete` everywhere, when in reality you should be stack-allocating most stuff. So the kids are getting all these errors about invalid pointers when they shouldn't have even been dealing with pointers in the first. Also, I'd take things your profs say with a grain of salt. They likely haven't coded in 10+ years at least, and professors generally aren't very pragmatic people. There's a reason why C++ is very widespread despite all its flaws.
C: To be fair to Torvalds, he said those things some 20 years ago. He's not nearly as critical of C++ anymore as he once was.
C: It's important to note that they have the second problem for very different reasons. For C++ it's because the committee has literally tacked on every programming language feature they've ever heard of leading to the language becoming incoherent. There's a difference between having a language be unopinionated and having it try to include everything and having every codebase and every programmer's knowledge be inconsistent. Dr. Stroustrup himself has written that there is a smaller, cleaner language inside of C++ waiting to get out or something similar. Frankly it just needs to be replaced by a leaner language that provides just some basic abstractions over C. If D hadn't failed due to its mandatory garbage collector, it could've been that language. On the JavaScript side I think the problem lies heavily in automatic type conversions not always behaving as would be expected as well as equivalence not behaving as expected. The simple solution there is just to make all type conversions explicit(i.e. by typecasting) and not trying to compare unlike types. In any case, JavaScript may as well be a case study in how not to design a dynamic type system. And its heavy usage in industry was only because until relatively recently there was no alternative.
C: I have to wonder if people who criticize memory management in C++ are unfamiliar with the smart pointer features in the newer standards. I worked on a project that switched to smart pointers and it all but eliminated memory management bugs like dangling pointer access and memory leaks. What's really impressive about it to me is that C++ accomplished this: 1. With no garbage collector overhead 2. Really, with no overhead at all (unique_ptr) or very, very little overhead (shared_ptr) 3. With very clear semantics about when an object will be destroyed and its resources freed. This is a problem that plagues garbage collection languages
C: It's crazy the range of programming style you can have with C++. You can be in a file one minute and looks basically like it's C99 with overloading. Then you come across some polymorphic mess with virtual functions coming out the wazzoo and auto's everywhere. When there is such a wide range of styles people are going to hate it for exactly that reason.
C: That and the attempts to add closures and std::function and trying to be object oriented, and functional, and procedural and work at high at low levels of abstraction all at once. And the other thing is, it's fine to have those features if they're presented in a consistent manner but no C++ has to make 5 things that are radically different all have weirdly similar syntax so that: 1. You can't remember all the features and there's no intuitive way to figure them out from what you do remember. 2. If you type something even slightly wrong the compiler may give you an incorrect error because it assumes you're trying to do something other than what you actually are. (I'll admit compilers have gotten a lot better of late. Shout-out to Clang++.) But other than its inconsistency, I like C++. For someone who knows how to use it, it gives you the power to do whatever you want however you want to. It was my first real programming language and the one I know best at this point. It will always hold a special place in my heart.
P: Does Anyone else feel the Industry is Overly Obsessed with Scrum?
C: Process is great. It helps you coordinate and maximize output. Minimizes waste and rework. Great! But many, many people I have met have more of an obsession with the process itself, rather than with the results it produces. This leads to perverse incentives and weird behavior. Its incredibly common on project managers, because process is their only point of control - so they try to optimize process instead of outputs.
C: A lot of famous companies used Scrum in the 2000s/early 10s and then a lot of people started thinking that if they implement Scrum/Agile in their companies, success would magically appear. IIRC Spotify posted about their scrum routine and suddenly a lot of companies started copying, including using "Squad" to define teams. Not only that but a lot of managers started using the Scrum in order to get more control over the development process, disregarding agile values to their benefit. Agile lost its meaning over time, it was to programmers get more control over the process and deliver what brought value to clients and now companies use this to their gains. Ask how many people here had to create a lot of features not because their clients asked, but because their marketing team really wanted. Or if the opinion of the clients on the software is more valuable than the CEO. Honestly, i know about agile but i always know that in each company i will have to adapt myself to their style of managment, even if they call Agile or whatever is the hype of the moment
C: Welcome to corporate life where buzzwords are king. There were sigma six and parrots and all other shit before scrum. There will be all sorts of other dumb shit throughout your career. When the salesman sell the C suite on something...
C: >And the thing is, it's not that complicated. In fact, it's pretty simple. If you are seeing this, you are going to go far in your career :) The thing is, even with CS and the higher salaries, its full of suckers and people who just "check of boxes" in doing things without thought or question on whether or not its right or correct. Scrum got sold to companies as a great way of [insert business jargon here], so now its a thing that everyone parrots, and people are scared to go against the grain.
C: The way that I see is that we have the ppl that, indeed, do the things and the ones who like to pressure and control the workers. That's why agile methods are a thing, every decade some small change is made and names are changed, but what do they look for? The best quality in the small amount of time and resources. So yes, the industry is quite obsessed with any agile methods and Scrum is the hype.
C: It's still relatively new. My company only officially started agile 3 years ago, even though there were grassroots teams for a few years before that. Companies spend a lot of time making sure something isn't a fad before adopting it. It took a long time to trust this would work in other contexts than a startup-style environment. The vast majority of working developers did not learn agile in school. Companies are accustomed to providing training in that case, and somewhat unfortunately, consultants drive a demand that often goes a little too far because it helps management feel better. If you had worked pre-agile, you would know it's not intuitive for a company to work this way. They very much tend to centralized control and big design up front, with long release cycles. It's a *very* different way of working. Developers took to agile relatively naturally. Bringing the rest of the company along is an ongoing struggle. Even though there are some scrum purists, agile in general is intended to be adapted. Scrum should be thought of as guidelines to get you started. Guidelines that you discard only with very careful consideration, but still mere guidelines. In my mind, the only required parts of agile is small iterations with fast feedback, and some sort of continual evaluation and evolution of the process. If everyone was doing agile identically, they wouldn't really be doing agile. Variation is an expected part of the process, even among different teams in the same company. Along those lines, if parts of it feel "religious" and like they aren't really providing any value, you should definitely bring that up in retrospectives.
C: Scrum addressed a well-nigh universal observation that imposed dates and workloads didn’t work. Scrum gave dev teams direct control over workload, and in exchange, management got better estimated delivery dates. This worked fantastic in the early days, when enthusiastic early adopters were willing to _surrender_ that control to their dev teams. After a while, my observation has been that later adopters want to cash in on the hot “new” thing, but are unwilling to give their developers any democratic control of the process. I’ve done “scrum” for 20 years; but I’ve only ever done _scrum_ once. When managers today say “scrum” (or hell, even “agile”) what they really mean is, “I don’t want to write a PRD, SRD, or even a roadmap. And I want to throw stuff at the developers on a whim and have them hop to, because we’re _agile_.” Every time I join a new scrum team, it’s like a little heartbreak.
C: And they don't realize that some processes are simply not suitable for scrum and hope that scrumming hard enough will solve all their problems. Bad example 1: an engineering shop (like, the mechanical type) wanted to implement scrum because agile and now they have to weirdly chop up their stories because "waiting six weeks for the shop to manufacture that one part" doesn't really fit in scrum. Bad example 2: a project in my company who's modus operandi is basically chaos, since they have to juggle 20 deadlines at once. They tried to switch to scrum and now they "abort" their sprints all the time and groom for hours because some manager shifted all priorities. This project is screwed anyway, but they're trying their best to at least let it go down with a proper scrum board.
C: "Blockchain!" &#x200B; Yeah people will get used to this. You work in the field for a decade and you realize the only real process is "Coffee + Salary = Code".
C: maybe a little alcohol
P: Could aliens reverse engineer TCP/IP?
C: > Sorry for the off-the-wall question. I think that fits perfectly within the scope of this subreddit. Plus, I'm sure the people here love something other than "why doesn't my code work" and "what language should I choose for this project?" It's fun to get programming-related questions from other contexts!
C: They have figured out English, so given that I'm going to say sure. Packets have lots of repetition, especially in the header, so I'm going to say our alien sock hoppers are up for the challenge.
C: I'm more optimistic than some of the others. I think it would be pretty straightforward to pick apart enough of a TCP connection to have some idea what's going on. How exactly they get the stream will make a difference. If they pick up wifi signals from an orbiting human spaceship, I think that would be impossible. The signaling rate is very high to try to pick anything out with 50's electronics, and there is a lot of channel hopping RF weirdness to something like WIFI. They might detect a small amount of static noise, but they wouldn't be able to identify a signal. But assuming they had a log of 1's and 0's and didn't have to pick apart the physical layer, they'd probably be able to get something out of it. Since the premise is whether aliens can figure out TCP, and not whether they can figure out Wifi (or Ethernet)... https://en.wikipedia.org/wiki/Transmission_Control_Protocol#TCP_segment_structure shows the header format. The source and destination port are constant for a single transaction, so you don't need to understand it deeply if you've already got a single TCP conversation to examine. The binary encoding is straightforward, and if they have a lot of examples to dig through, they'd probably figure out that dest port = 80 is unencrypted because the payloads have patterns, and dest port = 443 is encrypted because of basic frequency analysis. That would suggest they should focus their efforts on stuff where the conversation starts with the second 16 bits having that value. Things like the exact checksum algorithm -- I'd guess their top mathematicians could figure that out, but it's not necessary for reading the stream. You only need that for sending data that is valid, or validating possibly corrupt data. For general reverse engineering, you can skip it. The SYN ACK SYNACK pattern is 100% consistent when creating a connection, and had obvious bits set, so that part would be pretty straightforward to figure out. Especially if you've got some ability to steal a piece of human gear and cause it to try to connect to things on command to generate arbitrary amounts of test data. The general length of the headers vs. the payload would also be pretty easy to figure out if you've got enough example packets to study. When downloading plain text, the values after the header range are always constrained to a certain range of valid/normal printable ASCII characters. And you could differentiate probably text downloads from larger binary downloads based on the length of the TCP conversation - an MP4 file download will be many more packets, and with 1950's computers being used for the analysis, you'd work on short complete streams first. Figuring out that we use 8 bits as the basic unit of data transmission would probably be a bit of a guess at first. There's no reason it has to be true. But it's a fairly small number, a convenient power of two, etc. So it makes sense that they'd figure out byte alignment fairly early after trying 5/6/7/9 bit alignments for interpreting the data and finding that conversation bit length % 8 is always 0. Again, that depends on having multiple examples to look at because any given stream could have an even number of bytes if you tried to assume it had 5 bit bytes. Since I think you could get a decent estimate for the boundary of the header vs the payload when downloading plaintext, it's probably that they could figure out the data offset field from those streams, and then use that to pull payloads out of non-ascii downloads as well. So, a few fields would be WTF's. HTTPS would be a lost cause. Figuring out what is in an MP4 file would exceed their compute capacity. But the bare minimum of TCP traffic analysis is probably possible. They could probably do stuff like read email on port 25 if they had a way to capture the packets. Once they know it is text, and they know English already, figuring out enough ASCII to read most plain text is a simple Caesar cipher. Kids could almost figure out that for fun. It helps if they know that the name of their own planet is likely to be in the text, or some stuff like that that can be helpful for guessing ASCII values. They might well get some of ASCII wrong. If the corpus they use for reverse engineering is all written by a jackass who constantly types IN ALL CAPS! Or ends every! sentence! with an exclamation Point! They might mix up . and ! or mix up upper case and lower case. But they'd plausibly be able to get far enough to get the gist of it. If saving their alien planet depends on connecting to human hardware and speaking the full protocol, rather than merely being able to get some useful information out of it, you need to master sequence numbers and checksums and acks. That's harder. Not necessarily impossible, but sort of a EUREKA moment in the bath tub while smoking a pipe for some parts of it. I can easily believe them never getting it after years of work. I can also believe the Bletchly park team that figured out Enigma in the 40's looking over some papers for five minutes and spotting patterns immediately. But even the crazy geniuses that cracked Enigma had several years to build custom hardware at the very limits of the technology at the time. It wasn't just one all-nighter.
C: Not impossible but profoundly difficult. A big part of deciphering unknown data is having some guess as to what to look for. Assuming the payload was ASCII character data for English text the aliens might eventually figure out how a byte corresponds to a letter, but even that would be difficult because the first letter of the English alphabet 'A' is 01000001. An alien would eventually recognize that 0100 is some sort of prefix for letters, but it would be a stumbling block. There's also a lot of data in the header of a TCP/IP packet. A lot of that header doesn't make much sense out of context. If you have no concept of an IPv6 address then you've just got a couple long, random sequences with no idea how long the sequences are. Think about how long it took to decipher ancient Egyptian hieroglyphs. People stared and hypothesized for hundreds of years about what a bird, an eye, and maybe a snake meant, and that's with advanced knowledge of what a bird, an eye, and a snake are. They had plenty of context clues as well like where the hieroglyphs were found. Real understanding didn't come about until a key, the Rosetta stone, was found. Maybe that could be a plot point for your story?
C: Assuming there's no encryption, they could at the very least extract the plaintext data from our messages, but they wouldn't even have an ASCII table, so they'd have to reverse engineer a lot more than just the transport layer protocols.
C: I think this is the coolest question on here in a while.
C: Aliens intercept Beej's Guide to Network Programming. The Beejetta stone.
C: \^\^\^ Found the account of the extraterrestrial alien fishing for info. (/s)
C: Whaaaat? There's no aliens or proud, noble lizard people here!
P: Is it me or has Google's search engine gotten worse?
C: A lot of people blame SEO but over the last few years google have started implementing some algorithm that tries to guess user intent. For example, when you search `ant` it tries to guess if you are searching for the animal or apache ant. They also added horrible auto-exclude words feature that again is trying to guess your intent. So you add quotes, hopefully trying to force the search into finding appropriate results but it This fails miserably weirdos like us know what we're searching for. Google has gotten better at predicting user intent for the majority of searches. But for more technical and precise queries it fails. It is also forgetting the old web: https://news.ycombinator.com/item?id=19604135 I miss the google of old.
C: Yeah, search results in general have gotten worse over the past few years as more people learn how to use SEO to promote their shitty content. I keep finding these bullshit generated scam/virus pages. So not really Google getting worse, more the content google is searching has gotten better at gaming the system.
C: The other thing that has gotten worse is the sheet number of ads that come before search results. I often have to scroll below the gold to find something that's not an ad, which is atrocious.
C: someone pointed out that google's basically just pushing their own stuff up front now, rather than anything useful. and it's something like either 2/3rds or 3/4ths of the stuff on the page is some kind of google module, and the rest is the stuff you're looking for. Which i was then able to prove in subsequent searches. So, yeah, their search stuff has been suffering a ton lately
C: Google just sucks now. Algorithmic personalization was a horrible idea because people's views change. Censorship was a horrible idea because now you have no idea what Hitler actually believed other than disagreeing with every Redditor in existence on every topic simultaneously. Promoted content that's not marked as such was a horrible idea because now page one is flooded with speculative article websites swamped with ads instead of concrete data. It's just one bad decision after another and unfortunately we were left to reap what was sown. Almost every big search engine followed the leader and made the same mistakes too except maybe Qwant and some other new/obscure ones. I'm honestly tempted to make my own like my friend did because at least we do have a paddle whilst abandoned in the ocean.
C: Wait, you guys using Google?
C: Yup, went for an adventure finding an old YouTube video about why gold was selected for currency. It took a while but I eventually found it. Another problem is that the title of the video had nothing to do with currency. ["Why Gold? Why Not Argon?"](https://youtu.be/6148H7sx360) Horrible SEO but decent video. The top results for SEO optimized stuff cited an article about this video that didn't cite this video. Fun times trying keywords to get this video eventually.
C: Yeah. The old google was pretty good. I remember the times.
C: I only use yahoo answers personally.
P: Cracked 1000 EUR/USD software in a couple of minutes. Should I report it and ask for a bounty?
C: Yikes, you stepped right into the middle of a legal minefield there.
C: Inform yourself about the laws regarding hacks/bugs/finding leaks in software in your country. You could get sued for blackmailing if you are going to ask for money.
C: There's a chance they may not care about the software being cracked (for example, they rely on B2B deals instead of selling it directly to regular consumers). This would mean they don't lose anything/much by people cracking their software and may gain more by suing you for "damages".
C: maybe you could sell some of those serial numbers to pay for the lawyer you're going to need
C: Firstly, cracking a software regardless of your intentions might be illegal. This depends on the company rules of bug bounties some just does allow it at all. Secondly you should have just asked them in email if they have a bug bounty program instead of saying directly that you've already reversed engineered the software and want to disclose it.. Hoping for you that company is forgiving as you just told them you are guilty in breaking their software.
C: Better ways of bounty hunting than giving away the issues you found for free? hm, let me think ....
C: I think you should have asked if they are interested in bounties before cracking their software. Cats out of the bag now though
C: More importantly you can get in trouble just for breaking their system, regardless of intent.
P: I accidentaly wrote C++ in my CV insted of C#. How fucked am I?
C: I don't really think it's as big a deal as others are making it. I've had interns on my teams who were just starting out. This was their first time using the language we use and first time writing real code for a real company. They did fine and learned a lot. We don't expect an intern to come in and start contributing right away. It's a learning experience for them. I would probably still correct it if I were you, but if I were the company you sent it to and you sent me the correction, I'd think it's not a big deal and continue with the process anyway. The programming language is not what I'm looking for in an intern. I'm looking for the willingness and ability to learn as well as basic programming concepts.
C: Presumably this is not the only language on your resume? I would fix your resume and if (when) it comes up during an interview, be prepared to address it then. "I've done some self study on C++, but I'm a lot more comfortable with C#" Back in my school days the there was a whole department dedicated to getting students internships. You probably have a contact there, so ask them!
C: I def don't agree with the rest of theses comments. Don't send a correction, that just makes you look bad. This is an internship. They hardly expect you to know anything. Just study the basics of C++ and pointers and you'll be fine. Any syntax you run into on the job that you don't know, you can just Google it. No big deal tbh
C: I see most of these comments are on the extreme ends - either you're screwed or it's a non-issue. Personally, I'd say it's in-between (though I wouldn't call the first case "screwed"). If you applied for positions for C# development, then it's possible that since you don't have C# on your resume, you get passed over in favor of a candidate that does, all else being equal. If you applied for positions for C++ development, then it's possible that you get selected in favor of a candidate that doesn't have C++ listed, all else being equal, and you either learn C++ well enough to succeed or you struggle and you don't get invited to a second internship or full time position and get put on the do-not-rehire list of the company. Neither case is the end of the world unless you applied for an internship associated with your dream job. I personally wouldn't worry about sending corrections in now, but correct it and maybe mention it should you get an interview. As someone who has dealt with people whom have lied on their resumes, I wouldn't be too happy to have you tell me you know C++ and then be completely unfamiliar with the basics of C++ compared to C# or even at least the basics of pointers. But as others have said, for an internship I would't necessarily care that you know the language so if you tell me during an interview that you accidentally listed C++ instead of C#, I probably would thank you for clarifying that and proceed without giving it much of a thought. It would only really come down to if everything else points to you and someone else both seemingly being equal in all regards but the other candidate knows the language and you don't (which wouldn't be any different than if you had put C# instead of C++ on the resume in the first place). But if you tell me you know C++ and then your performance shows you don't, that's not going to go over well. Consider, though, that the worst case for an internship would again be simply we wouldn't invite you back.
C: Very. Good luck learning pointers, starting doing C++ myself - a lot to take in.
C: They're completely different languages, so... You may want to send a correction.
C: You also have 2 words spelt wrong in this post. I am not trying to be rude, but I do want to point out to you that you really need to slow down and take your time.
C: It's not necessary to use c style pointers for most task in modern C++
C: This. I wouldn't recommend trying to "fake it until you make it". At least from my perspective, it would look better to admit that you made a mistake than to try to hide the mistake. If you hide this mistake, what other kinds of mistakes would you try to cover up after I hire you?
C: I disagree. Fake it until you make it is quite possibly the best way of learning new things. It's hard to progress if you never step out of your comfort zone. OP now has a really good excuse to study hard and learn *lots* of things s/he didn't know before.
P: I'm in a secret santa, all I know about my person is that they're a hard core programmer. What's a good practical Christmas gift? What would you ask for?
C: - A rubber duck (also see Rubber Ducky Method on Wikipedia) - Notebook with a (possibly multicoloured) pen - A Raspberry Pi (really small, but capable Linux computer) - Stress relieve ball for the down time moments - Laptop stickers related to tech - Small whiteboard with markers - Sticky notes Hope this helps you, I tried to find some things for various budgets!
C: Most things are probably expensive or op already has. Maybe a programming joke shirt?
C: The largest thumb drive of a major brand that fits in the price limit
C: ESP-32 board https://www.adafruit.com/product/3269 Teensy 4.1 https://www.adafruit.com/product/4622
C: A+ on the rubber duck. The [Google dinosaur](https://www.androidpolice.com/2019/03/08/chromes-offline-dinosaur-is-now-an-actual-toy-you-can-buy-and-it-is-outstanding/) is another good one.
C: 10/10 list, thank you. I'm excited to check these out.
C: oh my god sticky notes yes
C: It can be expensive if it's worth it. I mean, less than like $2,000.
C: A rubber duck is perfect.
C: If that's the case, a badass keyboard or mouse, even a raspberry pi computer (they can be used for many things, I have 4).
P: People who work or have worked for Microsoft, do you have to use BING and Edge, or are you allowed to use chrome or firefox?
C: My friend works for Microsoft, and I think for their internal websites, he prefers to use Edge. But otherwise he mostly uses Chrome. I don’t believe any one choice is forced upon on you.
C: I worked in a building that was half Microsoft engineering. I remember when the Windows phone and first Surfaces came out. We would laugh because every MS person we saw in the elevator had an iPhone or an iPad.
C: There is never an arbitrary requirement to use Windows, edge, bing, etc.. engineers use what works for them. Source, engineer at Microsoft.
C: Ever since getting the COVID vaccine, the voices in my head have instructed me to only use Microsoft products and services...
C: Edge is basically Chrome anyway. It's not worse. Both are nice to use. And that's coming from a old school Firefox guy
C: Can confirm. I know someone who even uses Linux primarily. Microsoft makes a lot more than OS. So cloud people don't necessarily work using windows for obvious reasons.
C: Ya, I'm pretty sure Bill Gates uses a Samsung now
C: So some people even use MACs and MAC OS?
C: This had me laughing. How much Xboxs have you gotten? Im up to 12
C: I don't see too many, but they are there. Probably close to the overall mix for developers broadly. Same for Linux (though lots of wsl for those of us not ready to commit and too lazy to dual boot). Really though, there aren't rules of what is allowed, just rewards for good outcomes... So people do what works for them...
P: Do you guys also spend hours on stupid mistakes ?
C: Yes. So many hours wasted. The worst is when you solve it in like 5 minutes the next day.
C: You’ll get better as time goes on, for someone without a half dozen years of experience this is normal. See imposter syndrome.
C: This is really just about debugging experience. The more experience you have the quicker you'll be able to use your tools to track down small issues, and you'll make less minor mistakes to begin with. You'll start to understand the black boxes when you start reading source code, which inevitably comes when you reach the edges of documented use-cases. If/when you begin to stray outside of the common applications of the frameworks and libraries you're using, it will become necessary to read and understand their code to make them do what you want.
C: I spent 3 hours debugging because I didn't realize I was comparing a string to an int once.
C: This week I spent 2 hours banging my head against the wall, because a service would not connect properly to another, only to find out I was just using the wrong hostname. I have a CS education and over 15 years experience. Go figure :) > I know what they do but not "How"... I hate these black boxes. So; experiment. They are not black boxes. They are just software. You either become one of many developers who always bitch and moan about "magic" or you become a proper specialist that knows his tools in and out.
C: Sure. I ended quite many workdays on the notion of _"well let's just go home I can't solve/fix this right now"_. Then the next morning I look at the code and see the obvious mistake immediately. It's always a little oof moment. But there's progress after all. I have a few coworkers who stress themselves too much about situations like this. That's not good. I'm always of the opinion that it would be good for you to leave the problem behind yourself once you exit the doors. At least that's better than being in panic at night over stuff you cannot control.
C: Wake up and immediately have the solution. It’s annoying yet a blessing.
C: The worst is when you call a colleague who just look at your screen and point out the issue in half a second.
C: \> Wake up and immediately have the solution. It’s annoying yet a blessing. The amount of times I found a solution simply by going to the toilet or grabbing a lunch. Usually you just need to leave the freaking computer to clear your mind. Thats not easy since you just wanna keep hammering away code at the problem hehe.
C: Yep. Brain is just like any muscle in the body. You can over work it and it will get tired. You need to get away every so often and let it relax. I try to get away from my desk and do something else; joke with close coworkers, go get a drink, walk, and so on. But if I have a big problem I'm trying to work out and can't it will sometimes come to me in my sleep, in the shower, eating dinner, who knows. It's one of the things I like about programming.
P: Hi, I am a female software engineer (fresher) and I am terrfified to code.
C: I believe almost everyone have those feelings of not wanting to ask "dumb" questions irregardless if you are male or female. I was one of them, what helped me was thinking that "is it better I ask this possibly dumb and basic question now or in 3 months?" (Hint: the answer is usually right away). What usually helps is if you tried yourself before asking and asking more specific questions: "I have looked here and tried this but don't know if I'm correct nor how to proceed, can you/someone help me?"
C: Some of the best developers I know are women. Ask questions, learn, and grow. I'd rather work with a person that asks questions than one that doesn't fully understand what tasks are about and we need to fix the code after them. We can't all know everything it's fine to not know stuff and trying to learn it. And at your level there will be a lot of new knowledge for you.
C: Hi, female software developer here. The answer is not to suppress "silly" emotions and just code. Focus on yourself and your own abilities. What is it you don't feel confident about? What steps can you take to feel more confident? People don't care if you're asking beginner questions, we were all beginners once and even those of us who aren't still have to look things up. I've been a developer for ten years, I have a batchelors and a master's degree and am about to start on a second master's degree and I still find I am googling things I learned at the start of my career because it goes completely out of my head! Anyone who does dismiss you for asking "stupid" questions isn't the kind of person who deserves your headspace. Ask questions, it's the best way to learn and advance. If you can, maybe see if someone in your company can mentor you, or maybe a friend?
C: I’m a female dev and I’ve been in your exact situation, however it was the fear of failure that forced me to ask questions. I was promoted from helpdesk to design & dev because I showed an aptitude for coding. I had no qualifications and it was simply up to me to learn on the job- however it was up to my male colleagues to train me. Some of them were nasty and patronising, others were helpful and supportive. It is hard and scary at first, but just start asking - you’ll find those who are happy to help and avoid those who are not. 7 years later I’m now Lead Dev at a small agency. However I still prefix my questions to anyone with ‘I’m probably being thick’ or ‘stupid question alert...’. A little self-deprecation goes a long way! Also be grateful - don’t forget to say thanks. Despite the bad experiences I’m still grateful to those colleagues - nice and nasty - who showed he how to do stuff. Good luck!!!
C: Woman to woman, you have to be okay with asking questions. If you're still young in this field, the only thing separating you and all the other noobs will be your ability to communicate and learn. Your fear of looking stupid is only going to stunt your growth. If you ask someone a question and they treat you like you're stupid because of it, that person is an asshole and you should limit your interactions with them.
C: Stop seeing gender at work. Keto telling yourself that with enough determination you will succeed, because that's the truth. You should mostly see people who will also not care about gender at work. Some people will be assholes though. Try not to take it personally. Also we all get the impostor syndrome when we join a new team, can't contribute yet, have a ton of questions and take up everyone's time. It's normal to suck the first few weeks or months, and it's normal to feel very bad about it. I wish you all the best. With you joining the ranks maybe the myth that women don't code will evaporate slightly sooner and there will be far more good software developers around.
C: We need you. It’s male dominated because people are afraid to join the industry. We are missing out on amazing talent because of this. And women are missing out on a fun and fulfilling career. I’m 41, a guy, and I have been in the job for 22 years. I am not confident in my abilities, but I crack on, and so should you.
C: Regardless of gender, when someone asks me a question at work I typically view them as more capable than I did prior to the encounter — not less. Asking good questions shows me you understand the problem and to what extent you understand the problem. It highlights the communication or knowledge gaps that led to the problem, and I usually walk away from the conversation knowing more myself. As to the fear that you may appear incompetent due to your gender, it’s just like the old saying:“Those who mind don’t matter; those who matter don’t mind”. If you find yourself under additional scrutiny because of your gender, it’s more likely a sign of a toxic culture than indicative of any personal flaw you have.
C: To add to this when you have a question, write it as if you were writing am email. "I want to do X, I tried abc and I expected it to do 321… but it gave me 123… why?" Usually actually writing out your thought process will lead you to the follow up question(s) that you can answer yourself, lead you to more questions to answer, or sharpen your understanding to a point where you're asking a precise question that shows you understand all the fundamentals. If you do this you won't feel dumb.
C: I was given one piece of great advice by my boss at my previous job (paraphrasing because I don’t remember the exact wording): don’t sell yourself short by saying something like “stupid question alert”. Your good at what you do, you’re smart, and you’ve proven yourself. You’re only hurting yourself and making other people doubt you when there is no reason for them to do so.
P: How do i cheer up / build confidence in a depressed interviewee (i am the interviewer)?
C: Just wanted to say well done to you, we rarely see people like yourself anymore!
C: If possible, try to give them the idea that you've already made the choice that you will hire them. Focus on the responsibilities at the job and how they will handle them. For programmers, the most important trait is that they're resourceful. This is something that's hard to test for in an interview, but by focusing more on work situations, you may get a glimpse for how they tackle problems that they encounter. Good programmers will immediately start looking for possible solutions Now there is a chance that this person isn't very resourceful and that they're not very good at coming up with solutions to problems they face. In that case, they will be more nervous when talking about work situations, so if you can't make them comfortable, chances they aren't going to be a good employee
C: Be honest and open. When interviewing avoid "gotcha" questions or academic style "So what's the upper limit on an array?" or something but shoot for open questions that perhaps don't even have a definitive answer, but will encourage the candidate to have a discussion. Ask them the kind of thing you will expect them to face in the job you are hiring for. How would you scale a web app? What do you look for when building a service? Tell me what your ideal average work day is? that kind of thing. I actually encourage this kind of interview for everyone anyway. I want to hire a person who is going to ask questions, and who is willing to discuss problems and solutions and an exam isn't going to tell me that. Be sympathetic to their situation but also give them encouragement by not focussing on it. Just tell them you are sorry to hear they are feeling the pinch and leave it at that. If you focus on it at all they are likely to start thinking it's besmirched their reputation and will negatively impact their chances.
C: As a currently depressed interviewee, I think the best thing you can do to gauge his abilities is just let him talk about his accomplishments at past jobs and give him space to speak. For myselff, when I'm in a depressed state of mind, it can be hard to get outside of a pattern of thinking I'm worthless or unhireable because I don't know everything about tool x specified in the 5th bullet point of the job description or scripting language y. When I sit down and start having to talk about everything I've done at past jobs, I start to realize I've accomplished much more than I think and maybe I'm not completely worthless. I think getting him into this more positive frame of mind and making occasional remarks that make it seem like you're genuinely interested ("tell me about that", or just an encouraging nod) will give you a better chance to see if he would be a good fit for the job or not.
C: I was a severely depressed interviewee while looking for my first job in this field. In one horrible interview I had, I had to first talk to a big picture asshole who made everything seem far above my abilities. Basically made me feel like I was wasting everyone's time. Then I talked to the guy who knew what I would be actually doing, and the job sounded like a great fit. I could have done it. When you are describing the job, know exactly what the applicant would be doing, and talk about the core content of the job so that it sounds manageable. I.e. be the opposite of job adds. You are looking for an ordinary professional to do certain usual thing with ordinary people, not a super genius to do vague etraordernery things while leveraging synergies with your leading team of experts.
C: Agree with everything youre saying but You have to be careful here. Someone who is having a hard time and you give them hope, then pull it away it can be very traumatic for them. I wouldn’t give them the impression that they have the job, but that they have a legitimate chance. We know this person is under stress, but we don’t know how much or what their limit is.
C: >If possible, try to give them the idea that you've already made the choice that you will hire them. But i haven't made the choice. I still need to interview him first. >by focusing more on work situations, you may get a glimpse for how they tackle problems that they encounter This seems like a gold idea, will try this.. Thanks for your inputs! I think i have few problem statements that can help me evaluate on this front..
C: This is terrible advice. Never, ever give anyone the idea that they have been selectedif it isn't true. It is heartbreaking for the applicant if they aren't successful and can lead to claims of inappropriate hiring practices.
C: I think commenter just meant make them *feel* like you have made the decision to make them feel more comfortable. Not actually tell them they are hired.
C: As someone who thought they got a job only to be ghosted that can hurt. I would instead try and reassure them that they were chosen to interview because you think they're qualified and have a good shot at getting the position. This prevents them from feeling like they were lied too and potentially gives them confidence in future interviews as they might feel if interviewer X thinks I'm qualified then I'm qualified.
P: How come its either C or C++, how come C+ never caught on?
C: I don't think "C+" was ever a thing? The "++" part of "C++" refers to the "increment by 1" operator of C, so the name can be interpreted as something along the lines of "next after C" or "C plus one". Which makes sense, given that it was made as an extension of C.
C: Why C# and not D♭?
C: Those senior developers lied to me!!!! The prank war is on
C: [deleted]
C: Fun fact, C in itself was supposed to be a joke name, as the creator of C was also the creator of the [B programming language](https://www.techopedia.com/definition/34054/b-programming-language) about 10 years earlier. Also, [there's a programming language called D](https://en.wikipedia.org/wiki/D_(programming_language)) that was initially meant to be a replacement for C++ (but ended up turning into its own thing). There are also a bunch of other programming languages with similar names, including A+ (yes, just one +), A.NET, ABC, B, C\*, C--, Ch, C\_0, Lite-C, D, E, F, F#, F\*, G-code, J, J++, J#, K, M4, M#, P, P4, P'', Q, Q#, R, R++, S, S2, s3, T, Z notation, and Z++. ([here's](https://en.wikipedia.org/wiki/List_of_programming_languages) a link to the source) So honestly C+ wouldn't be unusual for programming language naming conventions. &#x200B; Edit: Then if you want to learn about *really* obscure languages with really weird names, you can check out [EsoLangs](https://esolangs.org). My personal favorite is [ASCII Dots](https://esolangs.org/wiki/AsciiDots). For anyone who doesn't want to click on the link, this is a program to find prime numbers: %$T . | # 3 | @ 1 | /--*--*-<--\ | | | /+----\ | # | v+-0@-~-\ | 2 | /->~*{%}/ | | | | 1 |\-+---/ | | | @ ^\ | \-{+}-+-* 01 | | | ## | | v--*+-/ | | || /-* | *+--\ | T | || | # $ # /~/ | 0 # 1 */ | | | | | | \->-+-~----<-#$-2#-. \-/ /--------\ T | *--------~ | | \-*----@[=] | | \--#1--/
C: Oh, that's funny! I thought you were being a wiseguy with the question, but they actually got you with this?!?! Kewl. I hope you find a fitting revenge.
C: I'm gonna make a new programming language: C+. Named after my data structures grade rn
C: Im just gonna assign them lots of code reviews and hide their favourite expresso caps from the coffee machine so they can't have any
C: Whoa there, Satan 😂
C: Espresso
P: Lead Engineer was just drafted
C: Socks. Buy him socks. And decent underpants. The issued stuff will probably be crap. His mates might also have some good suggestions. Other than that, if the company offers good life insurance and pension, then his wife might appreciate that if he gets killed.
C: I knew an Armenian guy who joined a PhD program to avoid this. You might also be able to help him move to your country and get PR, if he's willing to do so.
C: You can spread the word about the war and get more people informed. Also if you really want to help you can tell those people to go on Armenia’s webpage and donate to supports our soldiers. I’m really sorry that this happened. A lot of young guys are being drafted right now and the only reason they haven’t drafted me is because I don’t have any military experience.
C: Money. Money alwayls help.
C: Holy fuck, they doomed him. The fighting over there is brutal with Azerbaijan. Hopefully he'll have more of a technological focus because of his career and won't be used as yet another pawn under artillery and machine gun fire. I'd recommend giving him a glowing letter of recommendation to raise the chances of that happening.
C: Thank you for your kind words sir. how are you otherwise? are you safe?
C: I really hope you're wrong and that my friend survives the war.
C: We are okay the whole country is just depressed and we are all working together to donate to our soldiers and residents in Artsakh
C: I hope so too, do anything you can to make sure he uses his technical expertise and stays away from the front line.
C: drafting the letter as we speak!
P: What's a useful programming concept that you learned in cs that most self taught programmers just miss?
C: Time complexity. Using a nested loop scares me now
C: The feeling of knowing everything day one after graduation.. I jest, being a self taught 10 years in I am keen to hear what people have to say.
C: I had a couple of courses during university, but my degrees are actually in maths and physics. Still, there are some topics that I'm very happy to have learned about and see self-taught programmers struggling with: \- Design Patterns. Specifically Inversion of Control, Adaptor, Observer, Null Object, Singleton \- Broad base of different languages with different programming paradigms, e. g. learning about declarative programming from Prolog gave me a lot better understanding of what is possible with abstractions \- Some data structures (e. g. hashes vs. lists) \- Logical operators and how they behave (even simple things like "not (a and b) = not a or not b")
C: I graduated over a decade ago and in general the main things it seems self taught programmers have no clue about are: * Automata / state machines * Compiler theory (a lot of the above) * A lot of esoteric data structures and algorithms * Simple predicate logic * Digital circuit design / system design / CPU design * Operating system concepts Everyone seems to know "how to program" and time complexity, but know the above concepts allows you to program well. E.g. 6 months ago I was working with a customer integrating to our device, and they'd sent me their code to help out with. I happened to look at an unrelated part that dealt with their own API and it was hideous. Had they understood what a finite state machine was they'd have massively reduced the number of lines in that piece of code and it wouldn't be some horrendous callback hell.
C: As a self-taught programmer, I remember one time I was talking to a friend who had a PhD-abd in CS, and describing this sorting algorithm I'd made up for myself that had the property of being in linear time under certain circumstances. He listened, and then after said "Oh, you've invented a radix sort". So, two things you can get from a CS degree - familiarity with a LOT of knowledge and insights (and terminology) that you would otherwise spend a lot of your own time perhaps reinventing, and your reinventions will be incomplete compared to the real thing (I didn't invent a generalized radix sort, but a limited one). I don't mean those two things to be an exhaustive list, mind you.
C: Not quite an answer to your question but... I’m a self-taught programmer who started coding at the age of 14. 22 years later, I’m the Software Engineering Manager for my employer. However, I still feel that because I don’t have a degree or more formal education, that I’m “lacking” in a number of areas and I feel that it is this reason alone that I’ve not been considered for a number of other roles in the past. This year I’m undertaking a CS degree to fill this void with a hope to be taken more seriously, should I apply for other roles in future.
C: The breadth of knowledge is tbh it for me. Most of it useless until it isnt.
C: Does recursion also scare you? o:
C: The imposter syndrome sounds familiar..
P: My friend made a well recieved piece of code months back about minecraft server. He has passed and I need help understanding how to take his server over
C: I'm sorry to hear about your friend. I'm not an expert on AWS because 99% of my experience is in Azure, but I htink your friend had an AWS EC2 instance (https://aws.amazon.com/ec2/instance-types/). This is a virtual server running on AWS. He specified the id for that instance in a configuration. This script then connects to that instance, using his credentials, and runs minecraft on it. That is why the IP changes - the instance id remains the same, but every time you ask AWS to give you a server for that instance, it spins up a new one and gives it to you. Beyond that, no real clue - it's open source; maybe post an issue on the repository explaining the situation and one of the people who has contributed to it will take it over? What you would need to do to take it over is create your own AWS account, your own EC2 instance, and get the id / credentials for it and set this script up to run with those.
C: First of all, so sorry to hear about your friend. Your post revealed his name and through his name I saw that he had a very similar path and death as person I went to school with (an ambitious software engineer taken too soon in a kayaking accident). I was frankly pretty shaken up when my classmate passed away, I can only imagine how you're feeling. Fortunately, given the circumstances, it looks like your friend open sourced his project and you can preserve his code by doing something called a 'fork' on Github. This will create a copy of his code that you can continue to modify and update if you or your friends want to. It looks like your friend has already had about 40 other people do the same thing so they could either contribute to the project themselves or keep their own version. It looks like he had 3 other contributors: [https://github.com/trevor-laher/OnDemandMinecraft/graphs/contributors](https://github.com/trevor-laher/OnDemandMinecraft/graphs/contributors) To make your own fork you'll need a Github account (free) and then follow these instructions: [https://help.github.com/en/github/getting-started-with-github/fork-a-repo](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) (most of it can be done via the UI) To make changes you'll need to learn a few things or work with someone who knows them including a technology called 'git' and the software language Python. Fortunately, these are really common tools (assuming you aren't familiar with them already). Once you've created your Github account, you can create the fork from here: [https://github.com/trevor-laher/OnDemandMinecraft](https://github.com/trevor-laher/OnDemandMinecraft) What the code appears to do (based on the README) is launch a Minecraft server on AWS automatically after you set up a configuration file (it's technically a Python file), so to actually use it you'll need an AWS account to learn a little bit about what EC2 is and the costs associated with that (they are generally minimal, but be sure to do some research first). This is a link to the pricing for EC2 instances: [https://aws.amazon.com/ec2/pricing/on-demand/](https://aws.amazon.com/ec2/pricing/on-demand/) There's a ton of information on that page, but to take 1 example, if you wanted to use a t3.large server for Minecraft you would pay $0.0832 per hour or about $60/month. I don't know offhand what you need to run Minecraft, that might be overkill. Hopefully that's enough info to get you started. I'm pretty familiar with all the technology he used, if you have any questions please ask. I'd love to help more.
C: I'm sorry to hear about your friend. I'm familiar with AWS and happy to help if I can. Please reach out and we can see how far we can get.
C: I've spent the last 2 days going through this repository to implement the same thing for me and my friends during these quarantine times. I'm very sorry to hear about your friend. It's truly a gift being able to impact people's lives - specially when we are gone. Hopefully you can find some solace with this.
C: So this is open-source code. All you need to do is fork this code by making your own github account, and actually go through the process of running and operating the code yourself. It's likely the existing server will run out of money before you can get AWS to shift it over to you, which they probably won't. Just take the code and maintain it yourself.
C: I'll give it a whirl I'm not the most tech-savvy with this type of stuff. So I am going in blind. AWS I wonder if I can just get his account info and to transfer it to me and to my bank account. I'll probably need to transfer the domain he uses from whichever place he bought it from. I just want to keep this thing alive since he isn't. Thank you very much for the info ill try to see how the people on GitHub could help.
C: Thank you very much. I'll see what I can get from customer support on these websites for URL the AWS and if any other places if Github needs it. If I cant I can get the info from his family but if I need something from them id like to know what I should ask for so i dont waste time. Telling me all this means I can get the info set up. Thank you
C: Thank you! Ive sent some support tickets to the various places and see where i can get. I will gladly take help if things dont work out.
C: If you're in contact with his family, the credentials you need are almost certainly on his computer. Now, it's quite possible that no one can access the computer, but if it is possible then the process would be pretty trivial, as you'd have all the credentials you'd need to prove you ought to be able to claim this server, namely the Access and Secret keys in configuration.py. From there it would be the simple matter downloading the minecraft server files, then setting up your own AWS account, and setting up a new Heroku app, for which the steps are remarkably well detailed in the GitHub repository. I wish you the best of luck, and I'm sorry for your loss.
C: Ok
P: Which books have substantially helped your programming abilities?
C: The big ones for me were: * The Pragmatic Programmer * Design Patterns * Code Complete
C: Effective Java by Joshua Bloch. The ideas in that book extend far beyond Java and even object oriented programming in many cases. Much of the advice centers around making the interfaces between components of your program as simple and well documented as possible. With simpler interfaces, tests are easier to write, tasks are easier to split off to different people, refactoring causes fewer heisenbugs, and more.
C: Clean code, by uncle Bob, only book you really need
C: Stack Overflow.
C: Introduction to Algoritms, by Cormen
C: Read other people’s code.
C: Algorithms, 4th Edition by Robert Sedgewick and Kevin Wayne. The book gives a nice visual overview and a great explanation of important algorithms.
C: This is such a good book, i recommend it to everyone. I've hardly written any Java in my career but this book was still invaluable.
C: Be careful with this one, lots of good but also a lot of very Java specific or OOP specific patterns. Some of it is also a bit dated. Would still recommend, but having just read it recently (after 6-7 years professional experience) I was expecting something magical and it’s not quite that.
C: https://images.app.goo.gl/gwUJBuYoyshL2Xfs8
P: Agree or Disgaree: Competitive/ timed programming is not a good indicator of how good you are at programming?
C: Agree. Even if you can come up with a solution to a problem quickly, that doesn't mean that it is a good solution (maintainable, easy to read, testable).
C: Competitive programming helps develop an ability to recognize which algorithms are able to solve the problem at hand, and to be able to implement them in a time efficient manner (along with other similar "low-level" stuff). Understanding concepts like pros/cons of various data structures, and time complexity of various algorithms, etc, certainly points towards someone being a "good" programmer. But, the problems depicted by competitive programming challenges do stray a bit away from things you might encounter in the "real world", at your standard programming gig. The main aspects of a "good" programmer are to be able to produce something that solves the problem at hand, quickly. And in the real world, this generally means knowing how to use various libraries together to accomplish more complex tasks quickly. No employer is going to want you to spend a week perfecting some home-brewed implementation of functionality that is readily available from open sourced code. By maintaining such a "low-level" focus, like competitive programming teaches, I feel like it's easy to overwork solutions to problems that could much more quickly and easily be accomplished by using some library, or copy/pasting from stackoverflow, allowing you to more forward with other, likely more important, aspects of the project. I guess it depends on the definition of a "good" programmer. Is it someone who knows the ins-and-outs of the language, and has a good "fundamental" understanding of programming, or is it someone who can produce the most value for the company in a short amount of time by being able to piece together various existing components to do more complex things.
C: I don't get this competitive programming craze, been programming for 15 years, but that's just me.
C: What does one mean by "good at programming" exactly?
C: It's not a good indicator. Sometimes good design takes time, you could throw together some bullshit that functions but is completely unmaintainable but that doesn't make it better than someone's code that is easy to use and readable but might take a bit more time to develop.
C: those last 3 points are so much more important than wrote memorization and single-liners. unfortunately competence in algorithms generally is directly related to other programming skills but something like a take home project would show a lot more. you can analyze the testing, solid, dry, documenting, maintainability, etc. it's basically "this is what my PR would look like" and you can glean a lot from that
C: > But, the problems depicted by competitive programming challenges do stray a bit away from things you might encounter in the "real world", at your standard programming gig. A good example of this is when a colleague of mine was working on a filter option for our app. I thought a bitmask would be a great solution and suggested it. At first she disagreed but then took it on and did a FANTASTIC job implementing it. I never had the heart to tell her, but a year later I regretted it all. It was just unnecessary. We didn't use any of the bit utilities she built anywhere else and while it was easy for me to extend, new developers to our team had no idea what was going on.
C: I can see it as a test of mental acuity under pressure, like speed chess. Besides, if there are chili pepper eating contests or chasing rolling cheese down a hill competitions...why not coding ; )
C: Can produce a relatively efficient, easy to read, testable solution to a problem I guess
C: As a bullet chess player I love the comparison. It's a completely different game because while the rules are the same, time plays a much larger part, and you can use strategies you otherwise wouldn't.
P: I recently discovered Vim and it's amazing. What other great tools are there in the programming world, that beginners might not know about?
C: - `man` is freaking underrated, seems like people rather use SO/websearch (same for documentation) - `redshift` - obv. learn the basic tools such as `dd`/`cat`, `tac`, `uniq`, `sort`, `tr`, `xargs` etc. - learn how to use regex (for `sed`, `grep` etc.); but also learn when *not* to use regex! - `ktrace`, `strace` or whatever else there is depending on the OS - netcat (ie. `nc`) & `curl` - for analysing binaries: `radare2`, `ROPgadget`, `objdump`, `readelf`, `strings`, `ldd`, `file` - switch to Spacemacs ;) - use vim-bindings for your shell & REPLs - use tmux with `\` as prefix (UK layout) - tiling window manager - rebind your keys (I swapped esc & caps, right-shift to switch to last used workspace in XMonad, use PrtSc as modifier for certain combos to have utf8 symbols) - searchcode.com - IRC
C: Tmux.
C: For webdev vsCode is great. es-lint prettier git lense
C: jq - bash json transformer (pretty print, filter fields, validation, etc) home brew - life changer for installing things on OSX (brew install java, now java is installed and fully configured) spectacle - not a dev tool but super convenient for window management on OSX. Move things between monitors, line windows up, etc. zsh - a shell that provides an easy way to add plug-ins (auto completion, etc) and terminal display/coloring. Also I recommend getting comfortable with basic bash and a .bashrc or .zshrc file. Learn to alias functions for common tasks. (For example ssh into all instances of a specific ASG, using AWS cli, jq to parse response and bash to wrap it all up) so then myapp-prod opens a terminal to each instance.
C: Most any linter. Linters are great for keeping your code clean, possibly pointing out bad practices and (if you work with others) keep your code consistent with teammates.
C: GNU Screen or Tmux. Either of these gives you the ability to have multiple comments-line virtual sessions from one terminal window, and quickly switch between them with a key or two. The best part is you can detach from it and reattach. How I use this: I start Screen on my main development server, then create new virtual screens and ssh to other servers that I might be to connect to. When developing I can easily create a new screen and do things like watch log output (sometimes I have dedicated screens for certain logs like web access, web error..), search for something, edit other files... Then I can disconnect at the end of the day and reconnect the next day, picking up where I left off. Oh you can also connect to a single Screen/Tmux session from multiple windows, so it’s easy to see something side-by-side or monitor something. I also use this at home on my Synology, with log file watch on various things, and curl/wget on other sessions so I can start a long download from my phone and disconnect while it’s running. Personally I use Screen mostly, but only because I’m used to the status line (which I enable) and the key commands. I also change the escape keystroke to ctrl-W so it doesn’t interfere with emacs-style text editing key (ctrl-A).
C: Oh boy, once you use a proper IDE you never go back. I am 10x more productive than on vim with the jetbrains suite. Features that i use the most: - Automatic refactoring - Go to definition / Go to implementation - Usage search - Type and context aware autocompletion I know vim has those, but they are rudimentary and often have false positives, and the interface in the terminal is a lot clunkier than a modern GUI. I only use VIM when i SSH into a server now.
C: +1 for actually answering the OPs question instead of stating your opinion on how your preference is the best editor.
C: You can enable IdeaVim and you have all the vim key bindings in IDEA, which is the best. For some reason I still prefer vim over CLion for C++ though.
C: > once you use a proper IDE you never go back. I went back every time.
P: What proportion of your time 'working' do you spend actually doing work stuff?
C: To be honest, i would be surprised if it is 50%
C: I feel you. I struggled with that in the beginning but then i set up a system and schedule that would allow me to focus more and bring down my distraction time. Don't get me wrong the amount of deep work i do has still taken a hit but at least i managed to contain the damage. Also as a rule of thumb i like to think that 3 hours of deep work a day is actually a good day's worth of work. The rest can be spend on unimportant and/or unurgent tasks
C: In my 6 years as a programmer, I rarely reached 90%, it was only during projects or tasks that were extremely interesting. I would love to be absorbed by work during work time, but it never happens.
C: All the time, except bio/coffee breaks or stupid meetings. 7-7:30 hours from 8. What about "working longer" - its a very bad, destructive habit in my opinion. Knowing you have fixed time to show yourself teaches you to be efficient, cheating with "I am not happy with my results today, so I'll just spend few more hours" - total opposite, makes you slow and lazy. Also for good work you need to have good rest. Working longer takes that rest away and hurts your next day work results. Of course, sometimes there is a situation where I am forced to stay for longer time (some outage in the evening, for example), but such situations are very rare. In a usual day I have 8 hours to show myself and that is. If I did good, that's good, if I did not - well, I can't be a winner every time, better luck next day. :)
C: There's been some studies done on this subject. > A UK study of 2,000 full time office workers found that the average employee spent two hours and 53 minutes working a day. Social media, news, personal calls and messages and socialising were reported to have significant negative effects on productive hours during the day. Yet, 54% of those surveyed said the distractions made the working day ‘more bearable.’ https://ercouncil.org/2019/chart-of-the-week-week-8-2019/ Granted that's not limited to just developers. In 2002, Joel Spolsky (co-founder of stackoverflow) wrote a now semi-famous [blog post about his own productivity](https://www.joelonsoftware.com/2002/01/06/fire-and-motion/) (and apparent lack of it at times), where he states he has 2-3hrs of productivity on any given day. > I usually average about two or three hours a day of productive coding. When I had a summer internship at Microsoft, a fellow intern told me he was actually only going into work from 12 to 5 every day. Five hours, minus lunch, and his team loved him because he still managed to get a lot more done than average.
C: It’s hard to say, because I spend a lot of times doing “nothing” or doing light chores, when at the same time I’m trying to solve an issue in my mind. If you count the time i’m actually in front of my computer coding or doing administrative stuff it’s about 50-60% but it’s difficult to quantify the other part
C: 12 years writing software, I'm not even sure how many of those years were professionally. There have been times I've worked nearly 30 hours straight with a few naps in between (our mobile app was severely falling apart and I just decided to rewrite it), and there are also times I don't spend more than 2 hours in a day but got something done faster than estimated. Its not about the time. If you got something done that day, or got closer to getting something done, you can't really let it get you down. I once spent a week trying to fix a nasty UI issue that was caused by a broken 3rd party library, and I was happy if I even got a different error by the end of the day. Don't work longer. If you got something done in any capacity, just end the day. You'll manage your time better if you set constraints to your work day and spend time after doing the other stuff you want to do.
C: I was going to say the same thing. Only few days I make it to 80-90%.
C: 50% average. I don't know about you, but for me it varies a lot from week to week. I have 10% weeks and 90% weeks.
C: I totally agree with this. Would also add there is nothing more frustrating than working on a project and slowly being asked to attend more and more meetings because some colleagues are booking time off at random intervals or having extended breakfasts / lunch and leaving early because they feel that logging in at 7 to do online shopping or whatever it is that they are doing is somehow "working" because they are using company property and checked a few emails first.
P: What would a cat use programming for?
C: You might know that cats don't have [object permanence](https://en.wikipedia.org/wiki/Object_permanence), so object oriented programming is completely out the window. As well as global variables must go (or at least allowing functions to modify global varaibles must go). The only things that can change are the things immediately in front of you. Cats don't do anything until absolutely required, this you may call being 'lazy'. This should be reflected in your programming language as [lazy evaluation](https://en.wikipedia.org/wiki/Lazy_evaluation). Cats have seven lives. Your programming language should tolerate errors exactly 7 times until it halts. Basically, act like javascript for the first 7 errors and just slap some default value or just ignore that line. One you hit the 8th error, crash over the most inane thing like adding an integer to a float. You could even require semicolons, but only after the first seven non-semicoloned line. I might think of more but I gotta go back to work.
C: Meow
C: Don’t do it. This will be how 2020 ends
C: "Pet" and "Owner" should be aliases for "Master" and "Slave"
C: Object oriented is a no-no, but cats store objects in boxes, so some box-like [] data structure makes perfect sense. Cats don't do anything unless absolutely required, lazy evaluation, that's a great property.
C: I think it's 9 lives, not 7. Which means you should ignore 8 errors.
C: Meow is an expression
C: Clearly this means that cats prefer functional programming languages like Haskell.
C: Okay, but do we start counting cat lives at 0 or 1?
C: `if (!meow) meow;`
P: How come the "new" reddit and the official mobile app for reddit are both so inexcusably bad in terms of user experience?
C: Tradition. Reddit has traditionally gotten worse UX as time goes on. Eventually site leadership will make the site completely unusable to all but the most dedicated virtue signallers and astroturfers.
C: Old.reddit.com it's alive and well and. I love it. There are baller third party reddit clients most of them hid reddit ads.
C: I personally use Apollo and love it.
C: There's a phenomenon known as second-system syndrome where an organization's next design after a first, successful one will tend to suck. I don't think there's a single root cause. Things that contribute could be: * overconfidence * core functionality is considered been-there-done-that, doesn't receive focus it deserves * interested parties have specific, niche irritations with the first design, put undue focus on fixing those * the company has money now, let's hire a bunch of consultants. Whoops, they are incompetent. * first design was nice, but could it be more profitable? Let's degrade the user experience in the name of monetization. We already have a user base anyway, where do they think they'll go? * some of the founders really were insanely competent tech people. Now they are upper management and thus can't contribute anything useful to the company.
C: From work experience with second versions, I would say that much of it comes from massively underestimating the workload and complexity of doing the second version. The second version is essentially a waterfall project. You have the first version working as a shitty gigantic requirements specification and the second version must have more than feature parity to go live. None of that agile minimum viable product nonsense. It’s all in and then some, irreversibly, one night while the users are sleeping. Alternatively you can have two-versions-one-db hell, in which you pray for the day when you don’t have to maintain the old version anymore and can do things sanely in the new version.
C: It's amazing how fast old reddit loads while new reddit I always see the stupid loader
C: Yep I refuse to use new reddit. Give me something usable over something pretty any day.
C: I use it and can’t say I love it, but it’s better than official.
C: >some of the founders really were insanely competent tech people. Now they are upper management and thus can't contribute anything useful to the company. I've found this to be the main issue at the places I've worked. That and non tech managers seem to cheap out on programmers.
C: Did you pay for it? If not you're missing out on a lot of the good features. Apollo is by far one of the greatest apps I've used on any phone, in usability, design, function, etc.
P: To all the self taught programmers, how did you learn.
C: Study. Lots of study. Books, tutorials, classes. No magic!
C: I'd watch YouTube tutorials, then come up with a challenging, yet doable project in that language. Then I'd do it. Wash rinse repeat for the rest of them. For example, every time I start a new programming language, I always do a chatbot. Usually in the console, but sometimes in a UI or something. It's easy to a build a simple one, and they can always be expanded. Good luck!
C: Picture yourself learning woodworking. Even if you have all the resources, you'll need to learn and practice a LOT before doing something with great quality that you would buy. We tend to think programming is different, because there is an abstraction layer so that we don't need to practice things like painting or sawing, but the truth is that we have to practice harder, because there is way less muscle memory involved. Start with the basics and try not to rush. Remember It's better to get stuck on something than copying a solution without understanding it.
C: You dont need to build an app or a website from day 1. Always start with a 'hello world'. Take incremental baby steps. Its easier (and more fun) to know what you want to build, break it down in smaller pieces then search the internet for 'how to' videos rather than trying to learn entire languages at once. It does take 10,000 productive hours to be good at anything. Persistence is the key.
C: I mostly did tutorials and learnt newer features while trying to make demo applications, and games.
C: start writing code
C: Picked up a challenge that is beyond my skillset, in my case was to deploy a working website with custom features for my business, and break my head figuring out what to even google to achieve that. Also helps that I have an obsessive tendency.
C: This one. The internet wasn't real big or useful in this regard when I started out and I literally read every book in the computer section at the county library. And I practiced, a lot, and tinkered, a lot. Until my toy programs started being real things. Then I convinced someone I could do the work and took on bigger problems. Rinse and repeat.
C: This is what my university did when teaching us multiple languages, many years ago. “Here’s PHP, now program a chat bot.” “Here’s JavaScript, now program a chat bot.” “Here’s java server pages, (ugh) now program a chat bot.” Etc. It was annoying at the time, but In hindsight, a good idea for getting the basics down.
C: As someone who has occasionally dabbled in both woodworking *and* programming... this is it.
P: What was your biggest “it’s not a bug, it’s a feature” moment?
C: This doesn't really answer the question, but a while back a team implemented a fairly large feature into one of our products. Then two weeks later the entire feature was missing. When asked why, the developers told us that they found a bug they couldn't figure out so they got rid of the entire thing. Face. Palm.
C: I was deeply annoyed by some of the quirks of javascript, like their counterintuitive type equivalencies (NaN =/= NaN, etc)...basically everything on [this list](https://github.com/denysdovhan/wtfjs). Over the years I've been forced to admit that a lot of it makes sense given the deeper structures of the language (NaN is object, not string...note the strictness of your equality operator) or at least you can see why it works that way. I regard the many different ways js can solve a given problem to be a feature for my uses, though some will still say bug.
C: [https://realpython.com/python-pass-by-reference/](https://realpython.com/python-pass-by-reference/)
C: I have many that aren't so glamorous, but [this monstrosity always gives me a chuckle.](https://www.youtube.com/watch?v=zd9KN2TD25s)
C: I always thought the `_` (single underscore) and `__` (double underscore) in python was some aesthetic shit until I figured it was how Python understood private items/properties! And to this day it feels like it's a design bug. Despite touting "one correct way to do things", Python often has several ways to format a string. It's only matter of time before it becomes 21st century Perl.
C: I’ll admit, I’ve done this in game development for smaller features
C: The code can't be broken if you don't have any code ;)
C: > NaN =/= NaN This REALLY makes sense actually. You wouldn't' want the result of say an overflow to equal the result of dividing by zero. Actually you don't want it to not equal either, but if those two are your options, js definitively makes the right choice here.
C: > like their counterintuitive type equivalencies (NaN =/= NaN, etc) Unlike most other flaws in JavaScript, this one is not the language's fault. JavaScript, like most other languages, uses the computer's underlying hardware to represent floating point numbers and chips implement [IEEE 754 floats](https://en.wikipedia.org/wiki/IEEE_754-1985). That standard specifies that NaN != NaN and your computer's CPU itself implements that directly.
C: It would probably make more sense to regard NaN as a set, with elements for each type of NaN. A code could reasonably want to terminate as soon as it sees any NaN, or maybe try and handle cases where NaN popped up from some numerical issue differently from cases where it resulted from things being undefined.
P: Why a lot of software engineers say "javascript is garbage"
C: Javascript is not a well designed language (but that can be said about a lot of popular programming languages). Few examples: * variables are global by default * the way objects and "inheritance" work is way different any other language in use (ES6 classes improve things, but they are just a facade on the old system) * how `this` keyword works is pure insanity * many operations that you expect to work do crazy things, like adding two arrays produces a string * some operations are plain missing from the language - comparing two arrays means writing a loop yourself, comparing two objects is something you probably need an external library for * there are not even integers in the language, all numbers are floating-point (that is usually not a problem, but when it starts to be, you are in for a ride) * the ecosystem is quite terrible, installing hundreds of dependencies is considered normal, there are libraries for single line of code However, if you want to learn javascript, go for it, don't let me and other people discourage you. There is a famous quote from the creator of C++: > There are only two kinds of languages: the ones people complain about and the ones nobody uses. and javascript is one of the most popular languages.
C: Personally, I hate that javascript is not strongly typed. If you don't add type to your variables and function arguments and return values, then you're gonna mess up at some point, and/or lose some time trying to figure out some code that would be clearer with types. If you have to use javascript, please consider coding in typescript instead to generate your javascript.
C: I wouldn't say "garbage", but I really, _really_ don't like using JS unless absolutely required. The language syntax isn't the issue (most scripting languages have odd quirks, that's nothing unusual, even if JS has more than most), so much as it is everything else: * Very weak standard library, which results in a lot of stuff falling to community package management, which is heavily fragmented and often very messy * Ecosystem and community take a _very_ "move fast and break everything" mentality to everything. I've seen widespread breakages and flagrant disregard for even the most basic versioning best practices in npm that I've virtually never seen in any other ecosystem. Stuff seems to be almost perpetually broken or about to be broken, no matter how careful you try to be. * npm is a real mess - it's better than it used to be, but even now there's a lot of frustrating and counterintuitive behavior (e.g. lock file isn't actually a lock file at all unless you use a command that doesn't appear to have anything to do with lock files). And as noted, the community is incredibly bad about versioning. * (javascript only): even for scripting languages, I really feel they need to support gradual/optional typing. Obviously TypeScript exists, which is great, but I consider it to be somewhat distinct from javascript as a whole. Etc.
C: I use js / ts daily and love it, but I have to say js is poorly designed. Lot of stuff on the language just seem hacky. Examples: * `this` keyword is an absolute nightmare * classes does not follow the OOP principles as in other languages * Truthness and Falseness is not well defined (0 and empty string are considered false, but empty arrays or maps don't) * NPM is terrible. There are popular packages that are only one line of code and each project downloads hundreds of packages * NPM is not secure * Difference between == and ===, even though I almost never use the double equals operator * Variables are set to undefined by default * Misspelling a variable name does not cause an error, instead creates a new variable * Some common operations are missing, like a flat function for arrays * Comparing objects is not so easy as comparing arrays * There is three ways of declaring variables (let, var and const). Not so bas of a thing, but can be confusing in the beggining * JS Engines do not understand the latest features, because of that we need to use transpilers like Babel (not a big problem, but configuring Babel can be a bit daunting) * If using NodeJS, getting user input from the terminal is terribly complex for such a simple task Probably there is more, but that is what I though from the top of my head.
C: Most JavaScript developers are cowboys.
C: JavaScript is not a terrible language, but it's far from good. One big reason is the approach it takes to incorrect code: rather than fail outright, it often either tries to guess what you meant, or worse, fails but keeps trucking on until that failure creates a subsequent failure. This loosey-goosey approach to programming.is baffling, because the only people who should be observing software failures should be developers, who want the failure to stop the program hard and fast so that they can fix it. If a programmer tries to compare a string equals a number, don't try to coerce that value into fitting: just error. This leads to some pathological footguns. The one I've run into multiple times is the whole "standard library functions have arguments you never need, and callbacks have arguments you never implement" problem, such as when you try to convert a array of strings into numbers. (["1","2","3"]).map(parseInt) Don't even get me started on shit like "this".
C: > how this keyword works is pure insanity Javascript "this" is the bane of my existence
C: Though that can be said about a lot of popular languages. Python is an even worse offender there in my experience.
C: > `>(["1","2","3"]).map(parseInt)` > out:`[1, NaN, NaN]` So I figured out what is going on with this example. As with everything in JS, it almost makes sense, but not really. To /u/5alidz , this example illustrates perfectly why JS is obnoxious, they had good intentions when designing it, but didn't think things through. You should be able to look at a piece of code and immediately see what it is doing, it is clearly not the case here. Normally, `parseInt` takes a string and a number as a base. E.g. `parseInt("8",10)` means parse "8" as if it were base 10. You can leave arguments out of a function call in javascript and they get a runtime value of `undefined`. Take for example the following function that concatenates two things. If you call it on one thing, it concatenates it with `undefined`. > var foobar = function(x,y){ return x + ":" + y } > foobar(1) out: "1:undefined" The function `parseInt` uses 10 if the base is equal to `undefined` so you get a reasonable behavior if you just call it with a number and no base. E.g `parseInt("8")` yields `8` as expected. Now, lets try your example with my `foobar` function. > (["1","2","3"]).map(foobar) out: ["1:0", "2:1", "3:2"] That actually kinda makes sense. Map with two arguments assumes you wanted the second argument to be the array index. So, now we can unpack the weird `[1,NaN,NaN]` from earlier. Passing a zero to parseInt is giving it a "falsey" value. If you use `undefined` or `0` in a conditional, the conditional takes the else branch. So... This is kinda weird, but almost makes sense: > parseInt("1",0) out: 1 Now, if we try base 1 or 2 we get NaN. 1 makes sense, there is no reasonable way to give it a [Peano number](https://en.wikipedia.org/wiki/Peano_axioms). 3 also makes sense since base 2 doesn't have a "3" character. > parseInt("3",2) out: NaN > parseInt("10",2) out: 2 Now, compare my earlier `foobar` function in scala: >def foobar(x:(String,Int)):String = x._1 + ":" + x._2 >List("1","2","3").zipWithIndex.map(foobar) out: List("1:0", "2:1", "3:2") Notice how the call to `zipWithIndex` clearly documents that the intention is to pass the value and index into foobar. If you remove `zipWithIndex`, the code won't even compile saving you some very hard debugging later.
P: How to get good in data structure and algorithms?
C: Try these [600+ DSA problems](https://www.techiedelight.com/list-of-problems/). Start with easy, followed by medium and finally hard category. Preferred sequence is Array, Linked List, Binary Tree, BST, Stack, Queue, Matrix, Dynamic Programming, Heap... and finally Graphs.
C: Take the other's advice for prep. But just remember that an interview should be a conversation. A good interviewer will want you to engage them about the problem. If you spew off some memorized algorithm they won't be impressed. But if you discuss why you took that approach, what the tradeoffs are, and ask for context about the problem that may help you decide an algorithm (is the input data sorted, is the input data very large, is the system memory constrained, is a perfect sort necessary or would a heap be enough, will the data structure be ready or written more often, etc) then the interviewer will be able to learn more about how you think about problems. On the job the algorithms you know doesn't matter much. It'll be rare for a problem to arise that specifically requires you to build a raw BST, or implement a sorting function. What matters is that you are able to reason about problems. So learn the algorithms. Just also learn how to think about algorithms and how to talk about your mindset and approach too. Both matter.
C: 1 a day for a month prior to my first interview. focusing on easy-medium problems, I tend to take the popular ones. I take my time, no rush when trying to solve them. If I can't solve, I google or use yt with the usual suspects, eg Nick White, Algo expert guys, etc to see the solution, I usually try to translate to Js or Ruby if the answers are in another language. I try to explain why I'm doing it like that while I'm doing it. Practicing and taking videos of myself talking. Helps me see if I can improve anything. I focus on not saying something I don't know at depth, usually people will name drop some tech, and when asked. &#x200B; I like leetcode more than the others, I used to use codility and I have a hacker rank account too. I like that leetcode has a playground and I can execute Rust in it, I have a lot of solutions as notes that I can go in and figure out what's going on. I have a few comments in case logic is too complex for me that I need a reminder. I've also created a repo with a few solved exercises in case I need to make updates to some solution. &#x200B; I also practice getting asked about the top questions for the role I'm applying too, and also recording myself and how it looks. &#x200B; I usually don't get asked a lot about data structures and algorithms at the positions I've applied to. I've been given things like, implement this data structure, and what do you know about hashes. I've never had to do a tree, or graph problem. it's almost always an array or an array+hashMap problem.
C: !remindme 8months
C: Wooahh. Thanks ! :O
C: !remindme 2months
C: I will be messaging you in 8 months on [**2021-02-28 08:14:38 UTC**](http://www.wolframalpha.com/input/?i=2021-02-28%2008:14:38%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/AskProgramming/comments/hi1lfj/how_to_get_good_in_data_structure_and_algorithms/fwgffva/?context=3) [**1 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2FAskProgramming%2Fcomments%2Fhi1lfj%2Fhow_to_get_good_in_data_structure_and_algorithms%2Ffwgffva%2F%5D%0A%0ARemindMe%21%202021-02-28%2008%3A14%3A38%20UTC) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20hi1lfj) ***** |[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)| |-|-|-|-|
P: Are there YouTube Channels or similar resources which explain Source Code of popular open source projects for beginners?
C: Ooh, I don't know of any but I think it's a really good idea! I do code streams and upload them verbatim to YouTube, but code walks specifically aimed at beginners, explaining concepts and design choices sounds great.
C: If you are interested in video game development, Handmade Hero has been streaming the development of a video game for a few years now. It's a bit much to catch up on now as he is currently up to [episode 508](https://handmadehero.org/watch#EpisodeGuide) and they are all at least 1-2 hours long.
C: The Architecture of Open Source Applications by Any Brown. It's a set of books with a chapter dedicated to one application (audacity, eclipse, etc.) It doesn't explain the code as such, but reading the architecture as described by the creators of the project would be a good start. Edit: *Amy Brown
C: Jekor did a few videos focusing mostly on Haskell projects. I watched the Pandoc and XMonad ones. Playlist here: [Code Deconstructed](https://www.youtube.com/playlist?list=PLxj9UAX4Em-IBXkvcC3MycLlcxyoi7v8B)
C: I don't know about "popular" but bisqwit does some interesting projects and provides the source code [as] it's being written. It's typically fast paced though and I think he rarely provides "in depth" explanations.
C: You can follow blogs of the authors.
C: can you link your streams?
C: https://www.youtube.com/channel/UC_Dn6rTbbVggWONZtgzVHIQ
C: I never heard of this. As a dev who has used Eclipse a daily for years I would love to know about it's architecture. Thanks.
C: https://twitch.tv/samwhoo
P: Have you ever thought to yourself: "Why does this API exist? Why would someone or a company provide the public with this kind of data"?
C: Online document conversion API. I just point ODPs or PDFs at it and it turns them into consolidated HTML files with all the assets packed in that you can just mount on any URL, it's pretty sweet. Think it had an 1000 a week limit or something and then you had to pay, but seeing as I was using it once or twice a fortnight that wasn't a big issue for me. Didn't send anything too sensitive to them, as they may have been harvesting, but even that seems like a long shot.
C: I'm not sure if that's still the case but a couple of years ago, Google used to let you pull up search auto-completion for a given string but only from the YouTube API. Always wondered who the hell needs an autocomplete for content you can only search for on their services manually and cannot pull the actual videos via the API. I wonder if they still let you do it.
C: > I always wondered what they had to gain by letting people use their service and drain their servers without clicking on any ads. The content is being scraped anyway, might as well provide an API to reduce the load on your servers.
C: More business. Most have a certain number of requests, after you have to pay. The normal person/side project will use such a small amount of requests compared to when you go work for a company and say such and such has the perfect API for this.
C: Remember the apps like Pidgin and Trillian that would hook into all the different messaging apps' APIs and said APIs would actually let these apps be useful?
C: I think the main reason is engagement. For example, a game can display for free player stats so people make fan sites where players analyze, create and test builds, making it easier for new players and creating a "meta gameplay" that high end players can develop. Developers can also use the info those pages collect in turn to patch/nerf/buff things.
C: Can you not use pandoc?
C: I guess it might be useful if you want to offload autocompletion in your own service and there's enough overlap.
C: Never heard of it. To some extent it was just an exercise in consuming an API, I'm sure there are good local ways of doing it too.
C: This is probably it. Easy to imagine a chat app having a “gif-embed” like feature that instead searches YouTube videos.
P: How the hell does Netflix manage to absolutely block all screenshots (both using printscreen and snipping tool)
C: If you have hardware acceleration on in the browser, it is likely that your video is being decoded with your processor or video card's built-in DRM (Intel Insider, for example), via some technology like HDCP. This let's the CPU/GPU output video to the framebuffer directly after the point the screenshot tool would be able to catch it. I get around this (when streaming via Discord, for example) by just turning off hardware acceleration in the browser.
C: I was just able to take a screenshot of Netflix via the snipping tool and via PrntSc.
C: If you think that’s bad, just wait a few more years. Soon cameras (in phones , or digital point and shoot, or DSLR) will be so sophisticated that they will have ML chips customized to recognize feature length content. When they recognize feature length content being recorded through the lens, they will either, black out that portion of the recording or refuse to continue recording. This type of thing used to be a matter of “if,” but now it’s only a matter of when.
C: Probably a feature of Playready DRM.
C: Me too
C: Hakerr Myann
C: I think I've seen something similar with scanners/copiers and currency... I always wondered how that works!
C: Currency is quite an interesting case - it's not quite machine learning but a lot of currency has a hidden pattern embedded in it (e.g. the [EURion constellation](https://en.wikipedia.org/wiki/EURion_constellation) for banknotes). Printer firmware and image manipulation software can detect these patterns and prevent the reproduction of any image containing the pattern.
C: All of that can be defeated. There's a reason why you can get full quality rips of movies on torrents right now. That won't change even if they make dumb features like these.
C: **[EURion constellation](https://en.wikipedia.org/wiki/EURion constellation)** The EURion constellation (also known as Omron rings or doughnuts) is a pattern of symbols incorporated into a number of secure documents such as banknotes and ownership title certificates designs worldwide since about 1996. It is added to help imaging software detect the presence of such a document in a digital image. Such software can then block the user from reproducing banknotes to prevent counterfeiting using colour photocopiers. According to research from 2004, the EURion constellation is used for colour photocopiers but probably not used in computer software. [About Me](https://www.reddit.com/user/wikipedia_text_bot/comments/jrn2mj/about_me/) - [Opt out](https://www.reddit.com/user/wikipedia_text_bot/comments/jrti43/opt_out_here/) - OP can reply !delete to delete - [Article of the day](https://redd.it/k6wsfi)
P: Programmers of Reddit, what useful programs do you use on your phone?
C: I saw a dude once who was dead serious about being a phone-only developer. there's apparently some decent phone IDE:s out there. but seriously though, there's really no useful phone programs that there aren't better PC counterparts of for programming.
C: I found a SSH app that was quite useful for fixing server problems when I away from my office. Don't get me wrong, the experience of typing out linux commands and using vim on a phone is fucking awful, but it saved my ass a few times.
C: For iOS (`<language/technology name> -> <app>`). Apps to write code _and_ run it _offline_: * Python -> Pythonista, Pyto (both absolutely _excellent_; the last one is also open source) * Ruby -> RubyPico (not updated anymore but works really well; it's also open source) * Haskell -> Raskell (very old, buggy UI but gets the job done pretty well) * C -> Mobile C, many other apps * C++ -> most C++ apps are pretty bad * OpenGL -> Woahdude * HTML/JS/CSS -> JSAnywhere, many more * Processing -> Processing Other random apps: * Linux inside iOS -> iSH (available via TestFlight), LibTerm * SSH -> Termius * git -> Working Copy * Network scanner -> Scany Things that I'd like to have an app for but haven't found any: * OCaml (it's easy to build yourself an OCaml for great good on a jailbroken iDevice though; you'll need a C toolchain and an iOS SDK) * Rust (Alpine Linux in iSH provides a `rust` package, but it won't run because iSH doesn't support some CPU features it requires)
C: Reddit. It actually can be really useful (oh and also Google of course)
C: Termux. It's a great app for running linux on my phone. I use it to do quick small edits to my projects on the go.
C: Well there's the GitHub app, which was only released recently. Used to be there were only third party apps but this one's official.
C: In my first sem in college, I didnt had a laptop. Learned react/python on my phone. :)
C: I've experienced that as well, all I can say... Never again :D
C: On what editor/IDE?
C: droidedit, termux for the most part. Sometimes, CPPDroid to complete assignments. Chrome to view my web apps.
P: As a graduating CS student I have no idea how to do real programming.
C: Dont worry, Junior devs wont get job like "build a whole program". They will work along with someone experienced. From there, learn as much as you can.
C: Will just drop this here: https://medium.com/@claytonlong_34858/the-difference-between-jr-mid-level-and-senior-software-developers-9ae833534f41 You will enter as a junior, so you are not expected to develop standalone projects yet ✌️ you gonna be fine👏🏻
C: Others have given you your answer, but I'll just add, the only way is to learn by doing. Pick something and build it.
C: Assuming you know the basics of a language (how to write methods, classes, interfaces etc.), the next thing you wanna focus on would be: * Data Structures (how to create your own type of lists or maps) * Algorithms (Dynamic Programming, Graph Traversal, NP-Completeness) * Object Oriented Modeling and Design (MVC, Template Method, Factories and Builder Patterns, etc.) * Agile Development (XP Programming and Scrum)
C: When you start your internship at a company, no one is going to expect you to just be able to do something right off the bat. You're an intern for a reason. They very well know that they're going to be helping you grow as a programmer and it's your job to ask questions and fill in the void through learning. I never expect my interns to just know what to do if I give them a task on day 1. All I expect of them is to have an openness to learning and ask questions to help progress that learning.
C: Thank you! This is good news.
C: Hmm. Much more clear now. Thank you!
C: I took a Data Structures course but I didn't know the rest. I'm putting this on my learning list. Thank you!
C: I've found that the companies I've worked at don't expect an engineer to be net-positive on productivity for at least a month, and junior engineers at least two months. It takes time to get familiar with a codebase - even moreso if you're not familiar with the industry. Not something to be worried about - just make sure you take in as much as you can and are willing to ask questions and admit your mistakes. Also, like /u/theCumCatcher said, if the company isn't understanding that you're gonna need time to get your bearings, you shouldn't work for that company. Everyone who has studied CS and gone into software development knows that a CS degree doesn't get you 100% prepared to be a developer - it just gives you the tools to get started.
C: As a senior dev who has been doing software engineering for well over a decade, in my eyes knowing design patterns and practicing not slinging together spaghetti code is the most valuable thing. I know so many programmers who just "make stuff work", either due to pressure or just not caring, but it's usually such an utter cluster for someone else to get in there and fix when they need to (and they usually will...). Code for your colleagues in mind, not for your "in-the-moment" self. Pick up some good books to read: * Art of readable code * Clean Architecture * Clean Code
P: What would programming (more specifically software development) be like if everyone actually used "best practices".
C: I think the early agilists had it right when they talked about things in terms of “patterns”. A pattern is a solution to a problem in context, where the problem is one which tends to repeat, and the solution generally results in specific tradeoffs. An important part of a pattern is that it’s not a drag-and-drop solution, but rather is a way of discussing and sharing applicable knowledge that can be customized to fit the situation. Patterns are usually discussed in terms of “design patterns” in code, but the concept can be applied to workflows, communication structures, and just about any aspect of the engineering process. “Best practices” are usually patterns which apply to very common problems and present tradeoffs which are generally beneficial overall. So I would like to tweak your question and instead answer the question, “what would software development be like if everyone sought to draw on existing bodies of knowledge in order to anticipate and manage tradeoffs as intentionally as possible?” - Development would face fewer surprises and pitfalls. - Work would be more methodical: more time would be spent in research and discussion and less time racking up lines of code. - Productivity would slow down at first and then increase overall, for a net gain. - Decision-makers would achieve their aims more frequently, and understand what downsides result from these decisions. Note that these are not inherently enough to make software secure or systems maintainable or jobs fulfilling. It is still up to decision makers to decide what positives they aim for and what negatives they are willing to accept. If the boss is the only one with decision making power, and they’re willing to accept the tradeoffs of engineers being burnt out and systems becoming unmaintainable in order to hit deadlines, then engineers trying to use patterns/“best practices” won’t change anything. Same thing if a company doesn’t care about security. Note also that patterns are contextual, not subjective, and are value-neutral. The tradeoffs resulting from a choice are not subjective, but whether these tradeoffs are acceptable is subjective. There are some practices (testing, version control) that I consider universally good, and for which I cannot imagine a context where their tradeoffs are not worth it. But for most practices there is not a clear cut answer, and I would not believe anybody who tells you that their practice is the universal best. I would equally ignore anyone who tells you that practices are all fully subjective, or that it’s not worth learning “best practices” or patterns from our industry’s collective knowledge.
C: There's no silver bullet. You have to choose one of several best practices or introduce an even better practice.
C: The thing is, there are no universally good nor bad decisions in tech; there are only trade-offs. Any “best practice” always comes with an implicit statement of “assuming this particular trade-off makes sense for your situation”. The trade-offs which make sense for a team of 1000 devs likely don’t make sense for a team of 4. Similarly a start-up and the government will have very different notions about the importance of backwards compat, accessibility, etc. Edit: a good exercise is to reject all statements ala “Foo is bad”, and instead work towards “Choosing Foo would be trading off X for Y, which does / doesn’t make sense for us”
C: Mmm.. never finished? Refactored multiple times on all levels from operators level till abstraction level with every new change? Performance optimization after every change that takes 100x time? Covered in test to the point where writing/fixing tests will takes 50x of time? Every program will be mathematically and logically proved that there no errors inside? P. S. Some best pratices directly contradicts with each other.
C: Best practices are just too loosely defined. It would certainly help readability but beyond that I don't think it'd do much else
C: It would basically look like NASA's software development team. There are strict protocols for pretty much everything from naming to testing etc. Most of your questions, I think, answer themselves. Yes, of course how software is made would change. No, the type of software that could be built would not change. Yes, security would be better. the one question that you did not ask, which I think is relevant, is whether development would still be fun. Part of what keeps people motivated to work is the creativity and engagement component. The more opinionated a process is, the less room there is that for the developer. Much of software development is driven by innovative people. If you create a process which deters that mindset, then you have fewer developers with that trait
C: It would dramatically reduce the variance in quality on projects. About half of so-called "best practices" are simply summarized by "don't be an idiot". Like basic login handling hygiene, and stuff like that. If we got everyone to follow those (either by devine intervention, or more realistically, firing the incompetents), then the worst websites from a security perspective wouldn't be too bad. No SQL injections, plain-text passwords, etc. Unfortunately the other half of things passed around as "best practices" are about dumbing down your code so that you can be replaced with someone worse at your job. Which, while potentially beneficial to the company in the long run, have the potential to neuter the productivity of an experienced software development team, because they limit your ability to approach problems with novel abstractions.
C: I'd say that I've worked in a few teams that has been at least somewhat serious about following best practises. Honestly, it's fucking great, and productivity is easily 5x of what I'm used to in for example enterprise companies where most people hasn't read a best practises blog post since 2002. But it doesn't magically solve all your problems. What you realize once you're fully following "the good path" is that there's lots of unsolved things and broken things that requires lots of thinking and there just isn't any singular best practise that will solve all of your problems. A real-life example: at my current work, we currently don't feel like paying 400 euro a month on a private package repository service, so we host our private libraries on a git SaaS instead. We started out by comitting the ssh access key (obviously not what anyone would call best practises, but it solved the problem - and the libraries we're using isn't exactly super secret anyway, even if they're private on paper, so it *was* the correct decision at first). Our next steps was to use docker build args - while this *does* allow us to no longer commit the credentials (which, again, we're painfully aware is *not a good idea*) but then the problem is that the layers are still part of the docker image, so if someone got access to the docker image they'd also get access to the ssh keys. The *actual* best practise at this point is to use docker secrets - but that isn't supported by our CI/CD-provider... (...arguably, by now we've spent enough time trying to solve this problem (that doesn't have a free zero-work solution!) that we probably should have paid for a private package repo SaaS...). Another example would be fixing dependency problems (underlying libraries being broken for one reason or another) or git merge conflicts: they're fundamentally going to occur not matter what. And no matter what, a LARGE fraction of your time is going to be spent managing these issues. When you're using some business-critical state-of-the-art software that has a dependency that broke and the fix for it ends up being a github issue posted four hours ago... that shit happens.
C: Blindly following "best practices" is generally a good recipe for disaster.
C: Blindly following a "best practice" is not a best practice.
P: I've taught 30,000 students how to code. Now I'm offering my course for free, forever.
C: Thanks professor bro.
C: Going to give this a try! I'm pushing 40 and have zero coding knowledge, but I need a new direction in life. Thanks so much for doing this!
C: This is the best thing that happened to me today. Thank you very much for this course. I wish you all the best!
C: This is your Udemy course that sells for 195 Canadian pesos, right? ($15 during the Black Friday sale.) You're doing Zeus's work. Words cannot express my gratitude. Are you sure I won't see the message "Want to unlock this project? Subscribe to Upskill Pro" eventually?
C: You're welcome bro.
C: Kudos to you for taking a shot at coding. I think you'll love it. Message me if you have any questions along the way. I'm here to help.
C: Not sure if you will see this. Turn 40 in six months and been doing web development full-time for the past 2 1/2 years. Worked as a glazer before but started building websites before my son was before 12 years ago (basic family website). Started with WordPress and moved in from there. Learned everything I know from online classes like this. I never thought I would be in the position I am now. If you have any questions about getting started please shoot me a PM.
C: This is a different course from anything I've published. I re-recorded a new course completely from scratch here. And yes, free means free forever.
C: Brofessor
C: There's only one Brofessor.
P: I wrote a syllabus for learning Python and Django. Four people have gone through it, two are interviewing and one got a job. It's based on using a somewhat even mix of coding challenges, personal projects and books.
C: Ah yes another wonderful post I will bookmark to never look at again
C: This sub is the best. You are the best. Thank you sir.
C: Your syllabus is going to save my unemployed quarantined butt.
C: I'm stuck in tutorial hell and need to GTFO
C: Have you checked in on the 4th person? They doing ok?
C: Are you me?
C: You're welcome!
C: He died. jk he's in college and not looking for a job.
C: Are you both me?
C: Omg... me?
P: I highly recommend Harvard's free, online 2016 CS50 "Intro to CS" course for anyone new to programming
C: I cannot recommend CS50 enough. It's a fantastic course. It's tough, but it's probably the best intro course I have ever taken. Plus, DJ Malan is in da house.
C: [deleted]
C: Something I don't understand - do you have to do it at a certain time? Or can you do it all any time? Do we have to 'attend' lectures as they are given? Is it all within a given timeframe?
C: Mom! I'm going to Harvard!
C: How would one put this on a resume? "Sat in on CS50?"
C: [deleted]
C: would you say the estimate of 10-20 hours a week of homework is accurate?
C: I'm enrolled in it right now, they give you all the materials you just have to finish it before a certain date. I think it was December for this one? Or September? I don't remember. You can watch the lectures at any time and submit the homework whenever you want to, you can even submit them all at once on a given day. The only requirement is that you finish before the deadline.
C: Yer a harvard Wizzy!
C: The core of programming logic, how binary works, loops, format logic, API usage, simple graphics logic, etc... a lot of things. It's good to do if you are wondering if programming is something you should study. I did it a couple years ago and now I'm on my second year of CS, I certainly recommend it!
P: Please do not downvote someone who is asking for help in solving a code that looks stupid.
C: I have been on this sub long enough to know that people don’t come here to help other people, people come here to make themselves feel superior.
C: I agree There is a lot of snobbery in anything that takes a lot of time and effort to achieve skill at, but along my way I've also found a lot of helpful and supportive individuals So it's best to keep the best in mind or you'll associate your passions with negativity
C: When I posted likely stupid questions on StackOverflow, providing the info you already dig up, queries and assumptions helped a lot in getting an actual answer instead of bunch of downvotes and shut down by moderators.
C: I've posted here, stack overflow, and other places before, and most of the times you feel like quiting programing from some of the responses. They make you feel stupid. I try my best to always help people when I can and when someone responds and helps me I make sure they know I appreciate it. I'm actually a bit ashamed of the community and some of its members.
C: It's that way in a lot of subs where people who are specialised in that topic will enjoy shitting on people for asking stupid questions, it's really sad and it discourages people from engaging with those communities. Laughing at/berating stupid questions is biig small pp energy, it doesn't make you smarter, I think it's just a big red flag for insecurity, like people who aren't so smart eager for any opportunity to be the intelligent one. Maybe it comes from those who suffer bullying themselves when they were learning? Sounds like exactly the kind of toxic abuse cycle humans are so great at.
C: this comment == true
C: TLDR; f the haters. I sub to help people here, that's that
C: The most difficult thing for me right now as a beginner (and I’m truly starting from zero) is how many people “explain” something in JavaScript without actually explaining it. For example, the videos I’ve seen about recursion that just say it’s a function that calls itself. Like I’m glad that makes sense to you dude, but help some of us out who don’t have a good visual idea as to what’s happening. It took me asking a lot of questions to figure it out, and when I did I realized it wasn’t me it was the terrible explanations.
C: I have that same problem, especially at school. Some professors forget they have 20+ years of experience while I’m like a newborn baby in this field, and they explain things like I’m a fellow professor. Best things I’ve found it to just consult multiple sources in learning a certain topic.
P: How would people like a series of cartoons of ELI5s for important software engineering concepts?
C: This would be awesome, I would print them out and have them in my office.
C: I tried to do something like this for a while with [short youtube videos](https://www.youtube.com/playlist?list=PLmVb1OknmNJuC5POdcDv5oCS7_OUkDgpj).
C: Boy, as someone studying to be a software developer, I've noticed there is a massive lack of visuals for some of the core concepts. This is really annoying if you're someone who learns by seeing. Plus, why not add some humor to learning? For me, when it's funny it sticks more quickly in my brain. Also, younger students are getting into programming (think elementary school) , and you could reach a large demographic by creating a series that's fun and informative.
C: Can we have a META in this sub. I've seen about a bagillion of these posts. "Would anyone like a tool to help them learn programming here in r/learnprogramming?". The response is *always* a resounding yes, and rarely leads to anything. Just make it. If it's good people will consume it and love you forever. People want good content in general, and in this sub they want good content about learning to program. So the real question is not if we want content, but if you, u/tangerto, can create good content. Show us what you've got.
C: I would!
C: [The Grokking Algorithms Book](https://www.amazon.com/Grokking-Algorithms-illustrated-programmers-curious/dp/1617292230) is good for beginners or for those who want a fun refresher. Obviously not too much depth but teaches it in a nice illustrated way. Code is also available on github.
C: Same here! I'm looking forward to this one redditor's [coloring book](http://coderscoloringbook.com) too
C: Same!
C: "It's important to have some idea of how to build an efficient autocomplete, not because is functionally usefule, but because it's a common interview question." Fantastic.
C: Wow these are great videos! Thanks for sharing
P: The Massachusetts Institute of Technology has a class called ’The missing semester of your computer science education’ It is a collection of things that most developers and data scientists typically teach themselves on the job.
C: Here's the more [detailed post](https://www.reddit.com/r/learnprogramming/comments/eyagda/the_missing_semester_of_your_cs_education_mit) from last month by the actual creators of the course.
C: Are there any prerequisites for this course?
C: * Negotiating your way into the good desk location * Swapping conference room chair with your desk chair * Bypassing the VPN * How to set game launchers to invisibile while working from home * Never talking to the cute intern * Choosing the right IDE font * Finding easiest to own business casual clothes * Finding the "private" bathroom * Not committing suicide after your second 3% raise * Making fun of front end developers OR making fun of back end developers
C: Whoa!
C: Free time and interest.
C: Topics covered: 1/13: Course overview + the shell 1/14: Shell Tools and Scripting 1/15: Editors (Vim) 1/16: Data Wrangling 1/21: Command-line Environment 1/22: Version Control (Git) 1/23: Debugging and Profiling 1/27: Metaprogramming 1/28: Security and Cryptography 1/29: Potpourri 1/30: Q&A
C: Thanks! Cause I am an amateur...
C: Uh, potpourri?
C: For sure! EVERYONE starts at zero, best of luck on your journey, friend!
P: The online course for "Automate the Boring Stuff with Python" is free to sign up this week.
C: Good Guy Al: Writes an awesome introductory book on applied programming / python. Gives it away and even spoon feeds it to you for free.
C: When you are always on the fence about learning how to code and homie hooks you up for free so you can jump on his side of the fence
C: would this be useful to someone who never programmed in their life?
C: May I just be off topic one moment? Thank you SO much for what you've done for this community! Your book, and your dedication to Python and teaching Python are so inspirational. I really appreciate you! &#x200B; Get this guys book! Learn Python! It will save you so much time! It almost doesn't matter what your job or your hobby is, if you interface with a computer to do it, learning a little bit of Python can help you do it better!
C: [deleted]
C: The first hit is always free. Next thing you know is you're scouring the internet for courses on Pascal, Fortran or machine code and selling your grandmother to get your fix.
C: Yes. You’re the target audience.
C: Haha, thanks! I'm really grateful to all the people who work on Python, and the folks behind the Creative Commons license which makes it easy to create share-friendly content. And also my editors, because I can't word good and want help me do other stuff good too.
C: Thank you. I and all the HOt Local Singles In Your Area really appreciate hearing that.
C: "Hey kid, I got some nice algorithms. Wanna try some recursion?" "I... I won't get addicted, will I?" "Nah, kid, you can stop anytime you like."
P: How to start learning to code when you don't know where to start
C: We made a [search engine](https://learn-anything.xyz/) to solve this exact problem. It shows the best path for how to learn any topic on Earth in a linear way. [Here](https://learn-anything.xyz/programming) for example is the path to learning programming. Or if for example you want to learn python, you can do it [here](https://learn-anything.xyz/programming/programming_languages/python). Just search for what you want to learn. :) If you think there is a better way to learn the topic, just click on the 🦄 and say it. I hope you like it.
C: I started learning on codeacademy, went to freecodecamp and then am now doing [edX's CS50](https://www.edx.org/course/introduction-computer-science-harvardx-cs50x) (which is free). **I recommend that anyone starting to code start by watching the first lecture of CS50.** I didn't do this, but watching the first lecture got me really excited about coding even though I'd been doing it daily for 6 months and it also lays out concepts in a very easy-to-grasp way. It also introduces you to a program called Scratch, which was designed for elementary school kids and does an amazing job at teaching someone the basic structure of code.
C: [deleted]
C: How to start? Right now, yes, right in this browser and in this tab, press Ctrl+Shift+J buttons and type console.log("Hello World!"); This is it!
C: My God. You just solved a huge dilemma I've had for the past year or so. And also subsequently solved future dilemmas. I love you.
C: Thanks, you're right that those are perfectly valid technologies for backend work. However, my intention wasn't to be comprehensive in *all* possible languages for a given development field. Java, Scala, golang, Haskell, etc are all viable backend languages, but the greatest developer mindshare seems to be the ones I mentioned. This is actually the problem with starting to learn coding that I was trying to address in the post. Yes, these are my opinions and therefore they're not the only way to go forward. However, I wanted to cut through the clutter and suggest the 1-3 languages and resources to start with for a given field. These suggestions are based on what I see as the general consensus of what most people and companies are using for new projects. Yep, I could be wrong (and probably am for some people), but I hope that for most people, the clarity I'm offering is more valuable.
C: I'm on mobile app, so I guess I can kiss my sweet developer dreams goodbye then :(
C: The general consensus varies from area to area. I'm on the east coast (North), and 90% of job listings are for C#/MVC I've literally never even seen a job posting (not that I've looked specifically) for Ruby/python web dev. I know one person working with JS on the back end, and everything else I see is PHP. Anyone starting with Python out here is going to be SOL for work You really should update the guide.
C: [deleted]
C: But.. but.. how du I press Ctrl-shift-J on a iphone ? :(
P: Cornell's entire Machine Learning class (CS 4780) is now entirely on You Tube. Taught by one of the funniest and best professors I have ever had.
C: that's fucking amazing. are the course materials and any sample code available?
C: What kind of math do I need to know to keep up?
C: [deleted]
C: Should this be preferred over Andrew Ng?
C: My coworker Andy went to Cornell and wont shut up about it. Says he was drunk the whole time...
C: Second this. Any homeworks available too?
C: Machine learning requires statistics, Lin alg, and multivariable calc. But you could probably just take the professors word on a lot of the differentiation.
C: Edited: Thanks! I took the class one of the best classes I have taken.
C: lectures are interesting but most of the work occurs outside lecture so that's specifically why I was requesting those materials
C: Haven't taken this course specifically, but at least for the [deeplearning.ai](https://deeplearning.ai) course, having an understanding of single variable calculus and an understanding of matrices was good enough to understand the intuitions behind ML/NNs.
P: Just turned 34 and I'm interested in trying a career in computer programming. How much of an uphill battle do I face?
C: [deleted]
C: I was a mailman for a a couple of years, until at 34 I changed tracks to software development, and things are going pretty well for me. You can do it OP!
C: I'm 40+ Did a bootcamp... now have job. My previous career was technical (networking) but had no programming involved in it.
C: >Is it unrealistic of me to think I can become a programmer at 34 with no real background in programming? No. Don't ever think in those terms, met devs online who got into the fields at their 40. 2 years later, lead of android development team in the place he is working at. &#x200B;
C: You can definitely do it! I started taking a few community college progrmaming classes at 31 with a previous degree in French and a shitty data entry job. Fast forward to age 34 I have a job as a software dev. I'm still going to school at night and probably won't have my degree before I'm 38, but hey.. I was going to be 38 anyway so I might as well have the degree.
C: This is the most useful set of sentences on the internet at the moment.
C: People like you are why I don't just quit the Internet! Thanks Friend.
C: Thank you for such a detailed answer!
C: congratulations to your success!
C: Think of it as a marathon not a sprint. Can't stress this enough. cs50 is great but it can break you. Maybe do it alongside other things so you don't feel like garbage when you hit a wall. There are plenty of Harvard students (so very smart people) who have one on one time with mentors available on campus to help them with the course, and they swear that it's too difficult.
P: Would anyone be interested in a website that teaches c++ from complete beginner to more advance concepts?
C: There are 1000's of them already AND I would be 100% interested. Every site has a different teaching style, and I learn new and different things every time I visit a new place. It's entirely possible that your unique teaching style may resonate with a niche group of learners who have been struggling elsewhere.
C: > or would i just be making something that hundreds of other people are already doing? It would, but that's shouldn't be a reason to avoid doing this. We re-invent the wheel a lot as we learn. I'd say if you want to do this, do it for your own edification. Maybe you will have a teaching method that's truly different and changes things. Probably not; everyone thinks that their idea is different. But you should still try if you want. Just don't be disappointed if you're the only visitor to your site.
C: I 100% would be interested
C: I think you should. C++ isn't really taught by these modern online courses and I feel that is a big mistake. C++ should be the standard IMO.
C: [deleted]
C: I'm right here with you. I think there's room for teaching almost anything \*better\*. Especially with programming. Something I personally haven't seen, and would LOVE, would be one that teaches, and explains differences from C to C++ to C#.
C: Doing it for myself is a good idea. I kind of just wanted to teach it, as teaching is a good way to see how well you understand things yourself, and see what areas you need to learn more about.
C: Things improve if you do have an actual audience that reads it and gives you feedback. It's work to aim stuff at a total beginner, and even if you get good at that, it's so tiring that you often don't get to the advanced stuff. And if you get to the advanced stuff quickly, you probably miss too much of the introductory stuff. Source: Have taught intro programming
C: [deleted]
C: >And if you get to the advanced stuff quickly, you probably miss too much of the introductory stuff. This right here. OP, if you meticulously go from beginner to advanced, skipping almost nothing, and make it very easy to skip past topics they already know I think you'd have a great resource. Even better would be to present topics in two or 3 ways, with varying levels of detail. Like maybe beginner version and the advanced version for people who already know how to program. I'd definitely use this resource and I'm sure many people would be on board to contribute.
P: "Automate the Boring Stuff with Python" Udemy course is free to sign up for with code NOV2019FREE
C: Thanks man! I really appreciate your effort to give a whole course out for free and a reduced price. I'm definitely going to use this
C: The effort alone you go through to give back to the community and find ways to open your content is fantastic. I wish more curators, in this space specifically, came with this mentality and energy! Thanks Al.
C: Thanks! Went to redeem, and turned out I already bought it. Glad to have paid for it though, such a generous and helpful author from what I've heard. Sent the link to a few friends who may be interested. Hoping to maybe learn how to maybe make a webscraper for downloading and organizing podcasts and sermons. It's kind of slow to manually do it... Especially when the sites have their own hosting. I wouldn't want to break any rules by downloading all at once and overloading their servers... But even if I added a timer between downloads, that'd still save me time from having to find each link and manually download it.
C: Great thanks so will there be a new course on second edition or same course will be updated with second edition content? super thanks for this.
C: "You purchased this course on Sept. 22, 2015" OH YEA
C: [deleted]
C: It's really amazing how tech can act as a force multiplier. I pay about $15 a month for my web host, but tens of thousands of people can read the book on my site. And this doesn't even consider the people behind the Creative Commons license and the Python Software Foundation. Learning to code a little bit lets folks make incredible leaps in productivity.
C: Eventually yes, probably mid- or late-2020. It won't be a separate course. People who sign up for this course will automatically get the updates once I finish them.
C: \*Mortal Kombat voice\* F I N I S H I T
C: wohoo great looking forward too infinite thanks from a broken while loop :)
P: I made 47 free C++ tutorials on YouTube and wanted to share them with you guys
C: Your 47th link is the same as your 46th, you might want to fix that.
C: I read that as "I made 47 years of free c++ tutorials" and was like T_T
C: I did some spot checking to evaluate the quality and didn't spot any major problems. But I did notice your ~~first three~~ second and third array videos aren't valid C++ programs. You're using a common language extension, borrowed from C, called variable length arrays (VLA). In C++, array lengths must be a constant integer expression. Your compiler accepts it because it's being nice, but if you ask it to be strict (`-pedantic` in clang++ and g++), it will reject the program with an error.
C: Awesome, thank you! Will have to check out the vectors tutorial soon. Had more trouble with that in my CS class than anything else Edit: Is there a playlist link you can post? Would make it easier to follow the lessons that way
C: [Reminds me of this](https://pbs.twimg.com/media/BZDu_vrIIAA1dLK.jpg)
C: Could still take 47 years to complete.
C: sorry we are only hiring devs with 48 years experience looks like we have to offshore to Infosys
C: C++..hmm...yea.. that estimation checks out.
C: [deleted]
C: Here in my garage, I just bought this computer. It's great for tutoring up here in the Hollywood hills.
P: I made this free tool for learning programming (it's like Duolingo for learning to code)
C: I started learning python 2 months ago and I’m addicted to your site man. I’m almost 200 XP and its the main practice ground for me. Thank you! If I can help anyhow let me know.
C: Reddit is now digg 2.0. You don't deserve good users. Bye.^^^^^^^^^^^^^^^^0.8403 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/21750)
C: [deleted]
C: Love the layout but I wish I could see the instruction and the code window at the same time like codewars and other similar sites.
C: This is awesome! Maybe add a 'Reset Code' next to the 'Check' button in the Code tab? Otherwise, this looks great!
C: I start software engineering at university as an older student (26) in September. Can't wait to get stuck into your website! Thank you :)
C: Just keep using the site as you are! It's designed to get better and better as more people use it. Resources get submitted and voted on, the difficulties become more accurate as users rate challenges, interesting solutions are upvoted, etc.
C: Hey op could you look into golang in the future? Would be awesome, thanks for this!
C: Good idea! I'll add it to the challenge dropdown menu.
C: I will add GO next, promise! :\)
P: After 2 years of learning programing, I knew how to write code, but didn't know how to make an application. So now, I'm writing the guide that I wish I had at that time. Here's part 1.
C: I'm glad to see more stuff like this popping up. So much learning covers basics but then no one talks about real world applications. I'm decent with Python but have no idea how to use it to *make* a user friendly program. It's a daunting gap of knowledge.
C: Honestly, thank you for taking the time to write/type this guide out and for sharing it with us all! I love that everything is broken down so nicely, telling us what to do and what to identify. Ill be looking forward to the part 2 of this! Although, I'm not really sure what it'll do or if it'll benefit you but I "clapped" for your article! I'd like to add that I dont really have any constructive criticisms to give you but I'd like to say that everything you've written is so to the point that it makes me feel better reading it. I get tired when people write paragraphs upon paragraphs on a topic that could've been easily condensed into a few sentences that would have made it much easier to understand, though I understand that some topics needs to explained thoroughly so they're lengthy but oftentimes most of them do not need to be lengthy, just like this part of this comment, to further prove my point.
C: I need this so much. I know 3 languages, and have no idea how to make anything other than fancy calculators. I've asked around on reddit, and forums, and all I got was vague and unhelpful tips like "Oh, calculators might be useful to someone"
C: As a student that is juggling many projects this is a coherent guide, and easily understandable to share with my group. I LOVE this, and really broadened my understanding of how management of tasks could be achieved. Thank you !
C: This looks really great. Consider publishing it somewhere in addition to Medium. Medium is a cash grab and actually blocks your content from people in their attempt to charge users.
C: How do you work with the security aspect of webapps and mobile apps? Anyone building apps may or may not be aware of testing if there are security flaws. How does one deal with it and how do you deal with them?
C: I think you need to look up project oriented tutorials and courses. Corey Schafer's channel bon YouTube has good project oriented tutorials for Django, Flask and Data Science. You can also try out Python related courses from University of Michigan where you learn to build simple projects from scratch(Coursera). Also let me not forget Sentdex's channel on YouTube. He is certainly the king of Python for learners. He has great tutorials for covering almost everything in Python though the one's related to AI, Deep learning and Machine learning are the best one's. Don't get stuck in tutorial hell for long.
C: Oh my god, yes! This was so frustrating when I tried to learn Python a couple years ago... It's like there was this weird void between beginner tutorials that taught you syntax and advanced lessons that taught you like... I dunno, complex algorithms or something (they were well over my head, obviously) but absolutely NOTHING to bridge the gap between them.
C: > I get tired when people write paragraphs upon paragraphs on a topic that could've been easily condensed into a few sentences that would have made it much easier to understand Hahaha 😂 Thank you this made me laugh!! You definitely could have ended it at the first comma 😉. The post was actually almost twice as long before I realized at that pace I would be writing a text book and started deleting most of what I had written (it was not easy!). On the other hand I've read a lot of tutorials and guides that leave you wanting more. You read it and you're like, 'that's it??'. I tried to strike a balance by adding links to more resources in the 'Further Reading' section, so people can delve deeper into any of the topics. >Ill be looking forward to the part 2 of this! Thanks! You're feedback makes me more excited to finish writing it!!
C: I haven't done in Python for quite some time but mentioning Sentdex gave me a warm, fuzzy feeling inside. Great suggestion.
P: 40+ Programming PDF's
C: don't forget about this [1000+ pdf collection](https://github.com/tpn/pdfs)
C: Who put this together?
C: *Sigh* this is literally too much information for noobs. "Where do I start" is probably the biggest problem for people.
C: Nice! By the way, I wrote a little bash script to download them automatically. Here it is: #!/bin/bash wget -c --retry-connrefused --tries=0 --timeout=5 --convert-links --html-extension --mirror -r -l 0 http://book.goalkicker.com/ mkdir -pv ~/book.goalkicker.com/EXTRACTED_PDFS cp -v `find ~/book.goalkicker.com -name "*.pdf"` ~/book.goalkicker.com/EXTRACTED_PDFS After it is done there should be a directory within the `book.goalkicker.com` directory, located in your home folder, called `EXTRACTED_PDFS` containing all of the pdf files from all of the sub directories.
C: Amazing collection! For some reason, Github truncated it to just 1000, with 46 omitted
C: I did not know about this. Now i will share it in my school group too, thank you man
C: Whoever it was, they are a champion of all things wonderful.
C: stack overflow
C: Agreed. One of the links in the other thread (the one with 1000 PDF's) was a style-guide from Lockheed's joint-fighter project. Completely useless to 99% of the people out there.
C: Or you can download them all via http://book.goalkicker.com/all.zip 😊
P: At the age of 29, I've been able to save up enough money to buy myself my first ever desktop computer! It's refurbished but this is huge for me coming from a third world country.
C: Good luck man! Let's get it! Learn by coding as much as you can.
C: What kind of programming are you trying to get into?
C: I am really glad for you! Inspirational story to you: one of my teammate in the past was from a small willage in Sri Lanka. Even today his home village still has no electricity. He is an iOS engineer, pretty good one. My first personal computer was ZX Spectrum, handmade by my father. My own first PC was 286, which motherboard and RAM was gifted to me by my classmate in the university. I used to buy a power supply and used pretty old black-and-green CRT monitor from soviet union coputer from the before-pc era.
C: Refurbished pc's can be a fantastic deal, especially if they have a warranty just in case you get an unlucky pick.
C: OP, what country are you from?
C: For now, web-Development, especially backend and I would also like to make Android Apps one day. In the very long-term, I would love to get into /AI/Machine Learning
C: Fingers crossed! It wasn't easy saving and splurging like that on a PC
C: give databases and the SQL language a shot, also. It seems like it wouldn't be creative but it's very fun
C: I currently got sidelined into a database migration at work. Normally I do regularly software development. I hate it. Massive queries with 400 lines and 10+ joins. Its a nightmare! From now on I will be the guy that does backend fixes. I do not recommend!
C: >Massive queries with 400 lines and 10+ joins Stop! My penis can only get so erect! One man's trash is another man's treasure, lol. Hire me and I'll do it instead. :)
P: I was pissed at Comcast(Time Warner) so I wrote another python script - This one tweets poor speed test results at them.
C: I like what you're doing. I'd make some code structure tweaks. First, in all your classes you have an odd mix of class variables and instance variables. When you do this: class SpeedTest(object): download = "" upload = "" latency = "" jitter = "" You're defining class variables here. And then later accessing them as instance variables. If you're limiting things to only one instance it's still better to use instance variables here, by initializing them in an `__init__(self):` function. class SpeedTest(object): def __init__(self): self.download = "" self.upload = "" self.latency = "" self.jitter = "" Second, in your `__main__`, you 1) make a SpeedTest instance, 2) call its init_driver function to initialize a driver, then 3) call a method of your SpeedTest instance and inject that driver back in as a parameter. That's kind of wonky. What I'd do is have a separate class that would create and initialize a driver, then create a SpeedTest object with that driver as a parameter: if __name__=='__main__': driver = DriverFactory.createFireFoxDriver(wait=5) speedtest = SpeedTest(driver) then class SpeedTest: def __init__(self, driver): self.driver = driver It makes sense since your SpeedTest class can't do anything without a web driver, so you can constrain instantiation to require a driver. Then you could easily test other web drivers if you so needed. Third, Some naming schemes don't sit well with me. speedtest.get_data() Implies that it would return some form of data. But that's not what's happening. Also, what happens if you call `get_data()` before you call `run_test(driver)`? It looks like you'll just log that you couldn't find the data, which is good, but there's probably a safer way to deal with the workflow here. Anyway, it's a good script. There's a lot of room for improvement and plenty of ground to get lost in feature creep ;-p
C: Very cool! If you have an interruption will it tweet them when it comes back online? "Just so you know, ISP, my service was disconnected last night from xxxx to xxxx."
C: This is amazing.
C: I ***almost*** wish my ISP was crappy enough to run these. Almost. Thanks charter! Always get my advertise speed (and often more!)
C: You're awesome, this is exactly what I was hoping for. Thank you for taking the time to go through it and provide clear, actionable recommendations.
C: I really like that idea. I think modifying something like [this script](https://github.com/mrpappas/surfboard_log.py) I wrote this past weekend to monitor my modem's RF signal levels would be better for that application. That way instead of just a failed page load throwing an exception you could still keep logs / gather whatever information actually is available. (I am still able to access my modems gateway when it has no connection).
C: Google Fiber has spoiled me. > @GoogleFiber Hey what gives! I pay for Gigabit download and upload. Why am I only getting 950Mbps down and 995Mbps up?
C: No problem. It's a really good exercise to write something small like this, then spend time refactoring it based on best practices. I always recommend reading Clean Code by Robert C. Martin. You can find pdfs of it online. Excellent read. Would definitely help you out.
C: I've been looking for a 'best practices' book like that for a while - thanks for the recommendation! What would you say the prerequisites are for being able to comprehend a book like that? (E.g. I've taken a couple intro programming classes and written some scripts at work, could I jump into that book?)
C: It has tons of actual code, but doesn't require much programming experience. It's a good book for beginners.
P: Spent the last 100 days learning to code, and told no one
C: Congrats man! I’m “learning” to code, and my parents think I’m some kind of prodigy, but I haven’t even touched my editor since school got out. I’m glad you have the dedication to learn something that I don’t. But I may revisit it after this post! Thanks for the motivation!
C: I’m convinced there is something super valuable about not telling anyone about the work you are doing. I am trying to decide how to best go about learning to code currently and will use this post as guidance. Thank you!
C: ***CSS- The complete guide 2020 (Maximilian S., Udemy). I hated this course so much. Zero sense of aesthetics. The project and examples are so ugly. Just so hard to sit through. I dig Max's stuff but this one is so bad! Colt has a new series on youtube, I suggest you do that instead and get a refund for this.***
C: How did you learn CSS before HTML, considering it's the language that dictates how HTML itself should be styled? And congrats!
C: This might be a little early for you, but something that can truly help your programming and software development skills is the (free) Nand2Tetris courses on Coursera (Part 1 and 2). Part 1 gives you an understanding of the hardware and logical fundamentals that underlie all software, by walking you through the process of designing a very simple computer from scratch. Part 2 walks you through creating a programming language of your own - understanding how languages are built and work under the hood can help you to appreciate the most effective ways to use them. The course is really well put together, with all sorts of materials available, and taught me a lot. It takes a task that seems gargantuan (creating a game of Tetris by first designing a computer and various levels of programming language) and make it really achievable - even if you have to scratch your head a fair bit too get through it at times! Good luck, and stay motivated Edit: typos
C: Yeah man, a little bit every day. There were a few days in there I was only able to do 1 hour, and I counted that as a win.
C: It is more important to build a habit than to rely on motivation(whatever that is) if you want to succeed in life.
C: There was a study done about this. Basically, if you tell people "I'm going to lose 50lbs, just started with this diet and this exercise routine, blahblahblah," you've already received a lot of positive feedback. No need to DO anything after that! But by keeping quiet until after the fact, you don't settle for the positive compliments, you're motivated to earn them. Something like that.
C: Literally the key to success is building successful habits.
C: Exactly. I've taught myself other things in the past (with much less rigor, and results), but I think there was something about that delayed gratification the pushed me forward this time. Hopefully that isn't all undone now lol.
P: Lessons for beginners and junior developers after 11 years of coding. Some of these are things I wish I knew at the beginning so I could stress less.
C: The work within fear is very insightful. Thanks!, first time intern right now , living constant in fear
C: Good to know, but realistically- how can someone devote 6-12 months learning one thing? These days to become even just a front end dev you need: some knowledge of the back end, usually a web framework. html css javascript whatever front end library is cool these days Database query languages like SQL/ Mongo testing and testing frameworks some deployment these days something like docker and kubernetes You're looking at at least 3 years of learning, and this isn't even for a back end or full stack dev. As for me, I graduated from a part time bootcamp at the end of 2019. Learned Ruby, Rails, Js, React/ Redux, html, a little css, and a little SQL. I hit interviewing and had never even heard of big O. Now almost a year later, l have had around 5 interviews progress to second round and have not made it farther. I've tried to fill in the gaps. I agree spreading yourself too thin isn't smart, but someone in my position cannot spend a year on javascript alone.
C: Is this the hungary folk dancing you were talking about? https://www.youtube.com/user/AlgoRythmics
C: To anyone reading this post. This is some of the best advise you’re going to get. Read it. Bookmark it. Read it again in a couple of months and then in a couple of years. This is evergreen wisdom.
C: Great advice! Alot of things sure hit home. I will say that I'm now using Anki for Spaced Repetition. In my job as a SysAdmin I often do tasks only once every few years. Several times I've forgotten or didn't write it down and spent weeks unraveling it.
C: I have such bad imposter syndrome.... this is a great post. Always feeling not good enough like I’m about to be found out.
C: [deleted]
C: 6-12 months on one STACK. Choose a stack and master it. A stack may have 1 language, 3-5 libraries, and 2-3 different backend technologies you have to master, but you learn them in turn, as you build things. So really, that's 6-12 months of building things with your chosen stack.
C: I actually agree with you on this. *'One thing'* doesn't necessarily mean only CSS or only HTML. I don't think a junior dev will get anywhere, to be honest. Rather, *'one thing'* is only Flask or only React. Not Flask and React – AND Django. I guess in a sense, *one thing* means project level focus. But then again, it depends on your prior experience and eventual goal. For instance, if one's never heard of HTML, they're better off spending a month in that. Then CSS next. Then maybe a little intro to SQL. Before jumping into Flask/Django. So technically, the first few months will be spent on basic, no-framework-esque learning. But only after that can the person start going into Frameworks. I learned Django when it was hot. And I can't tell you the number of other shiny frameworks that came out that many switched to. And the eventual outcome was even more confusion and frustration. Learning is incredibly hard! The takeaway for learners is to focus on things that collectively make sense instead of chasing after latest framework out there. It may give you a temporarily thrill but thrills don't last. Let me know if this makes sense.
C: On the other side there are many professions where a degree is a hard requirement. No one is going to become a lawyer, accountant or doctor by doing a bootcamp and some online courses, not even after 5 years of doing that. The fact that you can become a software engineer without ever going to school or from a completely different background is amazing to me. It's a very good thing. Yea it sucks that getting hired is hard, but there's not much to be done about it, it's supply and demand. I don't think it's that weird to spend a lot of time learning one thing either. I also started with sort of a bootcamp and while it certainly helped me learn the basics of Java, JS, HTML and CSS I'm still learning a ton about JS even after working with it for 2 years. I just now started learning React. Even colleagues that have been programming professionally for 10 years still have areas of their expertise that they haven't even touched yet. There's a whole world out there of stuff to learn.
P: Had to teach my "Learn Python for Research" PhD course remotely and decided to make the recordings and material publicly available for those interested. Feel free to check it out!
C: Thanks
C: Make sure you clear this with your employer. I am a professor but I don't own the copyright on my lectures, my employer does because it was done for them for money. That means I can't distribute them outside our approved systems and they don't want students or staff passing things around on YouTube. Some schools really like seeing public content, some curate some material for the public and others don't like any of it, but it's usually up to them not you what can be done with that work.
C: Will this be good for someone who is completely new to Python and coding?
C: Haven’t gotten a chance to check this out yet, but people like you restore my faith in humanity.
C: Good point, I will check. These materials are for an external workshop that is not linked to my employer (which is all in the clear), however, I did use my themed slides so that might be an issue. Thanks for the heads-up!
C: to elaborate on Tieskmans answer. Id say the first topic is one that would be reasonably relevant for someone that is completely new to python and coding. The remainder of the course is very specialized, focused on data collection and processing as far as I can see, which might not be that relevant to all beginners. Depends on what sort of stuff you'd like to do with your programming. If you'd like to retrieve data from the web, and make statistical analysis of it, this sounds absolutely great, but I have a feeling most beginners won't go down this avenue. If you are completely new I would recommend finding a different python course, that is more focused on the basics. Some grasp the basics really fast, while others spend a lot of time on it. Seeing as this is intended for Phd students it should give you an idea of how you are in relation to them. They have basically spent their life learning how to learn efficiently, so if you havent done that it might take a bit more time for you. I think theres better ways than this to learn coding basics, which are more fun and engaging, provide a better foundation, and touch on topics that are more relevant to the general programmer. TLDR; this is a programming course for people with a special application in mind.
C: Yes, no prior knowledge should be required to follow along!
C: Update, I have been cleared to leave these videos up on YouTube!
C: This is extremely high quality content!
C: OP is clearly a high quality human. Thanks for sharing this with us!
P: I'm 32 years old, and just started my first full-time job as a developer. One year ago my programming knowledge was basically nil. Everything I learned, I found via /r/learnprogramming, so just wanted to share my experience.
C: You should cross post this to /r/cscareerquestions, I think they would be really interested in it, as this whole topic comes up so frequently there. Also: Congratulations and Good Luck!
C: Wait, if you've only been programming for a year, you can still get a job as a developer? Is this typical?
C: What was the time commitment like? I'm a bit confused about your filming gig since it doesn't sound like a 9-5 job. What projects did you put on your resume/cover letter?
C: [deleted]
C: I wonder how your StackOverflow profile looks like? I have one, but mostly used for looking for solutions in the problems that I have. I can't imagine any prospective employer getting turned on by my profile in StackOverflow (I almost don't answer in StackOverflow, I just use it to ask questions; been programming for a while now).
C: Perfect timing. About three different threads have popped up just today asking about what it takes to get started from scratch without a degree.
C: People recruit on LinkedIn for developers with no experience? How did they find you?
C: Done :)
C: If this is common, I'm wondering why I'm even at university.
C: Because its still a stupid hurdle. Honestly no one cares what the degree is in, just that you have one. EDIT: Fwiw - I work at HP and do not have a degree, but if I want to move up anymore, I need to get one.
P: Huge list of Computer Science courses with video tutorials, compiled from all over the internet.
C: These subs give so much out I end up doing none of it haha
C: Anybody else ever feel overwhelmed by how much there is to [possibly] learn?
C: 'Compiled' ayy
C: [deleted]
C: I usually try it for like 3 days and give up shortly after. I'm pathetic.
C: Definitely, but I also see it as incredibly exciting!
C: aggregated, indexed. [Edited]
C: You're right! I actually emailed CS61B instructor to ask about it. Apparently, the videos were made private because UC Berkeley were taken to court because the videos they uploaded online did not have transcript or subtitles for differently abled people. So, instead of facing the lawsuit, Berkeley decided to make private all their online course video content. More information here: https://www.insidehighered.com/news/2016/09/20/berkeley-may-remove-free-online-content-rather-complying-disability-law
C: Some people are just want to see the world burn.
C: Literally they just could of posted on reddit and I bet somebody with too much free time on their hands would have done it in like 2 days. Instead they take away all UC Berkley content from us because the world has to revolve around them. Hell there are apps out there that will translate to text for you. :(
P: EVERYTHING JUST CLICKED
C: Happened to me when I realized print was a function
C: Just you wait friend, this goes deeper.
C: Wait, it’s all objects?
C: I was so confused about object oriented programming because it sounded so complicated but it literally is just ... everything being an object
C: I want the LSD you are taking
C: Always has been.
C: We’re all just objects.. aren’t we?
C: i thought i was looking at r/stonerthoughts lmao
C: 🔫👨‍🚀
C: gun.fire();
P: If you are learning programming(newbie), these may be your treasures on the internet!
C: The Odin Project is a great free site to learn programming, it has you setup your own Linux dev environment right off the bat, then gets you into projects that will eventually be your portfolio. I think it's one of the fastest shots to a career out there (that being said don't put a time limit on your self in these early stages it's certainly a journey to learn programming). After TOP you will understand programming and have the skill to be able to learn any other language out there.
C: Let me know if I got something wrong: 👉**15 Sites you can learn coding for free.** * https://www.github.com/ * https://www.codecademy.com/ * https://teamtreehouse.com/ * https://www.udemy.com/ * https://www.coursera.org/ * https://www.khanacademy.org/ * https://www.w3schools.com/ * https://www.edx.org/ * https://www.freecodecamp.org/ * https://tutsplus.com/ * https://www.codeconquest.com/ * https://www.udacity.com/ * https://www.sololearn.com/ * https://www.codeavengers.com/ * https://www.learnenough.com/ 👉**10 Free Games to improve your coding skills** * https://www.codemonkey.com/ * https://www.flexboxdefense.com/ * https://www.bloc.io/ruby-warrior#/ * https://www.codecombat.com/ * https://robocode.sourceforge.io/ * https://cyber-dojo.org/ * https://www.codewars.com/ * https://www.codingame.com/ * https://www.flexboxfroggy.com/ * https://www.microsoft.com/en-us/research/project/code-hunt/ 👉**10 Programming Blogs You can follow** * https://blog.codinghorror.com/ * https://alistapart.com/ * https://codepen.io/ * https://www.thecrazyprogrammer.com/ * https://www.codewall.co.uk/ * https://www.cloudscaling.com/ * https://blog.codepen.io/ * https://www.hackster.io/ * https://css-tricks.com/ * https://blog.mozilla.org/
C: This is a great list and thank you for the suggestions! I am currently working through a course on The Odin Project and have found it very helpful so far, would recommend it! Also, I found an app called Mimo that is sort of similar to duolingo but for learning web development and I’ve found that to be a good resource for reviewing as well!
C: I agree 100% with you on this! I started TOP a few days ago, and am almost done with the Front End Basics section in the Web Development Introduction portion of the Full Stack JavaScript track (man that was detailed lol). I FREAKING LOVE IT! I've tried so many other courses and nothing comes close to TOP. Hands down the best
C: Just wanted to add, I am a developer but I still went through the Odin Project purely because I was not super comfortable in Linux *and* I wanted to learn web development. I was purely a backend developer before, with minor front-end stuff I had picked up for minimal UI building, but zero knowledge on integrating my work with the web. It was a phenomenal journey that gave me great value and experience.
C: Added Derek and Abdul Bari: https://www.youtube.com/user/schafer5 https://www.youtube.com/user/TechGuyWeb https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q https://www.youtube.com/user/sentdex https://www.youtube.com/user/dataschool https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ https://www.youtube.com/channel/UCshZ3rdoCLjDYuTR_RBubzw https://www.youtube.com/channel/UCLNgu_OupwoeESgtab33CCw https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q https://www.youtube.com/user/shiffman https://www.youtube.com/channel/UCxX9wt5FWQUAAz4UrysqK9A https://www.youtube.com/user/TheCharmefis https://www.youtube.com/user/LevelUpTuts https://www.youtube.com/channel/UCSJbGtTlrDami-tDGPUV9-w https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg https://www.youtube.com/user/killerphp https://www.youtube.com/user/CalebTheVideoMaker2 https://www.youtube.com/user/derekbanas https://www.youtube.com/channel/UCZCFT11CWBi3MHNlGf019nw
C: How do you recommend I approach the Odin project? How much time a day do you spend on it? I’m planning on doing it along CS50, so I would like to hear your thoughts on that?
C: Hey! CS50 is HARD, make no mistake. It took me months to finish, but I really recommend it (especially the first 2/3rds). It does an awesome job of explaining some of the gritty details that might be missed on codacademy/treehouse/etc. If you like the online class approach, OSSU is a really good guide for well rounded CS. Alternatively, if you have a pretty good idea of what you're going for, p1XT is really good too. Good luck!
C: I picked the Full Stack JavaScript track. Just follow what they have laid out there for you. However, you can do what I'm doing, and that's create a folder system on your Bookmarks Bar. It's one folder dedicated strictly to TOP. In that main folder are many subfolders that I'm building out as I go through the course. Each sub folder is dedicated to specific sections of the course. Especially the recommended readings that they have in each section. Just save each one to a designated folder for later reading & reference. I spend about 8-10 hours per day. Mainly because I'm kind of on a time crunch and need to be job-ready by March 2020. Also, open up your favorite note-taking app and take notes. Doing so will help your brain do some magic as far as solidifying this newfound knowledge. CS50 is cool if you wanna learn some theory, but don't devote so much time to it if you're serious about going through TOP. This course is strictly hands on with very little hand holding. CS50 is good when you're pretty much done for the day on regards to TOP and want to squeeze in some theory to end the day.
C: I wish I’d known CS50 was that hard. I tried to start it, got lost repeatedly, gave up thinking I can’t even keep up with a freshman class.
P: To make career-planning less confusing while learning to code and I made a website with over 50 CS career roadmaps!
C: This is actually really fucking awesome. Bookmarked
C: Nice work! For data science, I'd suggest https://github.com/ossu/data-science
C: This is really awesome! Thank you very much. I'm in the process of teaching myself to code. Since I have a full-time (most of the time i work 12hrs a day) job and a family and I didn't know what options i have and where to begin - I just dived into fullstack webdev and decided that I can adjust my path later, when I know more about programming and my preferences. Your work really helps with the decision making. Again, thank you so much. You rock!
C: just a friendly reminder that no learning road map should be linear. if you started with a different step or skipped a few steps or messed up the order just keep on going. as long as you're doing *something,* as long as you're taking a step forward, please continue! you're doing great.
C: This is fantastic! Thanks for doing & sharing this, /u/roonishpower!
C: Thank you, kind stranger. :)
C: I don't have enough reddit coins to award you so here is a bouquet of bargain bin basil: 💐🌿 ✨
C: This is exactly where I am, except 8-10 hour days. Try and learn code 1-2 hours every day after work. I’m actually excited to go home and learn to code. Especially in hopes of trying to find a new career with it. Excited to use this site to help with the process.
C: That was the intention with which I started building this tool. I think a central repository where people could explore their career options would be really really valuable. Hopefully, I can scale this from tech roadmaps to roadmaps for all kinds of jobs!
C: Exactly! My hope is that people could see multiple roadmaps and build one for them. Then it's just iteration. You decide to follow something, but then you don't like it, so you change it. Trial and error till you make it!
P: How students get themselves into tutorial hell and how to get the heck out of it.
C: I'm very good at a couple of things, but programming isn't yet one of them. I am currently in tutorial hell, and your essay is exactly what I needed to read. Thank you.
C: I‘ve not only been stuck in tutorial hell before but also sometimes my need for perfection and fear of failing at a specific project have kept me from working on them. It took me sometime to realize that I can‘t expect my projects to be flawless. Just keep on making stuff. Perfection kills progress. Sorry if this is off topic.
C: I’ve been there and of course it depends on the tutorial and other things, but I honestly believe it’s down to your mindset and goals. Start every tutorial with this following mindset and goals: 1. When I learn something new (which is usually every lesson) then I’ll stop the tutorial and practice that lesson until I’m confident. 2. Watching a tutorial won’t help me get any better. 3. Practicing what I’ve learnt will 4. Watching videos doesn’t mean I’m learning. It’s only fake learning. Watching and practicing is learning. Teaching it to other people is mastering.
C: I love this and it is a great framing of the problems I had during the first few years of trying to learn. An exercise that I do, which fits the philosophy above, is that, for any tutorial I do, I have a rule that I need to build three things with it. Take the concept and apply it to two modified versions or extensions of what you’ve learned. This isn’t enough to know something but it is enough that, when you have to reengage the topic at a later time, it tends to feel a lot more familiar. Great post
C: Awesome! I started to learn HTML and CSS in January. My first approach was strictly reading the information at W3schools, but I retained very little. It also took quite a while. Now, I am taking this course on Udemy that gives me challenges to do on the way, and that approach has been much more effective into actually being able to implement what I learn.
C: You're welcome!
C: Follow a curriculum that relies on small projects to apply your knowledge. Every project after that compounds on the knowledge of the one before. ie: The Odin project is working great for me on this aspect. Don't get stuck on a project or problem too long. If you can't break it down to smaller problems and solve it. Refresh your theory and then go back a week later or so, or find a similar project (using same fundamentals) you can complete.
C: Did you ever hear the [tale of the ceramics class](https://excellentjourney.net/2015/03/04/art-fear-the-ceramics-class-and-quantity-before-quality/)?
C: [deleted]
C: This reminds me of something Chuck Jones’ father told him. To paraphrase: you have a thousand bad drawings in you and the sooner you get through them, the better. Dave Sim’s admonition comes to mind too: first you get good, then you get fast, then you get fast and good. I think this applies just about anywhere. Fail faster! Get those reps in. I really enjoyed this post. *For those who don’t know, Chuck Jones was an iconic Warner Brothers animator and Dave Sim is a comic book artist.
P: Tools I wish I had known about when I started coding
C: I would be curious to hear what you all are using these days, as I'm sure there's a bunch of cool new things I haven't learned about
C: damn wheres mah linux specific
C: >[ConEmu](https://conemu.github.io/) — If you are on Windows and you would like to have multiple terminal tabs, this is an easy, free solution to your tab-related woes. Never again will you have to flip back and forth through entire windows just to look at your different error messages. There is also Windows Terminal now, which is open source and maintained by Microsoft themselves.
C: Thanks! Just added the bracket colorizer and the console util.
C: Live server is insane
C: For a Mac Specific app, BetterTouchTools is a necessity. Lets you do the custom snaping like magnet and lots of customization for the trackpad, mouse and even touch bar
C: > [Ditto](https://ditto-cp.sourceforge.io/) — You know when you’re trying to copy four separate answers from Stack Overflow and you have to keep switching back and forth from your browser to your IDE? Worry no more. With the Ditto clipboard manager, you can copy-paste your way to victory. Windows have built [clipboard](https://support.microsoft.com/en-us/help/4028529/windows-10-clipboard) history now. Win+V will show history including images that was copied into clipboard.
C: I'm a noob in Web dev, but the one I found somewhat helpful for beginners is the HTML Tree Generator, which gives a overview of the HTML structure of the page. Nice information OP.
C: the brackets will change your life lol so much easier to see your code blocks
C: Tree generation! [http://andrewmarsh.com/software/tree3d-web/](http://andrewmarsh.com/software/tree3d-web/) &#x200B; :D
P: Resources I wish I knew about long ago!
C: I am an intermediate dev and this information will help me a lot thank you! Saved!
C: Thanks for the sites OP! [Python Principles](https://pythonprinciples.com/) is also free right now, feel free to add it to your list :)
C: Thanks for the list! I'll add: when I feel like practicing algorithms, [Project Euler](https://projecteuler.net/archives) is my go-to
C: > If you guys have anymore Have you considered checking our **FAQ** here? We have a plethora of learning resources and more.
C: I just discovered Color Hunt yesterday and thought it was really useful. Some similar resources I'll add for everyone: * [Adobe Color Wheel](https://color.adobe.com/create/color-wheel) (good way to create your own color palette) * [Contrast Checker](https://contrastchecker.com/) (checking color contrasts for accessibility)
C: IMO edabit > codewars & hackerrank, but nice list! Coolors.co is a fun palette generator too.
C: I'm always surprised to not see exercism.io listed in these sorts of posts.
C: Great! Glad it helps!
C: How do u save lol
C: On the android app there's a bookmark icon at the top. On desktop there's a save option just below OP
P: You're not too stupid for programming
C: I have trouble paying attention, especially when reading and it gets worse with programming. On top of that it took me way too long to figure out that I wasn't actually trying to understand how the code works but was wasting time trying to memorize the syntax.
C: I feel like i am too stupid for coding. I am currently in a coding bootcamp and struggling a lot. I will try your method.
C: I feel like most people aren't too stupid for programming. However, one of the base requirements are that people understand *logic.* \[This\] results in \[that\] can be ridiculously challenging for people especially as you get into larger process maps and I feel like either you have it or you don't.
C: If I had an award I'd give it to this post! [edit] : ⠀⠀⠀⠀⠀⣤⣶⣶⡶⠦⠴⠶⠶⠶⠶⡶⠶⠦⠶⠶⠶⠶⠶⠶⠶⣄⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⣿⣀⣀⣀⣀⠀⢀⣤⠄⠀⠀⣶⢤⣄⠀⠀⠀⣤⣤⣄⣿⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿⡷⠋⠁⠀⠀⠀⠙⠢⠙⠻⣿⡿⠿⠿⠫⠋⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⠀⢀⣤⠞⠉⠀⠀⠀⠀⣴⣶⣄⠀⠀⠀⢀⣕⠦⣀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⢀⣤⠾⠋⠁⠀⠀⠀⠀⢀⣼⣿⠟⢿⣆⠀⢠⡟⠉⠉⠊⠳⢤⣀⠀⠀⠀ ⠀⣠⡾⠛⠁⠀⠀⠀⠀⠀⢀⣀⣾⣿⠃⠀⡀⠹⣧⣘⠀⠀⠀⠀⠀⠀⠉⠳⢤⡀ ⠀⣿⡀⠀⠀⢠⣶⣶⣿⣿⣿⣿⡿⠁⠀⣼⠃⠀⢹⣿⣿⣿⣶⣶⣤⠀⠀⠀⢰⣷ ⠀⢿⣇⠀⠀⠈⠻⡟⠛⠋⠉⠉⠀⠀⡼⠃⠀⢠⣿⠋⠉⠉⠛⠛⠋⠀⢀⢀⣿⡏ ⠀⠘⣿⡄⠀⠀⠀⠈⠢⡀⠀⠀⠀⡼⠁⠀⢠⣿⠇⠀⠀⡀⠀⠀⠀⠀⡜⣼⡿⠀ ⠀⠀⢻⣷⠀⠀⠀⠀⠀⢸⡄⠀⢰⠃⠀⠀⣾⡟⠀⠀⠸⡇⠀⠀⠀⢰⢧⣿⠃⠀ ⠀⠀⠘⣿⣇⠀⠀⠀⠀⣿⠇⠀⠇⠀⠀⣼⠟⠀⠀⠀⠀⣇⠀⠀⢀⡟⣾⡟⠀⠀ ⠀⠀⠀⢹⣿⡄⠀⠀⠀⣿⠀⣀⣠⠴⠚⠛⠶⣤⣀⠀⠀⢻⠀⢀⡾⣹⣿⠃⠀⠀ ⠀⠀⠀⠀⢿⣷⠀⠀⠀⠙⠊⠁⠀⢠⡆⠀⠀⠀⠉⠛⠓⠋⠀⠸⢣⣿⠏⠀⠀⠀ ⠀⠀⠀⠀⠘⣿⣷⣦⣤⣤⣄⣀⣀⣿⣤⣤⣤⣤⣤⣄⣀⣀⣀⣀⣾⡟⠀⠀⠀⠀ ⠀⠀⠀⠀⠀⢹⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀
C: As a retired developer you are spot on. I remember my first programming class and I was lost. This was the early 80s, in night school, I was too stupid for Basic language. Everyone else got it and I was an idiot. I struggled through it but was discouraged. Then we learned assembly(remember early 80s) and I was too stupid, until one night when it clicked in my brain. I started to see a computer as a machine, no different from a transmission in a vehicle, I understand those. My career was around systems and their internals, sometimes I had a lot of fun implementing low level solution before their was a great solution.
C: I just went through code academy for Java and I understand maybe 20% of it. I think what helps me is realizing they are just teaching concepts and how basic things work so when you need to utilize those concepts they aren't totally alien to you.
C: Syntax is easy. Programming is hard. Whenever I'm learning a new language, I have *tons* of tabs opened with "how to do X in Y language". Even in Python (the language I'm most familiar with) there are still things that I forget the syntax for and have to look up every single time. But I pretty much always know what to search for these days, and that's the real skill (or at least that's what I tell myself to make myself feel better).
C: I see myself as a fairly smart person (hope that doesn’t sound too pompous) and I started codecademy Data Scientist course about a month ago. I was flying through it at first and felt great, then started to get into projects where you are really integrating everything you’ve learned into a real program using functions and classes and I felt that I may be too dumb to do it as well. But thanks to posts like this I am persisting and really just work on reviewing the material repetitively and using different sources until I throughly understand before moving on. I believe it is a lot of hard work but if you really put your mind to it and look into all sorts of different explanations and examples then you can be successful
C: Literally same. Honestly ignoring how well others are doing in the bootcamp is the only thing that helps.
C: i'll use one for you
P: I began teaching myself to code a year ago. I got hired at my first job 4 months ago. Here is a breakdown of somethings I was not ready for (FYI job is remote ruby/rails dev)
C: One thing I can tell you is, that you should be incredibly proud of yourself. That was a good post. The realities of having a remote job... I wish someone could emphasize more on that for people, really. Keep up the good work, OP!
C: > I had wasted a lot of time building out features that were not wanted. As a developer for the past coming up to 4 years, i can not stress this point enough to anyone getting in to the industry. &nbsp; Code to your requirements, no more, no less. Do exactly what it says on the tin. &nbsp; The extra time you may spend on adding cool little features of functionality you think will be useful or the client will really like will most likely go unused, the code will never be touched and will end up becoming this horrible monster that sits in your application that will cost you time and effort to remove or refactor later down the road. Instead spend that time refactoring the code that meets the specifications, building automated tests (both unit and integration) that tests as many aspects of your code as possible. hell spend time at the start of the project designing and architecting your project, because it will highlight issues you will never think of once you get tunnel vision'd on writing code. All of this will make the project easier to come back to in the future, make it easier to extend / update and know that any changes you make have plenty of tests covering you so that you dont break existing functionality, and if you do, will highlight exactly where the bug you have introduced is. It may be less fun doing all this than messing around with the code, but you will be so happy you did.
C: That was one hell of a post and it really spoke to me man. Really. I'm in this part of my life where I feel like a big transition is needed, but getting there is hard. Yes, you can say "Well look at what you got. The entirety of human knowledge is available online. Just read a lot and you can learn anything!" So much easier said than done. There are so many things I've been reading lately that seem to go right over my head, make me feel dumb and my lifelong habit when I feel dumb has been to back away and quit, so I won't feel like that anymore. Having the perseverance to push through is something I've had a hard time finding, but I'll get there. It's just....it feels weird starting over at 32 in something that even 14 year olds are better at me in. I feel like I'm in kindergarten and everybody else is in high school
C: > I wanted to become a developer so I could build and create, not so I could spend 3 hours reading through Twitter’s API documentation about rate limits. HAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHA *::breathe::* HAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHA *::sigh::* :D Welcome to the tech world!
C: This is the first "I started learning to code X ago and I've been hired" post I've actually gotten something out of. This is an amazing post, thanks a lot! :)
C: I haven't had a remote job before, although I would like one. Personally I have no idea why being able to work in a public place would be appealing. I just want to work at home where it's quiet, I have my comforts, can listen to embarassing music without judgement and don't feel like anyone is looking over my shoulder! (I have a job interview for a semi-remote job next week, hoping I get it!)
C: I've worked remote since 94. Just plain working at home, though -- no sitting on the beach coding the next big thing. I have no regrets. Starting with being there to watch my kids grow up and ending with missing all of the lovely office politics. Every time I leave a client site I laugh inside after being reminded yet again why I love working out of office so much. You need to set work boundaries -- you need to make sure you stop working and return to home stuff every now and then. You need to get out of the house to take a break. Keep distractions to a minimum. Far easier at home since you are (mostly) in control there. All on you though. You need to convince all of your family, relatives and friends that you do indeed have a real job and that you are not available 24/7 for running errands -- although it's sweet that you can pretty much run an errand 24/7. Don't blow your cash on fancy stuff especially when starting out, but when you're settled in and secure, spring for a nice office setup. It makes a huge difference to work in a professional environment. Along the lines of being secure, if you're self employed you need to do all the saving for retirement, take care of health insurance (in US at least), and pay them taxes. It initially feels like you've got a ton of money rolling in and then you get that first tax bill. I've known several developers that have forgotten this step and go broke after their first year. Get and accountant to help you out.
C: I can relate to wanting to quit when something makes me feel dumb. I feel like I have done this most of my life. I think what made me stick with this was surrounding myself with a helpful community at meetups. Also the feeling dumb this is going to happen to you again and again. You will get to some concept that goes way over your head and feel like giving up. Over time if you stick with it that concept will start to click and you will eventually grasp it. The best part about this process is now you are learning how to learn (I thought this was cliche bullshit at first) What I mean is the next time you get to a subject where you find yourself overwhelmed and feeling stupid you now can think back to last time you had this feeling and the steps you took to overcome it. This thought process helps me relax. I try not to beat myself up for not getting something right away because now I have the experience to know that these things take time but if I stick with it I will eventually grasp the concept.
C: I've had a remote job, an office job, and a combo. Hardest things about being remote is staying on task. It is so much easier to let yourself wander with no one watching. Second hardest is the loneliness. You are basically home all the time and so you end up hating it. You don't interact with coworkers. It seems cool at first but it eventually wears you down. Right now I have a combo. Our team gets to work from home Tuesdays and fridays...and I still go in to work a lot of the time those days. Work is where work is done and so I am more motivated. I also play boardgames over lunch with my coworkers and it's fun. Of course everyone is different. I just remember thinking working from home would be a blast but ended up hating it personally.
C: I recently visited my best bro in Virginia for his wedding. He works remotely from home for dish network. He plays rust and WoW during work. He literally has 2 PCs, side by side, in an L shaped desk and he spins his chair from one to another, on the fly, as needed. Not gonna lie, way better than my job.
P: After 9 months of teaching myself how to program I finally landed a job. I want to share some of the things I learned on how to achieve this goal (mostly focused on front end).
C: Just saved your post, this gave me that second wind to continue to learn C++, thanks OP. &#x200B;
C: I'd be curious to know the resources you used to learn. Especially the algorithms and data structures
C: > The memory model and the call stack will then no longer be something complex and your code will get better and you'll learn coding faster. No longer you'll wonder why you can't mutate a string or why why you pass non primitive types by reference rather than value. Just a note that high-level language systems nowadays (the majority of the ones you mentioned, other than C) are often written so many levels above the CPU and kernel that the reasoning for certain basic decisions is generally *not* “Because the computer does it this way”. What your specific language/runtime decide to pass by value or reference, or whether strings are mutable, etc, are mainly opinionated quality-of-life choices, rather than just “because the hardware/computer works this way”. So while your point about learning the nuances of how computers store and process data is valid in part, I’d be careful not to jump to conclusions, given how many layers are often between the language and the underlying hardware in 2018.
C: It's a great post. I'd say the only nitpick is saying don't learn from videos. How people learn is very personal, and videos may help a lot for beginners to get large concepts. Doing the work is what is needed at the end of the day, but understanding how can be reached by a number of methods.
C: Thanks, I'm curious about what your schedule was like over those 9 months. As someone that has been self-teaching full time for 4 months, I'm interested in how others structure their time and prioritize. I am learning, watching and building M-F from 9-5 and treating it like a job. Discrete goals of understanding JavaScript (and React) deeply and C# shallowly.
C: Saw Cherno's video about cutting out videos and just write some real code, and if you need a resource then go buy a book. Fascinating how successful people give this "just do it" advice. I have probably watched 100s of hours of videos on c++, and now I've committed to doing an hour today, I realise how little I don't know / can't make (and am loving it).
C: There's a free book called Algorithms and Data Structures by Nikolaus Wirth. Might have been published in 1985 but it's still a decent book. http://freecomputerbooks.com/Algorithms-and-Data-Structures-by-Niklaus-Wirth.html
C: Not OP but I discovered this book 'Grokking Algorithms' from a fantastic youtube channel 'The Coding Train'. The book explains a lot of the algorithms and data structures that I am learning in my first sem of CS at school. This thing even has the stuff that I am going to learn in the next semster. I found this book much more fun than my monotonous textbooks. If anyone wants to get a good grasp of the fundamentals of A&DS this is a great starting point and then move on to MOOCs by famous Universities. MIT's A&DS was the one that I used. Dunno if it's still available on YouTube because I remember that OCW courses were removed or something? [Link](https://www.amazon.com/Grokking-Algorithms-illustrated-programmers-curious/dp/1617292230)
C: Yeah that’s a silly blanket statement. I sit next to one of our senior devs and he was asked to write something in a language he wasn’t familiar with and videos got him through it. Videos have their time and place. I would edit that bullet to say don’t rely solely on videos to learn.
C: That's why I love cheat sheets and just reading the docs. Because if you know the concept, everything else is just a search away.
P: After many years of prison I was released, learn to program, and was hired as a mobile developer. If you are learning to code and need the extra support reach out.
C: I got out in 2018 and have struggled to get a decent job. I have been turned down by many jobs . Then my friend a web developer, who got a degree in Arizona . Told me to try to go to a boot camp and leave the labor industry. So now I’m taking free classes before I go into boot camp. So reading this brought my hopes up and good to hear what you achieved
C: >After many years of prison I was released, learn to program *I too was released from JavaScript for many years and then learned to program.* Jokes aside, nice job. Keep on doing what you love man.
C: I did an under grad CS degree in my early 20s. Seeing how my disability was I decided to not get I job but instead try and improve my disability. (whilst keeping programming as a hobby) I did it! But now 33 years old and I'm ready to get to work but **my inferiority level is all-time high.** Not bothered about the tech skills just the 10 year gap and my speech problems. Will they say "10 years? piss of you lazy bum". This gives me a bit of hope!
C: I love this so much. Bless you for what you are doing and congratulations. I'm proud of you.
C: Thank you for creating this support system for aspiring professionals and recently incarcerated. Blessings 🙏🏼
C: Hey, if you're looking for a full-stack course, I suggest you to give a look at The Odin Project. It's free and it's great. It gives you the chance to set-up your own environment and tinker with projects with a "hands-on approach" instead of the controlled environments of regular bootcamps or online courses. On the other hand, it's hard and you must really commit to it. But I think it's worth it! Edit: sorry for my English, I'm still learning it!
C: >I’m taking free classes before I go into boot camp. def recommend this route, you might get away with never paying for a bootcamp. Def possible to be self-taught with all the free info out there today.
C: @ u/swiftlyRising this is exactly what you’re talking about. So proud of you and especially that you turned it in to something to help others.
C: I agree. TOP is a gem
C: Looks like you have a really strong grasp on English, no need for the edit friend!
P: Keep being told to build projects, but don't know what to build? Here's some ideas
C: Adding to this advice. I fair badly with doing projects from these lists, mostly because I can't seem to find building something that I am not very passionate about a rewarding experience. So what works for me is to check out a lot of online tools and websites with APIs, trying to figure out if it could be improved in some way. And trying to implement the optimization. I did two projects this way and it was extremely rewarding. Trying to force yourself to do something you don't like is a quick way to lose interest in this field and burn out.
C: THANK YOU. There's been a huge amount of "build something!" posts, but I tend to get overwhelmed trying to come up with an idea to build. This is great.
C: Not all heroes wear capes! Thank you !
C: Awesome list! Thank you for putting it together!
C: Wonderful list you've got going there! I'd also highly recommend adding [this project ideas repo from Florin Pop](https://github.com/florinpop17/app-ideas). It's catered towards web development, but has some awesome project inspiration regardless of your tech stack!
C: Alternatively, building something is a great way to be inspired for an idea to build another thing you have passion for.
C: Got some bad news about industry my friend
C: What exactly do you mean by improving APIs?
C: For what it's worth, I started learning about two years ago and it took me until just a few months ago to really start having project ideas popping up in my mind. I used to get overwhelmed trying to think of things too and couldn't think of anything to do other than the same old list apps or clone apps, and those weren't really "projects" to me so I hated working on it but could never think of anything else
C: While working in a job the money is the reward, so I can handle doing uninspired work. ;)
P: Learned to code, got interview at Google but I wish I was told...
C: Not every company is going to ask you complicated questions. I agree with doing your best to prepare but at some point you need to get an actual job. I just finished an Android app for a company I'm working for, I used 0 algorithms. Most people will not be solving complicated problems day to day. In my opinion read the cracking the coding interview, refresh data structures, common algorithms, know their big o, and go interview. You might not get a job at a top 5 tech company but you will get a job if you are competent. Same goes for other careers you want to drive an F1 car? Your body needs to be in optimal shape, reaction times well beyond average human, however, you can drive in a less demanding races, if you were not born for it. Posts like this give this idea that everyone needs to be an all star and study all the time to even get a job.
C: *Disclaimer* There are TONS of great companies to work for that aren't 1/100 as intense as Google or Facebook.
C: Good job on getting the interview! Let us know if you got it. Something I wish I did earlier was maintain a portfolio. I did some projects but never bothered to put them on Github. Never bothered to finish them. Once I learned what I wanted to learn from this project I gave up on it. So to anyone starting out: Put your stuff online. You can still delete some stuff when you're ready to start applying for jobs, if you don't want employers to see it.
C: Also, accept that being mediocre is OK too. You don't have to be a big shot programmer working at a big shot company 80 hours a week to be considered successful. Do your best, do it correctly, be proud of the work you do, and don't worry if you're not Google material.
C: 20+ years in the industry, and I've worked as a developer for fortune 500 names. The one thing I wish someone had told me was that the on-site perks companies like google offer -- game rooms, cafeterias, showers, gyms, laundry facilities, daycare, etc. -- are not there for your benefit as an employee. They are there so that you have fewer and fewer reasons to leave. Don't let the existence or lack thereof of these things influence you during your salary negotiations!
C: I'm always torn after reading a post like this and have seen very similar posts on /r/cscareerquestions. I have nearly 2 years commercial experience working in IT now out of college, 1 in data science/machine learning, and the other in backend java, and I've never put in nearly as much work into studying/prepping for jobs as people like OP do. That's not to belittle how much work/prep they do, I admire how much commitment people like OP have to this field. This is more for other people who might look at posts like this and just feel like they're not committing as much as they need to in order to work in this industry. >bit manipulation, memory management I have no idea how to any of this off the top of my head. I would undoubtedly have to google it, and not once have I ever had to deal with it in my jobs. I'm not great a maths, yet I got the 3rd highest mark in my masters on the topic of machine learning and data mining. I don't "dream and puke code". The amount of times I've had to google "how to declare array java" at work is ridiculous. I admire the amount of work people like OP put in. Google would easily hire him over me any day I'd say. And i'm fine with that. My goal here is just to show to others who may be thinking that they're not good enough or aren't working as hard as OP, that you can absolutely make it in this industry if you're only doing half as much prep as OP. Will a big 4 company hire you? Probably not. But that's ok, there are TONS of other companies that will, and that can offer benefits that would up there with the likes of them. Also as unfair as it may be, it is absolutely true that "it's who you know, not what you know" that gets you work. Yes if you're a top developer you'll obviously stand a great chance of getting a role. But have a friend at a company who's good friends with their manager and can talk you up and give in your cv? He's probably going to get the job. Networking is arguably more important imo. Also soft skills are really important. You might be able to write the most eloquent and efficient code ever, but if you can't work in a team and communicate with the business/clients, you're going to have a rough time.
C: Posts like this always leave me demoralized. I couldn't get into comp science because I am retarded at any math above algebra. I have no problem programming though. I work as a mainframe programmer currently, but I am trying to get into mobile development. I've been breezing through tons of courses without any issues, but I still feel like I know nothing.
C: [deleted]
C: >The amount of times I've had to google "how to declare array java" at work is ridiculous. Yup.
C: I really agree with this. Plenty of my friends work in Google and a lot of them aren't the type of people who would even code for fun. They just know the fundamentals of their specialization, work well in a team and seem like good craic over a pint. Feels like fresh grads that take most of their knowledge of the interview process from Reddit will be over-prepared for the technical aspects but could be blindsided by the *just as* important social aspects of an interview.
P: Can someone help, I want to understand my boyfriend when he talks about programming.
C: Just want to say it's nice to see you trying to be supportive. Edit 5/7/20: wow that is a lot of upvotes, thanks!
C: More of a relationship advice but you could ask your boyfriend to explain these things to you, you would learn a lot and he would be excited that you're interested in the things that excite and interest him. I would be extremely happy if my partner would be genuinely interested in my hobbies and asked me to explain things.
C: Thank you!
C: I do ask! But he's not very good at explaining and I feel bad for asking nonstop, u actually want to follow up and ask with more advanced questions.
C: super sweet of you, but my opinion sometimes (if you have no real interest in learning it other than for him) it’s better to just listen cause that’s probably all he wants is for someone to listen and to be interested in what he’s saying even if you may not understand the listening is more important than the understanding of it. i’m comparing this to listening to my GF talk about her make up i don’t understand and she’ll stop and say you probably lost and confused about this term or what this product does but she’ll continue like nothing with a big smile on her face because what she really loves is that i’m listening to her interests and asking questions every now and then about stuff i didn’t get.
C: You asking him to explain can be a form of study/learning for him too though. You can both benefit from the questions and answers. To be able to teach any material you need a deeper understanding than it takes to just make use of the knowledge.
C: Him learning to explain complex topics simply would be very valuable careerwise. So the fact that you actually are very interested is good and just asking him to explain more in depth is probably the best way. Alternatively just look up some simple ~10min YouTube videos that gives a decent introduction without being in depth of how it does it i.e. "what is <subject>"
C: I do have an interest in it haha, my dad is a programmer, but all he ever taught me was hardware info, no software, nothing.
C: [deleted]
P: 2 years ago I started learning JavaScript so I could automate my Google Sheets docs. 15 months ago I left my sales job and started an internship in front end development, today, I promoted from Junior Frontend Engineer to Frontend Engineer!
C: Me: Works 4 years and has multiple certificates Also me: Still a junior dev
C: I am working as web developer (wordpress) for 2 years and I've just promoted myself from total idiot to partial idiot after I learned to add event listeners without jquery. Also I found out yesterday that self closing elements can't have pseudo classes. So, congrats. You made for this.
C: Oh, and more details on how I started here: https://www.reddit.com/r/learnjavascript/comments/cd5jud/9_months_ago_i_started_learning_front_end/
C: What is your degree?
C: It certainly does help that I worked in sales for 10 years first, there are a ton of soft skills that carry over. It's hard to compare yourself to others. Junior also means very different things in different companies. Don't be too hard on yourself :)
C: This is not going to sound comforting but unless you're a consultant or your company requires them, the certs aren't much good. If you're still a junior dev after 4 years then you probably need to start looking at a different company. If you want to stay then it's time to put on your adult pants and have a conversation with your manager. Unless they're absolute garbage, they'll be able to help you develop a plan to migrate from jr to mid within 6 months. I also want to point out that junior, senior, mid level...are really just titles and a senior at one company can barely be mid level at another one. If possible try focusing on the strength of your contributions and the type of projects you work on. The technologies you work with and how well you can explain your contributions and interview will help you get a new job just as much as a certain title.
C: Sounds like you're ready for a new job, buddy.
C: I fucking love the upgrade from “Total idiot to partial idiot” thanks for the chuckle!
C: Degrees of life baby. Lol But seriously, I'm from australia where education is super expensive and there are lots of jobs available, so I got a sales job instead of going to uni.
C: Worked in sales for 10 years before moving into tech. I now live in Berlin. There are lots of start ups here and they are open to giving you a chance if you prove technical skills with portfolios and technical challenges.
P: Somebody has going to be the a**hole that tells you the truth:
C: Thanks for posting this. As I told my students recently, “yes, there are people out there who can easily self train themselves into a six figure programming job. They already did. If you didn’t already do this, you’re not one of them, and that’s fine, they’re extremely rare. Now let’s start learning.”
C: [deleted]
C: Yeah I totally see your point. I'm on the side you are describing. I know how to do some coding, I know some java and am learning some Delphi (through job training) Luckily for me, here in Germany, there is a thing called "Ausbildung" which would translate to job training. So over the course of 3 years (or 2 if you are good and get to shorten the training) you learn the craft of your given occupation at a company and only then do you get the title of for example "IT specialist - software development". You get a small salary and you go to a special school. The issue might be that this form of job training doesn't exist in enough places in the world. I'm sure the problem you are describing would diminish greatly if this pathway existed. As job training is basically a professional boot camp regulated by the government.
C: This, absolutely, cannot be impressed upon prospective programming students enough. 2 years ago, looking for a change in career, I was pulled in by the promises of an online coding school and I was given the definite impression that once I had finished a course or two I would be in a prime position to start a career in software development. I spent 6 months or so working through the course materials and It's fair to say that I picked it up pretty quickly and learned a lot about the basic structure and syntax of the language (Python) and potential uses for the language. At this point I started contacting local companies; not to apply for work but to get an idea what they, as employers, would expect me to be able to accomplish on my own if I were to work for them and honestly I was shocked at how much I didn't know. Learning a programming language to an intermediate level is only the tip of the iceberg when it comes to being an employable member of a development team. There is an ocean of supporting technologies that as an online student I had never even considered and that the providers I had studied with had barely touched on if at all. Most people I contacted were supportive and quite frank with what I needed to brush up on if I wanted to enter the industry. Learn Linux, Git, basic Networking, AWS, Kubernetes, database types... and the list goes on. I decided that I would need to get my foot in the door of a company and try to work my way into a developer position so long story short, I managed to secure myself an admin role with a local tech startup. I made it clear from my interview that I didn't want to stick in admin forever but was willing to put in the work with the hopes that eventually I could start on a trainee developer position. Once I'd got comfortable in the business I started talking to the devs about opportunities to do small projects for them; homework if you like. So that I could get some real-world experience, putting my coding skills into practice and importantly, showing them that I was willing to put in the effort and that the time they invested in me would return them some value. It's been a great experience and I would say that after two years, from when I first started learning code to now, I feel that I am in a position where I could confidently apply for a junior developer role. It's been hard work though. Working 8 hour days, Monday to Friday, then going home and working on coding projects in the evening. I'd say that in total, with my day job plus projects in the evening I'm doing about 60-70 hours a week in front of a computer (and I still suck at typing). This is something that online schools just don't talk about, in my experience. They give the impression that you pay the fee, watch the videos and come out the other end, a fully-fledged, rockstar coder. I'd encourage anyone to walk this path but its not the easy one that many make it out to be.
C: Yes, I agree. I think that's a spot-on advice and ultimately what I wanted to convey: yes, you want to help them to get there, but let's be realistic and don't underestimate what it takes.
C: That’s one thing people are forgetting. Most of these people transferring to a developer job probably already have their Msc in something else, and are already quite smart
C: I think the original idea was good. Take already-skilled programmers and teach them web dev basics quickly. And people like that probably can learn the most important stuff in 3 months and learn on the job for the rest. The problem is, 3 months is not realistic for someone with no experience. I had lots of prior experience, did a 6 month bootcamp along with lots of self study and it took me a couple months to land a job. And most of the people in my bootcamp are still looking a year later.
C: > you might just ruin the Iowa cacus. Loool. First time I wish I had coins for awards.
C: I fell victim to this logic after hearing from everyone how important it is to code in today's workplace. As a 32 year old with kids and a currently useless business degree it sounded enticing. I grabbed a few books from my local library and went at it. I like to consider myself a fast and thorough learner, I excell in school and have a knack for studying and retaining information. I quickly realized that this would be a long and possibly financially fruitless endeavor as I will likely never become a professional. That said, I enjoyed learning the basics of python and think I will continue to learn simply as a hobby.
C: That's something to keep in mind when people or companies talk about self-taught/no degree. Majority of my coworkers falling into this category either dropped out of CS to start working, or they already have a STEM degree. Most commonly EE or math. Hell, majority of the threads here or on medium spouting the "self taught in X months and got a job" ends up with OP having a STEM degree. Now, plenty of people have succeeded without this obviously. But the competition can be quite fierce and they are like the cream of the crop of self-taught.
P: How to Program: My new YouTube Channel pulling from 7+ years of experience working at Amazon and Facebook to teach people programming.
C: [deleted]
C: Subscribed. Please deliver
C: Cool. What programming language do you plan on using in your videos?
C: > I have met people ... for whom self-balancing search trees are trivial I feel like I have gotten very good at implementing various (relatively) advanced data structures and algos, but I always screw up AVL trees (and similar). I don't know why, but I always have to spend much longer debugging these than other things. I remember my original data structures and algos class in college and I did well on everything except the AVL tree project. Anyway, you just reminded me of my arch-enemy in programming, so I had to rant :P
C: i wanna know this, it's a make or break for me to sub or not.
C: I plan on covering a higher level language but the first ten lessons or so will be computer Science basics because in my opinion, without those well understood, people get confused and give up when more complicated concepts are introduced. I will cover JavaScript to start, then likely switch to java for a bit. My goal is to eventually have a series in java, JavaScript and the whole front-end stack (html, css), sql (either mysql or postgres) and from there do maybe android and iOS too.
C: So long as it's a reasonably popular language, it shouldn't matter. You don't teach someone how to program by taking them through language syntax, you teach them by helping them understand common constructs (loops, Boolean logic, objects) and then how to break problems down into basic elements that can be handled easily with those constructs. Learning a language is just finding out how that language 'does' the things you need it to do.
C: What are AVL trees? More so, what does AVL mean? I have implemented a BST with linked lists, just never heard the AVL term.
C: Here's a thing I think you should cover quickly because as a beginner I still don't know how to get around and would find it incredibly useful - how to actually get a deployable .exe application that actually runs outside of the IDE. I know how to make a window and buttons, how to execute business logic, save to files, yadda yadda, but it all needs to run through my copy of Eclipse every time. I'd love to be able to make something I could take to a freshly installed copy of Windows / Linux / iOS, have a leftclickable shortcut to it on the desktop and it would run with no other setup or tool required. This alone would put your tutorial head and shoulders above the 18425th iteration of an East Indian guy explaining what a String is and how to use for and while loops who keeps on fixing his code while recording and apologizing for fixing his code more than explaining it.
C: [removed]
P: My boss asked me why I still use google and what he's paying me for. Here's what I did.
C: I couldn't do my job without the internet. There are way too many things to remember them all. Knowing what it is you need to search for is the hardest part though.
C: I just pull up google, stand up, motion to my empty chair, and say "There ya go bossman". Tony doesn't like it when I call him bossman. Good guy though.
C: I had a client ask me something similar once, and I said "Wouldn't you want bridge builders to use calculators?" to which he ate a nice slice of humble pie.
C: Wow that's crazy, there's just so much to technology these days no one is expected to remember everything. With that said, he's not paying to read a guide, he's paying you to understand and also trouble shoot if the guide doesn't work. Someone blindly following a guide could end up reading that "rm -rf /" will fix all your problems and actually do it! :D
C: Sometimes, all that you need to do is know that a tool or concept exists. Don't exhaust yourself trying to remember the ins-&-outs of one thing, when you can do a quick search to fill in the blanks, and use that extra mental storage capacity that you've saved to remember more technologies and principles.
C: which is the beauty of specific error codes i love it when i get a clear error code i can copy paste into google to tell me wtf is wrong rather than having to google "this problem with this program on this os" lol
C: That was my immediate thought. If the guy implies that it's too easy of a job to program if you can Google for information, let him try doing that job, see how far he goes. My forecast is: not very
C: What i really hate is when i have a very specific error and there is only one hit on the internet with that error, but the question has no responses!
C: Post edited 6 months ago: "nvm i fixd it"
C: Who were you DenverCoder9? What did you see?
P: Programming pro tip: learn to read code. You’ll be doing a lot more reading than writing most of the time.
C: > You’ll be doing a lot more reading than writing most of the time. You are correct. Unfortunately when candidates interviewed for jobs, most of the time they are asked to write code, not reading/debugging code. At least that's what I experienced in my career. That's why when I was hiring people, I asked them to read a design doc, then read a source code and asked them to talk about it.
C: For every line of code you write, you're going to be reading 5 more. And then reading them 5 more times, and then rewriting it for more efficiency then repeating that process until forever.
C: And then when you learn to read code, learn to recognize the code that is read easily from the code that isn't. If you can recognize code that is hard to read, you'll recognize when you're writing it. This is very important because in 6 weeks, you'll be trying to read it to figure out what the fuck it does.
C: Errors and stack traces as well. They're trying to help you figure out what went wrong. Don't ignore them.
C: > That's why when I was hiring people, I asked them to read a design doc, then read a source code and asked them to talk about it. Hey can you go into more detail about this? Thank you in advance!
C: It's not forever, it's just until you either cash out on some big stock options or die.
C: It could be like a debugging session, where the candidate needs to understand a short excerpt of a spec, then find bug(s) in the code that causes the software does not behave per spec. Or it could be as simple as asking them to find where a certain section of spec/design implemented in the source code. I'm in embedded sw development, so a lot in the spec involves HW registers etc. A good candidate is usually comfortable in reading a design doc, and browse through the source code and directory structure. Often in my field, there's no official training other than learning by comparing design doc and implementation. If you are unlucky, the document is scarce and/or the code is poorly commented. I usually give them access to all the tools they need including the compiler, editors of their choice and they are allowed to Google stuff. Basically they would do the things they would do in their first weeks of the job.
C: most likely die
C: I hope you advertise this. Any dev I know would love to work for such a company.
C: Unfortunately, it's not a company thing. Each hiring manager, even interviewers have different standard. It's pretty tricky to balance between giving the team members latitude to gauge their future peers while keeping the interview questions relevant. Interviewing candidate is a tricky business, we want to set the filter just right so that we don't get false positive or false negative. Big companies like Google, FB, Microsoft etc. have luxury to set the high bar to avoid false positive. There will be a lot of false negative, but they can afford it because they get hundreds if not thousands of resumes everyday.
P: Github Repo with 100+ Free resources to learn Full Stack Web Development. Thank you r/learnprogramming!
C: Looks like a lot of really great resources, but it kinda bugs me that it says "Full Stack Web Development" when this doesn't include any resources for ( or even any mention of ) Back-end Languages, Databases, Server Administration, etc. The "Full Stack" in "Full Stack Developer" generally means *everything* that makes up the full web stack, not just the front end. Perhaps it should be renamed to "100+ Free resources for learning **Front End** Web Development." For someone getting started, this seems misleading to exclude at least some mention that all of these resources only focus on the front end. Edit: since posting this comment, looks like some node resources were added. It's a start.
C: > 18 months ago I dove head first into Full Stack Web Development. And what are your results in that timeframe?
C: I'm not OP, but I can provide my own experience. I went from knowing nothing about programming, to having built two full web apps (Twitter clone and Instagram clone), and my first client as a freelancer in about 11 months. I would say I put in about 20 hours a week (sometimes less and sometimes more of course), and by the end I was at the point where I was pretty confident in my skills (this fades over time, you go from knowing nothing, to knowing everything, to knowing nothing again. This is just the natural progression. Obviously you continuously know more stuff, it's just the scope of what you can know, and what you want to know grows too.). The key is to do *something* EVERY day. Try to do at least an hour every day, but even all you can do is 20 minutes, do that, make it a habit. This is not the kind of skill you can cram in your head by doing 10 hours once a week. Also, copy EVERYTHING you read (code-wise at least). Copy every code sample, and do every practice problem. The saying "you can read every book about swimming, understand every word, but you'll probably drown first time you jump in pool". Programming is the same thing. You get good by actually doing it, the reading/tutorials/articles/etc. just introduce new ideas and steps of what to practice and try. The key skills of a programmer is as much about knowing how to know something, as it is about knowing something. By that I mean, I don't know everything there is to know about the languages and frameworks I use, I know a fair amount, but I know how to find the information and tools I need, very quickly. In web development, you'll often be doing something that's totally new to you, so you'll need to have the confidence to break it down, find information online, determine if it's quality or not, use parts of it that are good, discard parts that are outdated, fill in the gaps, etc. The other key things is to pick one thing and stick to it. ONE type of programming (games, web, embedded, etc.) ONE language. ONE framework. ONE text editor. Until I got to the point where I was confident at solving problems with code in one language, EVERY single second I spent trying to learn another language was sort of wasted. You *will* be tempted to try Vim/Sublime/an IDE, or learning some C/Assembly/etc. (assuming that they weren't your initial choice of what to learn), but don't give in to temptation, yet, there will be plenty of time later on. That's not to say you shouldn't know some basic concepts in C just because you're learning Python, for example. It can help, but don't spend much time on it, read an article or two, or a StackOverflow thread, but don't go diving into a tutorial/book about it. You'd be better off getting comfortable in one thing first, it'll give you a better context to put things in. Really what I mean is, don't try to learn half of Ruby/Rails, then half of Python/Django, then half of C++/Gaming, etc. Learn one from front to back (you'll realize you can never really know it front to back totally, at least not in a year or two). One good way to do this is to pick a big end goal, like "I want to build a website that does X, Y and Z", "I want to build a clone of Facebook", "I want to create a game like Zelda", etc. And keep going until you accomplish that, but make sure you are not just accomplishing that goal, but understanding *how* it works. I can teach you how to make a Facebook clone in less than an hour. Google "facebook clone github", find one on Github, figure out the language/framework used, get it running locally, done. But that totally does *not* count. That's cheating. You want to make sure that *every* line of code was written by you (even if some might have been copied from StackOverflow or GitHub, that's ok, but NEVER NEVER NEVER copy/paste while you're learning, TYPE IT, type it all). And make sure that you understand everything you wrote, you can copy, but make sure you type it, and make sure you know what it does, why it fixes your problem. Do you need to copy all of it, or just part of it. Do their variable names make sense in your code, or should you change them? Again, don't fall into the trap of being the StackOverflow/GitHub copy/paste programmer, who doesn't know *why* it all works, they just know that somewhere in the 10-15 chunks of code they copied, it did the thing they wanted it to, but had they taken the time to actually *learn* it, they could have done it in a few lines of beautiful and easy to maintain code. And above all, don't beat yourself up, or get hung up if you don't understand something. Read it again, look at other resources explaining it, sleep on it, move on, go back to it, move on again. Eventually things will fall into place, but not always in the order you are introduced to them. To begin with, there's going to be a lot of times when you're doing something or typing something, that you have no idea what it's doing. I said to type everything, and know what you're typing, but sometimes you won't know at the point where you type it, just make sure that the parts you didn't understand when you copied them, you go back to, and I bet by the time you go back a day or week or month later, you'll know it, but make sure you *do* go back, because if you don't understand it yet, hop on Google and try again. Programming can't be learned totally linearly. Some things need to exist, but be unknown, to create the environment to learn about something else. But don't worry, things will fall into place, it takes time. It takes everyone time to learn, it's a huge amount of stuff to learn, but it's really not all that complex, it's just a ton of things. I always get annoyed when people don't want to learn programming because "I'm not a genius or good at math". There's no single concept anywhere near as complicated as something you learned in HS algebra class. Programming is like learning to build/fix a car engine, no single part is too complex for every human to understand, there's just lot of parts, and they all fit together in lots of different ways (except programming is like a car but with orders of magnitude more parts/connections/concepts. You'll one day give up on the idea of knowing everything, because it's just not possible. You can't even know what was done before you, and things are growing ahead of you faster than you can learn them too, but don't worry, just focus on a goal, and keep doing a bit everyday). TL;DR If you know nothing about programming, and you dedicate 15-20 hours a week(make sure you do some every day), you should be pretty comfortable in one language/framework in 10-12 months or less. That's not to say you'd be a senior developer in that language, more like struggling to be a junior dev, but you'd be able to take any idea you can think of, and break it down into solvable units that you'd know how to solve, and that's really all programming is. EDIT: sorry for my horrific grammar. English is my first language, I just usually type something completely different than what my brain is thinking.
C: Dude, great post and great recommendations! Thanks ClemDev
C: > Programming can't be learned totally linearly. Some things need to exist, but be unknown, to create the environment to learn about something else. But don't worry, things will fall into place, it takes time. It takes everyone time to learn, it's a huge amount of stuff to learn, but it's really not all that complex, it's just a ton of things. I want to print this out and hang it above my monitor. Thanks for putting things in perspective.
C: >even if some might have been copied from StackOverflow or GitHub, that's ok, but NEVER NEVER NEVER copy/paste while you're learning, TYPE IT, type it all Man oh man. I teach a couple of programming boot camps to teens over the summers and I start every session with a discussion about this. The online tool we use gives a lot of code and it's tempting to copy/paste but it is so important to type it yourself. Type it in line by line, analyze it, understand it. Make sure you know why that line exists, figure out what it does. Predict what would go wrong if it weren't there. SO. IMPORTANT.
C: That got me so motivated... thank you! On the other hand... learning one language is hard, while your in the IT high school. School wants me to learn PHP(+SQL), JS, C++ and Java at the same time. This is insane, we're not learning programming, we're learning languages.
C: LOL Back in 1983 my friends father sat me down at a PC and handed me IIRC PC Magazine. There was a feature in there about learning to program. I would diligently type line by line, compile...and nothing. You'd have to wait for next months issue for all the typos and corrections from the previous month. It turned me off of programming, though years later I worked with a lot of programmers at a tech company. I went another route and decided, everything breaks..so I'll learn how to fix it. I don't have the patience for programming so kudo's to all of you.
C: That isn't necessarily bad. Each one has its own thing. You will learn object oriented which is pivotal. Then you learn your web from PHP. and sql. And it's school so they are meant to get you interested in things. And learn GIT, it is extremely important
C: >I would diligently type line by line, compile...and nothing Relive your childhood BASIC frustrations http://www.vintage-basic.net/games.html
P: [Free] Google is giving free courses.
C: Another one to add to the bookmark collection of courses I'll never get around to doing. Thanks
C: [deleted]
C: Won't you spend a lot of time gathering info about how good each are and which combination of these are the perfect way of becoming a developer before not doing them?
C: I know that feels too well
C: Me: *Hey, this looks cool. Better bookmark it.* After reading your comment: *... crap.*
C: Omg I have a ton of programming pdf books, and courses I know I'll never get to smh. My chrome bookmark is enormous. One day I'll have to sort them out. Not today though! LOL!!!
C: Hard cold truth #237
C: And by the time we decide, freebies offers would have expired.
C: Ok I'll Just post it, Here are a few: they are all over the place Just like my list. Also, after looking at my list, I mostly have Docs and videos not pdfs, lol. However text is still text. Most of them are focused on the web sorry if you are not interested in that. **Books:** Nodejs: [https://github.com/PacktPublishing/Node.js\_Design\_Patterns\_Second\_Edition\_Code](https://github.com/PacktPublishing/Node.js_Design_Patterns_Second_Edition_Code) Regular Expressions: [https://www.princeton.edu/\~mlovett/reference/Regular-Expressions.pdf](https://www.princeton.edu/~mlovett/reference/Regular-Expressions.pdf) C++: [Malik C++ 5th Edition](http://index-of.co.uk/Programming/C++%20Programming%20From%20Problem%20Analysis%20to%20Program%20Design%20-%20D.%20S.%20Malik%20-%202011.pdf) Java: [https://link.springer.com/content/pdf/10.1007%2F978-3-319-89491-1.pdf](https://link.springer.com/content/pdf/10.1007%2F978-3-319-89491-1.pdf) OOP Design and Implementation : [https://link.springer.com/content/pdf/10.1007%2F978-3-319-24280-4.pdf](https://link.springer.com/content/pdf/10.1007%2F978-3-319-24280-4.pdf) Linear Algebra (Yes you need that math): [https://link.springer.com/content/pdf/10.1007%2F978-3-319-11080-6.pdf](https://link.springer.com/content/pdf/10.1007%2F978-3-319-11080-6.pdf) Discrete Math: [https://link.springer.com/content/pdf/10.1007%2Fb97469.pdf](https://link.springer.com/content/pdf/10.1007%2Fb97469.pdf) Algorithms & DS: [https://link.springer.com/content/pdf/10.1007%2F978-1-84800-070-4.pdf](https://link.springer.com/content/pdf/10.1007%2F978-1-84800-070-4.pdf) Git and Github: [Pro Git](https://git-scm.com/book/en/v2) JavaScript: [Algorithms in JavaScript](https://github.com/trekhleb/javascript-algorithms) [https://github.com/getify/You-Dont-Know-JS](https://github.com/getify/You-Dont-Know-JS) [https://javascript.info/](https://javascript.info/) [https://exploringjs.com/es6/index.html](https://exploringjs.com/es6/index.html) Security & Linux for Beginners: [Linux-Basics-for-Hackers](https://github.com/OpenCyberTranslationProject/Linux-Basics-for-Hackers/blob/master/Linux%20Basics%20for%20Hackers%20Getting%20Started%20with%20Networking%2C%20Scripting%2C%20and%20Security%20in%20Kali.pdf) Structure and Interpretation of Computer Programs from MIT: [https://web.mit.edu/alexmv/6.037/sicp.pdf](https://web.mit.edu/alexmv/6.037/sicp.pdf) Have a feast (If you haven't seen this before): [https://docs.google.com/spreadsheets/d/1HzdumNltTj2SHmCv3SRdoub8SvpIEn75fa4Q23x0keU/htmlview#gid=793911758](https://docs.google.com/spreadsheets/d/1HzdumNltTj2SHmCv3SRdoub8SvpIEn75fa4Q23x0keU/htmlview#gid=793911758) **Videos:** Algorithms & DS: [Youtube videos (Sub this guy, he is amazing)](https://www.youtube.com/user/purpongie) His most viewed playlists: [Data Structures](https://www.youtube.com/playlist?list=PLDV1Zeh2NRsB6SWUrDFW2RmDotAfPbeHu); [Algorithms(Graph Theory)](https://www.youtube.com/watch?v=eQA-m22wjTQ&list=PLDV1Zeh2NRsDGO4--qE8yH72HFL1Km93P); MIT classes on Algos & DS (really cool stuff): [https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf](https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf) [https://www.youtube.com/playlist?list=PLUl4u3cNGP61Oq3tWYp6V\_F-5jb5L2iHb](https://www.youtube.com/playlist?list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb) A TON of Math (from MIT): [https://www.youtube.com/watch?v=wIq4CssPoO0&list=PLUl4u3cNGP60UlabZBeeqOuoLuj\_KNphQ](https://www.youtube.com/watch?v=wIq4CssPoO0&list=PLUl4u3cNGP60UlabZBeeqOuoLuj_KNphQ) &#x200B; The rest are just articles and docs on web dev & design (you guys probably don't want that). I'll leave this though: [https://devdocs.io/](https://devdocs.io/) [And this half free Web dev course](https://open.appacademy.io/)
P: In December 2019, I got fired from my civil engineering job. In July 2020, I started learning programming. In February 2021 I got offered a job as a Junior iOS Developer! I start tomorrow!
C: To all those who are asking how he learned! and those who cant wait till morning. I've seen this guy a few months back. He studied the free Harvard's CS50 intro computer science first Then continued his path on IOS programming by learning Swift. Your welcome.
C: How did you learn? What projects did you do?
C: Congrats man!! Do you mind sharing the different resources you went through and your programming journey? If not, no mind. Congrats again and proud of you!
C: Posted and ghosted us =( EDIT: Nevermind he is here! Sorry
C: This is more or less what my programming path looked like: **July 2020:** I was on LinkedIn looking for civil engineerings jobs, when I came across a post about a company in my area that was looking for front end developers. I was curious as to what that was, so i clicked on it and saw that they needed someone who knew HTML, CSS and Javascript. I thought it looked interested so I came to reddit to look for resources to learn programming. Here, I saw that the community was basically talking about three main web development courses: [The Odin Project](https://www.theodinproject.com), [The Essential Web Development course on Upskill](https://upskillcourses.com/courses), and [FreeCodeCamp](https://www.freecodecamp.org/). Like every beginner I wanted to try all of them at the same time, so I spent a couple of weeks trying them out to see which one I liked better. **August 2020:** After finishing the HTML and CSS section in FreeCodeCamp and The Odin Project. I learned about [Harvard's CS50](https://courses.edx.org/courses/course-v1:HarvardX+CS50+X/course/) course and decided to give it a shot since people were highly recommending it. This was also when I lost motivation to continue with The Odin Project because I was getting stuck in the Sketch & Etch project. (Had I continued the web developer path, I would have gone back to that project as I later learned that getting stuck is part of being a programmer). I felt like I was doing way too many courses, and I wanted to avoid being stuck in tutorial hell, so I decided to also drop FreeCodeCamp and focus on Harvard's CS50 and Upskill's Web Development course. **September 2020:** I'd say that during September, I had three different projects going on for me: I was doing the Upskill course and learning how to build websites using Ruby on Rails, I was learning C through Harvard's CS50, and I was creating an imaginary website using what I had learned with HTML and CSS. I was still interested in going the Web Developer course. **October 2020:** At the beginning of October, a friend put me in touch with a friend of his that had an app development company. The guy was very nice and seemed interested in hiring me, but he said that he was looking for someone who knew Swift, and told me that if I managed to learned Swift, he would for sure hire me. Luckily, I wasn't dead set in following the web development path. I'd say I was still finding my way into programming. So after this person told me that I'd had a job opportunity if I learned Swift, I dove right into iOS Development. I stopped doing the Upskill course, but I was finding the Harvard course so helpful that I decided to finish it since I saw that for the final project, there was an option to do an iOS app. This is where I learned about [Hacking with Swift](https://www.hackingwithswift.com/) and [Angela Yu's iOS Bootcamp](https://www.udemy.com/course/ios-13-app-development-bootcamp/). I did the first 15 days of Hacking with Swift 100 days course, which basically taught me the basics of the Swift language, and then I bought Angela Yu's course. **November 2020:** My time was divided between doing Harvard course and Angela's course on Udemy. **December 2020:** My goal was to finish both courses by the end of the year, and I'm happy to say that I accomplished just that. After having gotten a good grasp of the Swift language, I contacted the guy who told me I should learn Swift and he told me that in January he would send me a sort of challenge project so I could see what I had learned during those last couple of months. **January 2020:** I spent the majority of January working on the Test Project that this person gave me, while also continuing with the Hacking with Swift course.
C: I second this!! :)
C: The secret to programming is TIME. There's no shortcut. If you invest TIME, you will learn and get better. But sitting down every day and spending 1 or 2 hours learning for months, takes enormous discipline. It doesn't matter which of the 10 million instructional pages or courses or YouTube videos you do. Just pick something, stick with it, and throw a lot of TIME into it.
C: U are a complete beginner and I wonder how do you learn Ruby, C and HTML,CSS at the same time? Not to mention that you moved on to Swift in the following month. That's just sound too much things to learn in such a short span of time
C: Not OP, however it sounds like he didn't have any employment during the ~6mo of learning, and if he put in 60hrs a week (a lot, but very achievable with no other commitments) then that's around ~1500 hours of learning. That is a lot, about half of my university degree in six months (~1000hrs/yr of learning, for three years). If your focus is only on developing skills directory related to employment, then that is well within reach and you will be able to learn a lot in that amount of time.
C: Not to forget that he had been working in another job for some years probably which may have given him some background to grasp things a bit easier. In the end, the more concrete your goals are, the easier you can prepare for them or work towards them. But just guessing 🤷‍♂️
P: A while back, I shared the idea of an Urban Dictionary for coding terms. You liked it, so I built it.
C: As a beginner programmer, this helps so much with connecting the dots between concepts. Job well done!
C: This will need a Random button at some point. Not really enough definitions to warrant it yet, but hopefully it'll get there.
C: Added the obligatory recursion -> recursion for you
C: Cool concept. Just watch out so that it doesn't go Urban Dictionary's own way and people start inserting their individual random made-up terminology.
C: If you want some content for it you could always port the [jargon file](http://catb.org/jargon/html/) into it.
C: Good job Reddit, we hugged it to death.
C: Thank you so much! I struggled (and still often struggle) with this, and that was exactly the inspiration for the app.
C: /u/Vandechoz - excellent idea - this is now a live feature, thanks to you! ~~Great idea!~~
C: That was one of my true moments of joy with google as I often misspell things. so it suggests "did you mean Recursion" And of course i clicked on it. page reloads... Did you mean Recursion? Why yes I did. Click. I honestly clicked about 3-4 times before I asked myself how google can misspell things and took a closer look.
C: I think Reddit accidentally DDoS'd your site because too many people are trying to view it at once, and now I don't understand what I just wrote since I have no way to look up what DDoS means
P: The Udemy "Automate the Boring Stuff with Python" online course is free for the next 9 days.
C: I finished this a couple of weeks ago and I honestly think it’s great. I started using the stuff I learned straight away because the examples you work through are genuinely useful and can be used for all sorts of different things. (I promise this isn’t Al using another account)
C: Just signed up. I love that there are real-world examples in the course to help you learn pragmatic ways of using the language. Too often do I see online courses basically teach you the basics of a language, then leave you to figure out how/when to utilize what you've been taught. But courses that have you learn through *doing* will always be my go-to. Looking forward to taking this!
C: Al, are you serious? for a single mom of 3. thank you thank you thank you! i have been eying this for months!!!! And exactly what I will need.
C: me: Ooh, sounds good, I should go sign up for when I do have time! also me as I finish logging in: `You purchased this course on Dec. 3, 2019`
C: You're the man, Al!
C: You, sir, are a rare breed. Thank you so much, and I will ensure that your generosity is put to good use. All the best!
C: Thank you!
C: > (I promise this isn’t Al using another account) That's *exactly* the sort of thing Al would say.
C: Hey Al. Thanks again for making this as accessible as possible. What's the status of the upgrade of this course to the ATBS 2e material? I know you said it will take some time. Just curious how far along you are. Edit: Nevermind. Apparently, I can't read. Thanks for the update.
P: Learn the syntax of any programming language really fast, like in minutes
C: That is actually very useful , thank you.
C: Wow! This website is a golden nugget. Like water in the middle of the desert. Like sunshine after a rainy day. Like weekend after a long week. Thanks.
C: I have been meaning to learn CHICKEN. Very helpful. Lol /s
C: Do many people use derek banas? Easiest way for me to learn a new language imo, short and to the point, and he tries to not skip over anything
C: Thank you for sharing this!
C: This website can fuck my wife
C: Like toilet when you urgently need to pee.
C: I find CHICKEN's online docs to be pretty decent. If you're just learning Scheme in general, I would recommend Guile. I find their first hand docs to be so much more useful than most other schemes.
C: #thankyoubasedlearnXinYminutes
C: Theoretically impossible.
P: A list of 100 Projects to build
C: > [Build an OS](https://github.com/aceking007/100ProjectsOfCode#build-an-os) Fuck me, right?
C: Very cool. I appreciate the link.
C: Say i made a big project, how do I prove to employers that I made myself? Like I could've just copied the code from somewhere. I never understood how self-made projects could be something to put in your CV.
C: [deleted]
C: It’s easy bruh smh git clone https://github.com/torvalds/linux
C: Prerequisite: Have divine intellect.
C: They can question you regarding the projects! I don't know about smaller companies but the relatively larger MNC's generally have a very competent recruiting team and they can almost always call on your bs if you try tricking them.
C: You can't fake knowing how to code for more than 2 minutes lol
C: oh you gottem good. oof
C: And a year of unemployment
P: Your fear of looking stupid is keeping you stupid
C: My fear of being shit on and beaten up for asking intermediate questions of beginner level experts is what kept me stupid for a long time.
C: I started a new job recently. Everyone working remotely. I spent 4 hours trying to fix something before finally asking for help (because I thought it was something I should know). Turns out our senior dev of almost 20 years didn’t know either. Need to swallow your pride more and just ask for help / to be pointed in the right direction with certain tasks.
C: "Interrupt other coders who seem too preoccupied"... No. Don't do this, at least not in this way. Politely send a slack or DM if they look busy, otherwise just wait until they aren't deep in thought. You don't want to make enemies
C: Please don’t interrupt coders who are busy. “The Zone” is very real and you are just going to annoy people. Send them a message asking when they’re free and then go talk to them.
C: Could this this be unique to United States? I was unafraid to ask questions until I came here, but it could be due to my language barrier at the times. But I have noticed that even American borns are afraid to ask questions in fear of looking stupid. I had to get it off my chest and ask.
C: But also, **please do this** if you're really blocked. When someone interrupts me, and I'm really occupied, I'll politely let them know that I'll get back to you. Most senior engineers aren't so socially inept and petty that they'll snap at you for interrupting them. The real issue in this industry isn't juniors who are overly dependent on others and require constant hand-holding. Just the opposite, almost every new grad I mentor these days are too afraid to actually ask for help for fear of sounding incompetent or they just don't want to "upset the gray-beards". It's so much easier for me to set a person straight if they're overly reliant on me for help for even the most trivial things (usually a 1-1 does the job), but managing someone who doesn't let up when they're stuck is much more high maintenance for me. I think many senior engineers here would also agree with this sentiment, have common sense when reaching out for help (and it's our job to set those expectations), but if you're on the edge between asking and not asking, know that our lives are easier if you ask more often than you don't.
C: Also, make sure the answer isn't just the first result on google/stack overflow, or if the answer there still doesn't make sense include a link to that answer. If gives the person helping you a starting point and context to what you're asking and shows that you at least tried something on your own first.
C: It also helps to think to yourself "What do I think they will say?". This has caused me less embarrassment by making me search real hard for the answer myself before asking someone else.
C: My wife does this sometimes and it kills me. I’ll be literally in the flow zone, ideas linking together with little to no effort, having an amazing time. And she’ll come down to my office and start asking questions about this and that... then I lose my *entire* train of thought... like, I love her to death, but that irks me.
C: I agree with this. Personnaly before asking a question I write my question with many details (from where I started to my problem, why I have this problem, what I tried and why It doesn't work) on note and usually by tiping my question I find the solution of my problem.
P: Here's a SANITIZED list of 530+ free online programming/CS courses (MOOCs) with feedback(i.e. exams/homeworks/assignments) that you can start this month (December 2016)
C: Guess this was removed for some reason?
C: Thanks for your hard work and commitment.
C: DEADPOOL, the real MVP
C: No idea. Why, is it not showing?
C: You're welcome.
C: As a heads up: you have obviously *linked to* (in your explanations - by posting the full target domain even if it is not as link) to a banned domain (linksynergy) and the reddit spam filter caught that. That's the reason why it came up as removed. Another mod has seen that post and has approved it - that's why it shows up now. Sorry for the delay and thanks for doing this!
C: Lol Well, at least we know the filter is working. You're welcome. And thanks for keeping the sub running!
C: I wish that the reddit admins/programmers could extend that filter to expand shortened URLs - to prevent such things from happening in the first place.
C: It's a long shot, but try /r/ideasfortheadmins ? But banning shortened links are still the best course since some link shorteners let you change the link it shortens up. :(
C: Done [here](https://redd.it/5gsh4g). I agree that this is a long shot, but it might help.
P: This guy is Bob Ross of game programming
C: Truly underrated. His explanation is dead simple that I love it.
C: His voice is so calm! You were not lying by calling him the Bob Ross of programming.
C: And right over there, I’m gonna add some Happy Little b-trees— there’s no mistakes here
C: This man is an absolute gem
C: I love this guy! I always had an interest in programming my own nes emulator but written guides are so terrifying for me, I never thought that I could learn so much from a random video, now I have my own 6502 implementation written in c# :))
C: This was awesome. Graphics pipeline ftw!
C: I finally gave the whole video a watch, and looked ahead at the other videos in the series. Unfortunately, he never covers the actual process of rasterisation, the framework he uses has a built-in “DrawTriangle” function that draws lines between three points with no explanation of how it works. EDIT: Anyone reading this from *~the future~* I just found the book *Tricks of the 3D Game Programming Gurus* by *André LaMothe* which contains everything you need to know to write a software rasteriser.
C: Agreed, I like his tutorials.
C: Render video_core/video_core.cpp:Init:34: initialization failed ! Core core/core.cpp:Load:110: Failed to initialize system (Error 9)! If Bob had to compile after each change to his painting he would have been an angry man.
C: Can I get a YouTube channel name? Links just open up the YouTube homepage for me :) Edit: javidx9
P: Join the battle for Net Neutrality! It will die in one month and will affect all of us!
C: Programming at work would be next to impossible without the internet in the way I use it.
C: [removed]
P: Popular software engineering YouTuber TechLead is silencing all negative reviews of his code interview platform AlgoPro
C: That guy is a prick, if his viewers don’t get that from his videos, good riddance
C: I used to watch his videos on YouTube and thought he was very funny but later on I couldn't discern if he was sarcastic or just being an absolute jerk, but apparently judging by the comments on his channel everyone "got him" except myself. So I so I drifted off his content and thought it was me only that had an issue. I prefer channels like Forrest Knight's, it's less about him and more about CS.
C: I can't take a guy seriously who rambles about software development in each video without showing any relevant code. From what I've observed, he does not have any public repositories to his name, and in my opinion, is not able to demonstrate any experience. Heck, I truly doubt that he even participated in the development of AlgoPro. Edit: On top of that, a person naming his videos "Why I am richer than you", should be avoided in general.
C: Holy shit, I fucking knew it. I knew this guy was bad but every time I went into the comment section it was all positive in his videos. He doesn’t seem like a very intelligent person, he seems like a hack.
C: > That guy is a prick I watched a couple of his videos and couldn't figure out if his arrogance was real or just put on for the videos. But either way I found it really annoying and stopped watching. Then I see a video titled, "How I spend $1 000 000 income a year, as a millionaire". and just shake my head....."Fired from Facebook for having a Youtube channel". <--- over a million views
C: >multi-millionaire From his Twitter bio. I think it says volumes when somebody feels the need to promote their self-worth in monetary terms.
C: He was being super arrogant about open source in one of his videos and he basically said oss is shit bc you don't get paid, and he would never do oss.
C: He's smart enough to know that in life, self promotion gets you farther than raw intelligence.
C: Always thought he was trolling.
C: I only watched a handful of his videos, from which all have been just disgusting.Calling OSS shit is just plain stupid in my opinion. Developer or not, we all use software which is open source on a daily basis, and I have yet to meet someone who has something bad to say about it. That is just pure BS. If he does not like OSS, for that matter he should just go ahead and use proprietary, non-free stuff then. I know that he made a video about how he was praising Mac and talking random shit about Linux. I guess he wouldn't have done that if he knew that the Darwin kernel, from which his "ultimate" operating system is based on, is OSS. And it comes from the UNIX kernel family. Edit: Just realized that LinkedIn does not moderate if your stated work experience on your profile is legit or not, so since he never came up with any proof that he actually was a tech lead in Google or Facebook, I am starting to doubt those "facts" as well. Edit 2: Typo
P: 15 sorting algorithms visualized in 5 minutes, with awesome arcade sounds
C: Bogo sort was a little anti-climax at the end
C: The original source for this is https://youtu.be/kPRA0W1kECg - credit where it’s due!
C: Heap sort is the most oddly satisfying one.
C: So what is the fastest way to sort? EDIT: Really appreciate the responses people, I've learned something today! All I ever have experience is merge and bubble. TY
C: FeelsGoodMan Clap
C: It was like the bloopers at the end of the movie
C: It has factorial time complexity. So it will take *very very* long time ...
C: I'm partial to Radix sort, I like how it looks like it's not doing anything until the very end, and then sounds quite nice.
C: There are a few variables to consider. * How large is your data set * How sorted is your data set already * What is the data set structure * How constrained are you cpu/memory resources Generally speaking quicksort is going to be your quickest and most efficient sort. But in the cases where you hit the worst case scenario it's very slow. Merge sort is a great runner up, but a bit of a resource hog. When you *really* require it, the best sorting algorithm is one that is written specifically for the datasets you're trying to sort, but it requires the overhead of creating that algorithm. Also, here's a great run down of the pros and cons of many of the top sorting algorithms [http://bigocheatsheet.com/](http://bigocheatsheet.com/)
C: Depends on your use case.
P: Springer releases 50 Programming books for free: Intro to Python, Data Science, AI, Machine Learning, Deep Learning, Computer Forensics
C: "Introduction to Programming with Fortran" 2018 - Juicy piece of technical literature I bet :) Jokes aside - **Thanks a lot for sharing**!!!
C: Thank you so much! Time to get an epub reader... 😁
C: Thanks!
C: Thanks
C: But wait there’s more! If you deselect the Computer Science discipline there are a bunch on engineering with some significant overlap into CS.
C: Nice
C: I miss Edge. What the hell is wrong with Microsoft
C: sumatra
C: Actually, I usually download technical books in PDF even though I usually read EPUB. You want to keep the formatting, unlike with novels which are better in EPUB.
C: I mean a hardware one. Amazon sucks big time because my Kindle does not support the epub format. Buying hardware from the same companies that try to sell you the content usually results in that sort of locked platform. Now that I think about it, Kindle's are also horrible with PDF, very buggy. I guess its time to get a real e-ink reader like this one: https://us.kobobooks.com/products/kobo-clara-hd I'm open to other suggestions.
P: “My wife has complained that OpenOffice will never print on Tuesdays” (2009)
C: This is exactly the sort of bug a programmer would never identify: I would just refuse to notice a time pattern because "programs don't work like that".
C: I'm surprised someone would even make the connection that it won't print only on Tuesdays. One day a week is rare enough that I don't think I would notice it was the same day every week.
C: Okay - as defects go, this is *hilarious*.
C: Right up there with the 500-mile email limit.
C: A programmer good at debugging would find this. (And this report shows some stellar debugging). I had one once that only failed in September. It was because numbers starting with a 0 were interpreted as octal and "09" wasn't a valid number. 01-08 were OK, and 10-12 were OK.
C: If you had the sort of job that required you to print documents every day, you'd notice it right quick.
C: [Link](http://www.ibiblio.org/harris/500milemail.html)
C: Shouldn't 08 for August also have been a problem? Since octal digits are from 0-7.
C: This one is such a classic. Every few months I go back and re-read it.
C: That may have been my real issue. This was years ago.
P: How JavaScript was invented
C: Seems pretty accurate
C: "I worked on the original versions of JScript at Microsoft from 1996 through 2001. **The by-design purpose of JavaScript was to make the monkey dance when you moused over it.** Scripts were often a single line. We considered ten line scripts to be pretty normal, hundred line scripts to be huge, and thousand line scripts were unheard of. The language was absolutely not designed for programming in the large, and our implementation decisions, performance targets, and so on, were based on that assumption." - https://softwareengineering.stackexchange.com/questions/221615/why-do-dynamic-languages-make-it-more-difficult-to-maintain-large-codebases/221658#221658 I'm not defending Javascript. I *fucking hate* Javascript. I believe it to be a plague upon programming everywhere. I post the above quote so that any misguided and mistaken Javascript defenders will be forced to admit what Javascript is: a language explicitly designed from the very start to make a monkey dance.
C: This was really good
C: /r/programminghumor is this way. Also, as a spaniard, I can't really wrap my head around this video (and this guy) becoming internet famous. Is "wtf" each time I see it, lol.
C: Happy cake day
C: Not to defend JavaScript, but you’re mixing languages here. JavaScript was written by Brendan Eich at Netscape. JScript was Microsoft’s answer after the fact. Looks like the poster you reference is talking in general about JavaScript and friends being designed for scripting web stuff. Which is true. But where you’ve taken it isn’t accurate, as entertaining as the idea is. https://brendaneich.com/2008/04/popularity/
C: I've seen the actual translation and it's a pretty boring story. Clear to me that the producers only brought him on for entertainment because they knew how he told the story.
C: I can't believe I've never seen that link before! Thanks for sharing! I really like this quote: > Ok, back to JavaScript popularity. We know certain Ajax libraries are popular. Is JavaScript popular? It’s hard to say. Some Ajax developers profess (and demonstrate) love for it. Yet many curse it, including me. I still think of it as a quickie love-child of C and Self. Dr. Johnson‘s words come to mind: "the part that is good is not original, and the part that is original is not good." Thanks for the correction, and the new info. Great stuff!
C: I’m pleased to see the comment taken in the spirit it was given! I’m filled with renewed hope for the internet. It’s pretty awesome to get some of the story from the horse’s mouth. When that came out hacker news got straight up frothy.
C: > When that came out hacker news got straight up frothy. Aw hell, that sounds way too good to miss... I tried a couple google searches along the lines of "hacker news eich which original not good" but didn't find anything particularly lulzy. You don't remember any of the more hilarious comments, do you?
P: Codecademy is giving away its pro subscription for students to "learn-from-home". If you are planning to learn a new language, it's a great platform and now since it's free, it's worth checking out!
C: So how do you get it exactly? I’m not an actual student so I’m guessing they verify that you’re a student somehow?
C: this is great, thanks for the heads up
C: Not a student, but I just signed up on pro 3 days ago for their Data Science courses. I've always loved their teaching style and I have a few extra hours with no commute.
C: Awesome haha, I’m currently using their free 7 day trial. I’ll definitely hop on that after
C: Thanks mate,already enrolled.
C: They don't verify the mail
C: Well, you may just use some random student email. sth like itsme@somecollege.edu and you'll get the access
C: You're welcome!
C: how long does the pro last?
C: 90 days
P: We finished our first algorithm for generating procedural buildings through code. (See comments for a video demo)
C: Still not enough balconies
C: [Beginner and Advanced coding topics YouTube channel ](https://www.youtube.com/c/dilmervalecillos)
C: Is it open source?
C: This could work great for city building games like cities skylines
C: that was neat. made me think of Rampage, have you played that game? is there anywhere i can see demolition co gameplay?
C: If the balconies don't have their own private balconies are you really even doing procedural generation right? /s
C: Lots of great content here. Thanks for sharing! Subscribed.
C: I'm interested in contributing to this project
C: In fact, forget the buildings, let's just have fractal balconies. Heck, we can even 3D print them. Think [paperclip maximizer](https://wiki.lesswrong.com/wiki/Paperclip_maximizer), but bigger. And smaller.
C: Thank you ! I try to push the best content I can create :)
P: Alan Turing, World War Two codebreaker and mathematician, will be the face of new Bank of England £50 note
C: I can’t think of a more deserving individual.
C: totally deserves it for what he’s done for the technology field
C: Shortest time to mint?
C: Way better than chemical castration!
C: If you convert the binary into decimal you get his birth date
C: I think he would be happy to know he's being treated
C: Assuming he can posthumously forgive the government for forcing him to be chemically castrated.
C: Gotta disagree. He was treated like shit in his lifetime. Platitudes don’t undo his actual life experience. I hope we all raise our children better that our grandparents did.
P: Learn python in 7hrs
C: Learn a little bit of Python in 7 hours.
C: Get in to the problem. Mac and using Atom. Traceback (most recent call last): File "/Users/.../Python/pong.py", line 46, in <module> wn.onkeypress(paddle\_a\_up, "w") AttributeError: '\_Screen' object has no attribute 'onkeypress' \[Finished in 0.728s\]
C: RemindMe! 1 day “watch this video”
C: I'm really sorry to bother anyone. I will watch this video tonight after work. But can anyone explain how python works? I'm 27 f and have a class this semester in python. When I open the program it looks like a black command screen. How do I use it?
C: Well some people learn better by doing projects verses... this is a variable this is a float ect. They like to know how things interact and why. Personally I also like to see an end product when learning instead of reading a textbook.
C: I will be messaging you in 13 hours on [**2020-01-12 20:35:06 UTC**](http://www.wolframalpha.com/input/?i=2020-01-12%2020:35:06%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/coding/comments/en3fuo/learn_python_in_7hrs/fdy0wil/?context=3) [**6 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fcoding%2Fcomments%2Fen3fuo%2Flearn_python_in_7hrs%2Ffdy0wil%2F%5D%0A%0ARemindMe%21%202020-01-12%2020%3A35%3A06%20UTC) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20en3fuo) ***** |[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)| |-|-|-|-|
C: That's not what they said. There are plenty of hands-on training programmes out there. All of these "learn x in y" are silly. You're basically scraping the surface. They sell a dream. "In 21 days you too can become a data scientist." "Become a software engineer in 10 days". "Learn python in 7 hours". If any course promises the same in a fraction of the time needed for something that takes years to do or requires a formal training, it misguides people at best and scams them at worst.
C: I think his point was that you can’t “learn Python” in 7 hours, only just a little bit of it.
C: I don't know that the author of the video is making that claim, though. This reddit post is, but I don't know what Noomeyam's connection is to freecodecamp.org
C: If this is what he meant then, I am in the wrong and I'm sorry. I read it as you cant learn python this way
P: How I cut GTA Online loading times by 70%
C: For those that didn't see the OG post for this in r/programming, this likely isn't the author either and they shouldn't be treated as such. They're just reposting something they saw earlier.
C: I had fun reading this, thank you!
C: This guy deserves an award
C: Fantastic read!
C: Take a moment to comprehend all the combined millions (?) of minutes wasted at the GTA5 load screen.
C: This reminds me of back in the day when they cracked autocad to not bother with checking the hardware copy protection device.
C: This is so cool. I'm in the middle of my CS degree and this was fun to read!!
C: Link??
C: Story time?
C: https://www.reddit.com/r/programming/comments/luq9oz/how_i_cut_gta_online_loading_times_by_70/
P: A software engineer is detained for several hours by U.S. Customs — and given a test to prove he’s an engineer
C: The officer's depravity is really highlighted with him saying, "you don't look convincing to me." Hard to imagine just walking away from someone like that.
C: Official: "You're a programmer? Write a function to balance a binary search tree." Celestine: "I am a programmer, but a JavaScript programmer. Only time I ever work with trees is via document.querySelector. Sorry, sir..."
C: Even if this was well-intentioned, which I seriously doubt, why did they consider giving a coding test to be a good idea? I seriously doubt they have anyone on staff who can read code, let alone properly evaluate the answer. Was it just sheer stupidity? Dunning-Kruger? A vicious individual looking for an excuse to justify harming someone? Maybe I'd be less annoyed by this if I could vaguely comprehend that agent's motives. :|
C: > U.S. Customs allowed him into the country after officials called Andela and First Access to corroborate his story. Which is what they should have done in the first place. Instead, they thought it would be appropriate to drill a Javascript programmer on a data structure and traversal algorithm more appropriate for C/C++/Java developers.
C: For those who refuse to sell their souls to LinkedIn: # A software engineer is detained for several hours by U.S. Customs — and given a test to prove he’s an engineer By Caroline Fairchild Celestine Omin was accustomed to tackling tough engineering problems. Just not the two that the Border Agent had put in front of his face — or at least not now, after having spent 24 hours cramped in an economy seat on Qatar Airways. It was Sunday, Feb. 26 and the 28-year-old software engineer had left his home in Lagos, Nigeria, to come to the United States for the first time. It was a work trip. For the last six months, Omin had been working for Andela, a startup that connects the top tech talent in Africa with employers in the U.S. Andela accepts less than 1% of applicants into its program and is backed by Facebook’s Mark Zuckerberg and Priscilla Chan. For this particular role, Omin was helping NYC-based fintech startup First Access create a JavaScript application for emerging markets and had secured a short-term visa. After landing, Omin waited for 20 minutes and then reached the front of the line, where a Customs and Border Protection officer asked him a series of questions. It was here that Omin realized that the job might be challenging, but getting into America could now be impossible. No one at Andela had prepared him for the new reality. After a few minutes of grilling him about the job, the border agent escorted Omin into a small room and told him to sit down. Another hour passed before a different customs officer came in. “Your visa says you are a software engineer. Is that correct?” the officer asked Omin in a tone the engineer described as accusatory. When Omin said it was right, the officer presented him with a piece of paper and a pen and told him to answer the following questions: “Write a function to check if a Binary Search Tree is balanced.” “What is an abstract class, and why do you need it?” To Omin — who now hadn’t slept in more than 24 hours — the questions seemed opaque and could have multiple answers. While he is a skilled software engineer with more than seven years of experience, Omin later tells me that the questions looked to him like someone with no technical background Googled something like, “Questions to ask a software engineer.” (The U.S. Customs and Border Protection agency did not respond to multiple requests for comment made by LinkedIn over phone and email by the time this story went to press.) With no context or guidelines on how to answer the questions, Omin, “too tired to even think,” sat down and tried his best. But when he handed his answers back after about 10 minutes of work, the official told him his answers were wrong. “No one would tell me why I was being questioned,” Omin told me by phone. “Every single time I asked [the official] why he was asking me these questions, he hushed me… I wasn’t prepared for this. If I had known this was happening beforehand, I would have tried to prepare." “That is when I thought I would never get into the United States,” he told me with noticeable fear in his voice. Omin tells me that the answers to the questions were technically correct, but he suspects the customs official interrogating him wasn’t technically trained and couldn’t understand his answers. More time passed, and Omin started to mentally prepare to get on a plane back to Nigeria. Then — with little explanation — the official told him he was free to go. “He said, ‘Look, I am going to let you go, but you don’t look convincing to me,’” Omin said. “I didn’t say anything back. I just walked out.” Omin later learned that U.S. Customs allowed him into the country after officials called Andela and First Access to corroborate his story. Jeremy Johnson, the co-founder and CEO of Andela, said that his co-founder Christina Sass was the one to receive the call to defend Omin. Just last year, Andela placed more than 100 developers from Africa as full-time software engineers with U.S. tech companies. This is the first time that any of them have ever been grilled with questions specific to software engineering or their particular trade. “Celestine was the first software engineer at one of the most visible e-commerce sites in Africa and is exactly the kind of person we want coming to America and sharing his skills,” said Johnson, who was named to LinkedIn’s Next Wave last year. “Tapping into brilliant minds like Celestine’s is a huge help to many American companies who are struggling to find talent.” For every web developer looking for work in the United States, there are roughly five open positions. That’s why startups like Andela exist in the first place: To connect foreign tech workers with opportunities here in the United States. But now with his partners having a hard time getting into the country to work, Johnson is worried that he might have challenges in the future. He has already reached out to Customs and Border Protection for further clarification on why Omin’s work visa was flagged, but he hasn’t heard back yet. “We seek to play by the rules, but we can’t respond to rules that are ad hoc,” Johnson said. “We want to make sure that our team members around the world know what to prepare for and don’t get unnecessarily hassled for their work.” As for Omin, he says the experience hasn’t changed how he feels about the United States. A proud Nigerian who recently became a father, he is eager to continue to use his tech background to create growth for his country. That said, he was initially concerned about going public with his experience because he's worried he'll be added to a watch list of travelers and have trouble entering the U.S. in the future. “I have been trying to focus here, and I haven’t thought about what is going to happen when I go back to the airport,” he said. “I am coming here legally with good intentions, and I hope to continue this work.” Chip Cutter contributed reporting to this article. Update: This story has been updated to clarify how Andela matches foreign tech workers with jobs in the U.S.
C: I didn't know us software engineers had a look. But Linux admins...
C: > I seriously doubt they have anyone on staff who can read code, let alone properly evaluate the answer. According to the guy who went through this, the evaluation process was: "Does the answer match wikipedia verbatim?": >> [sad thing is, if I didn't give the Wikipedia definition for these questions, it was considered a wrong answer.](https://twitter.com/cyberomin/status/835997221300621312) I guess it was one of those situations where the border goons didn't even know enough to know that they couldn't possibly properly evaluate the answers to the questions they were presenting.
C: I mean, there are C/C++/Java developers that haven't actually taken CompSci classes and wouldn't know how to answer any of these off the tops of their heads either (that'd be me). Could I write a B-Tree? Sure. But honestly, it's not worth the headache when I could just pull in lmdb or some other library to handle it for me. Data structures aren't something I use very often, considering I spend my day writing LOB apps, ansible playbooks and monkeying around in SQL and Salesforce...
C: Guess I'm keeping my neckbeard in case I ever need to travel outside the country.
C: They'll have questions about the katana.
P: GitHub to replace "master" with alternative term to avoid slavery references | ZDNet
C: Being a descendent of slaves myself I'd like to chime in: Github, this does not help one bit.
C: There must be something wrong with you that make you think about slavery before any other meaning that "master" can have. For me, the first thing that comes to mind is "master and apprentice". EDIT: I'm not the only one that see the bullshit that this change is. Just for a bit of context english isn't my first language, i don't have any education about the english language nor read any books to learn it, i've learned english trough experience and even I can see how bullshit that change is.
C: I'm from Nepal, and here we call our teachers as masters. Our grandparents' generation used that term, and some of us still use it till this day
C: This is such a stupid bikeshed. The word master existed before African enslavement and has a consistent meaning across industries see: https://en.m.wikipedia.org/wiki/Master If you change every word that was ever used in connection with enslavement you're going to significantly narrow the English language, and if you don't than it's just arbitrary nitpicking. Go after slurs and actually racially charged language, not random words that slaveholders used.
C: This is really silly... What's next? Master's Degree?
C: And forcing yourself on people is not fine, so git push —force needs to be changed to git push —justdoit But then also pushing people is wrong so it needs to be changed to git send —justdoit
C: The way the term "master" is used in source control is basically the same as how it's used in the recording industry; it's the definitive, canonical version of the work that can be issued for release. Terms like "main" simply don't describe the same thing.
C: Chess master implies chess slave. /s
C: What's next? Probably some changes in the BSDM community...
C: My master's degree implies that I have slaves. /s
P: Computer Science textbooks that are freely available online
C: Bookmarked. Thanks for this!
C: also [z-lib.org](https://z-lib.org)
C: My favorite thing when getting my CS degree was having a professor tell us that a book was mandatory for the class, buying it (would buy books for my major and rent all others), and then the professor never using the book the entire semester...
C: Thank you so much!
C: Not a "textbook" per se, but App Academy has their whole curriculum online for free: [https://www.appacademy.io/course/app-academy-open](https://www.appacademy.io/course/app-academy-open)
C: looks awesome, thanks
C: *morgan freeman narration*: ...and he never looked at his bookmarks again
C: Yup... This is me. Everyday. For everything in my Home feed.
C: Lol probably
P: Anyone who looks at this code instantly becomes insane
C: From the readme: > Back when I was first learning to program in Java, I decided to try to make a clone of the excellent PC game Terraria. Of course, I was convinced that my version would have many more features than the official one. > But before I realized how silly that idea was, I produced 11,000 lines of, to date, the most atrocious code I have ever seen in my life. I make it available here mostly as a cautionary tale of what can happen if you don't pay attention to the quality of your code. (Lesson learned, in my case!) Here are some of the highlights: It is an epic mess. Reminds me a lot my first games.
C: LMAO someone submitted [a pull request to "remove bad code"](https://github.com/raxod502/TerrariaClone/pull/4) Deleted all the code hahaha Repo owner: > 👍 I like it but unfortunately I don't think we can merge for reasons of backward compatibility. Who knew you could find comedy on Github 😂
C: >The TerrariaClone.init() method, which is over 1,300 lines long, actually grew so large that the Java compiler started running out of memory trying to compile it! The solution? Copy half of the init() code into a new method, called codeTooLarge(), and call that from init(). I chuckled so hard my co-workers are probably thinking I'm going crazy.
C: Another interesting issue: [Too much like the real Terraria source code.](https://github.com/raxod502/TerrariaClone/issues/2) This is thoroughly delightful thanks for sharing.
C: `mouseNoLongerClicked2` global, oh man
C: The first few files I looked at were ugly and reminded me of stuff I wrote when I was a self-taught beginner. This section in /TerrariaClone.java, however, shows a level of patience that I do not even possess now. At any point did they think, "could there be a better way?" static boolean[] blockcds = {false, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false}; static boolean[] solid = {false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, false, false, true, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false}; static boolean[] ltrans = {false, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false}; static boolean[] powers = {false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, false, false, false, true, false, true, false, true, false, false, false, false, true, true, true, true, true, true, true, true, false, false, false, false, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, true, true, true, false, false, false, false, true, true, true, true, false, false, false, false, true, true, true, true, false, false, false, false, true, true, true, true}; static double[] conducts = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0, 0, -1, -1, -1, 0, -1, 0, -1, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; static boolean[] receives = {false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, false, false, false, true, true, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true}; static boolean[] wirec = {false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true};
C: >Did I mention that *everything is global*, including *loop indexing variables*? This is when I had to go take a shower.
C: Have you ever seen the issues in pi filesystem? https://github.com/philipl/pifs/issues/56
C: Agreed, he should definitely line up all those commas
C: My favorite example is “Is 13” https://github.com/jezen/is-thirteen The issues and pull requests 😂
P: List of Coding Games to Practice & Improve Your Programming Skills
C: Screeps : actual programming in java Autonauts : Visual programming, kid-friendly graphics. Both are on Steam!
C: [removed]
C: Godot xD
C: Autonauts is awesome!
C: Any recommendations?
C: Oof, yeah Shenzhen I/O wasn’t that great. Too much information for it to seem like fun.
C: Really? I think it's great. Steep learning curve, but that only makes designing an efficient circuit running lean code even more satisfying. It's a good way to hammer home the importance of keeping your code DRY, too.
C: Exapunks is pretty fun.
C: It was too close to a real job.
C: I really enjoyed Shenzhen I/O
P: What's the difference between Value Types &amp; Reference Types
C: What about in the case for Java where it's pass-by-value but the value that gets passed is the reference to an object? :) EDIT: I know how it works but I was wondering what the animation would look like for Java's case.
C: It seems most languages pass objects by reference. Are there any languages that pass objects by value?
C: Is it odd that I've never really struggled with the difference between a reference and a actual value. I mean if you've ever "referred" to something in a conversation it's the same concept no?
C: A reference, like many other things, is a value. So in a pass-by-value language (like Java or many others), you can pass that value. It isn't that complicated to keep straight as long as you don't conflate two separate issues: * what a reference type is * how function/method/whatever parameters work Reference types still behave as references even when no parameter passing is involved. If, in the same scope, you create two references to the same object and use one to modify it, your changes will be visible when you use the other reference. Within a function, parameters that happen to be a reference type still behave like any other pass-by-value parameter. If you overwrite the parameter (itself!), it won't have any effect on the caller. (And if you use the reference to modify the object, the changes will be visible to the caller. But that would be true in a pass-by-reference language too, so whether it's a pass-by-value or pass-by-reference language has no relevance there. So again the issues are separate.)
C: Pass reference-by-value.
C: Just understand C pointers (or better: indirect access through references) and never again have a problem with pass-by-value/reference
C: Dude coffee is Java
C: This graphic will help students understand that sentence too.
C: I'm wondering how Java behaves differently from a language that reference (ignoring primitives).
C: C++ is pass by value if you don't specify the parameter to be a reference.
P: Ibm will offer free cobol training to address overloaded unemployment systems
C: As a rule I've been saying for a long time that if someone wanted to pay me appropriately to learn Cobol and their archaic legacy system I happily will do so. I'm certainly not going to learn a technology that very likely would not further my career and has no use to me on my own, only for you to probably still refuse to hire me, or offer me some paltry salary that is no more then what I make working with less stressful technologies. (Of which, when I took a job at a Mac focused company that wrote their code in ObjectiveC, they did not demand that I knew it before hand. That isn't abnormal to have training for less popular stacks. Cobol goes further in that Cobol necessitates hazard pay. I'm also probably going to fight to do the BARE MINIMUM maintenance changes in order to keep the system operational and try to put more effort on understanding and preparing for replacement.
C: So they're looking for volunteers, not paid workers? And even if they did pay workers, it probably wouldn't be very much?
C: There are plenty of COBOL programmers. The problem is that they are all old and nobody hires old programmers even for old programming languages. I am a old programmer. Retired several years ago. If I submitted my resume I would get rejected for having a gap in my resume. And then for not having recent experience.
C: man I give zero fucks about jersey begging for free labor but I'm totally down to take free online courses on the ridiculous rabbit hole that has to be mainframe computing
C: I start to believe in alternate universes when COBOL is trending in 2020 and people are signing up for classes online. From [punch cards](https://en.wikipedia.org/wiki/Computer_programming_in_the_punched_card_era) to a [VSCode plugin](https://ibm.github.io/zopeneditor-about/), not a bad run so far.
C: A plea for workers out of work to volunteer their time to work on the state's unemployment system. If that's not late stage capitalism I don't know what is.
C: Why? Now is a good time to replace those outdated systems, just like the race to solve y2k saw a lot of antiquated systems mothballed. We should do the same here. Its not that COBOL is complex it isn't: it's mostly some conditional and looping logic and decimal arithmetic. However, most mainframe COBOL programs aren't just COBOL: the COBOL just wraps around macros for accessing databases or interacting with the teleprocessing environment (which queued up the inputs from the terminals, dispatched the appropriate bits of code and then returned the output from the right work unit to the right terminal). Depending on the age of the application, there's probably more of a requirement to understand CICS or IMS. That's where the expertise is likely to be thinner on the ground and you ain't googling many answers.
C: My first IT job I was paid for 3 month RPG langue training (some other language from the COBOL era). Of 6 people in the course, only me and another where good enough to get the job. At the end of the trial 6 months, I already had another job lined up. Not worth the frustration.
C: They have an obvious need of your skills, but they’ll let artificial technicalities get in the way... so they can encourage unpaid volunteers to work on these important systems instead. Ridiculous.
C: [deleted]
P: Google will provide fundings for rewriting popular open source projects in Rust
C: They need to be maintained after the rewrite . Then you need some one with passion for the project
C: All the benefits of Rust, plus drop in replacement for whatever OSS it is. People do not want (and won't!) switch libraries or servers or whatever it is. Make it brain-dead simple for them to switch, add some performance improvements as bait, and the world becomes a safer place. Good plan. Rewrite it all.
C: Why? And I mean why rewrite. Just create a new http server in Rust from the ground up. Like nginx. There is no reason to make a clone of Apache httpd except in Rust. That's just asinine and a huge waste of time and effort. This will go nowhere.
C: And to echo a popular post from earlier in the month: a good opportunity to add more [thorough documentation ("architecture.md")](https://www.reddit.com/r/programming/comments/le46br/why_you_need_architecturemd/). Better documentation means more people will want to help maintain it in the future, period.
C: They say in the post that they are funding the current maintainers of these projects, so the risk of producing an unmaintained fork is really low.
C: >That's just asinine and a huge waste of time and effort. It's because there's a lot of memory based security holes in open source projects that are written in non memory-safe languages. That's literally the reason why and it's a very good one.
C: There's many reasons you might "clone" a project with a ground-up re-write instead of making a new project.
C: It is no guarantee, though, elipses...
C: People are definitely more inclined to update their software then to learn a new one and migrate everything to it. This is like the opposite of being useless
C: Yeah i do not understand the knee-jerk hate people have for the idea.
P: Climate Strike Software is software that uses the Climate Strike License, a software license that developers can use to prohibit the use of their code by applications or companies that threaten to accelerate climate change through fossil fuel extraction.
C: Is the software still free software when using this?
C: [deleted]
C: [https://web.archive.org/web/20170722132351/https://dev.hasenj.org/post/3272592502/ibm-and-its-minions](https://web.archive.org/web/20170722132351/https://dev.hasenj.org/post/3272592502/ibm-and-its-minions)
C: I have a product deployed in an O&G plant that uses some of those modules they're targeting like "numpy". But like how are they going to enforce the license? They would literally have no clue that their software is being used in that way. Our company is a vendor too so we can still claim we don't actively accelerate climate change. Also most O&G companies don't develop their own stuff, they get 3rd parties or vendors to implement new technologies.
C: >we should take responsibility in how our software is used This is how FOSS dies. We all create licenses to push our pet causes and suddenly development becomes a political war.
C: It is not free software by the Free Software Foundation definition, it is not open source by the Open Source Initiative definition, and it cannot be included in Debian or in FreeBSD.
C: No. Similar: https://en.wikipedia.org/wiki/Douglas_Crockford#"Good,_not_Evil"
C: But mah designer Ts
C: It's not certain legal ground since it hasn't been tested very many times, but there have been cases where GPL licence violations were successfully challenged in civil court after informal resolutions failed. The gpl-violations.org project has notable victories against D-Link and Fortinet. The Free Software Foundation has enforced GPL compliance with Cisco, as well. It seems like MIT and BSD licences could carry similar legal weight. As far as knowing how their software is being used, it's possible that the violation may never be discovered. A lot of companies won't want to take that chance though.
C: That's a tough one to reconcile, but personally, I'm leaning in favour of the climate licence. I agree strongly with the ideals that free software aims to achieve, but at the same time, I can't escape a sense of responsibility if work I do expands human suffering.
P: Hey Progreddit!  Do you have the want to give back to open source projects but are too lazy/busy/don’t have the skills?  Read on!
C: It's great that people want to help OSS projects, but I don't think 'raiding' is a great framework for doing so. Regarding feature patches: no decent programmer is going to commit a big patch without first understanding it, vetting it for bugs, architectural compatibility and consistency with the project's long-term goals. So factor in a wait of a few weeks just to get your patch examined. A patch written by someone unfamiliar with the codebase is highly unlikely to be accepted first go. You'll be asked to justify choices, and might be asked to rewrite the patch. Will you be around to do this? Regarding bug fixes: if a bug report exists in a bug database, very likely the project owner has seen it. That means it probably isn't 'shallow' or easy to fix. Probably it requires some architectural rethought. This requires deep grokking of the codebase, which 'raiders ' are unlikely to have. See also my previous point about the difficulty of getting such changes in. > people without the technical skills required could participate by providing documentation Good tech writing is IMO harder than coding. It requires intimate familiarity with the software, a broad knowledge of what docs are _already_ out there, an understanding of where users are coming from, and good writing skills. Very few people have that combination of experience, user empathy, technical and writing skills. What are a gaggle of newbies likely to produce? Most likely, bad documentation, which in my view is worse than _no_ documentation. IMHO, if you want to help with coding, recognise that OSS projects are about people as much as about the codebase, and that code without a maintainer is worthless. Stick with a project and really learn how it works. Do the hard yards of earning the trust of the maintainers, and become a commiter. If you want to improve the docs, write blog posts documenting your experiences. It helps users while being clearly unofficial. If your posts get popular enough the contents can be rolled into the official docs.
C: What? One night a month? I need at least few days just to 'get into' the project: to get familiar with building process and code base. And I need to do that before I do anything. And I'm not even lacking "technical skills", in fact I think I'm pretty good at working with unfamiliar projects and my co-workers are often surprised with how fast I can track something in the unfamiliar code bases. Understand me correctly, I think helping open source projects is a wonderful idea, but I think that useful help can come only from people who are familiar enough with the project. Doing something in one night is ridiculous. Make it at least a week. It depends one size of project, bigger projects need more time to get familiar with it. My friend spent many weeks just trying to build and understand Mozilla Firefox. And he is not some random dude -- he was being specially picked by the Mozilla Foundation from Google Summer of Code applicants to help with Firefox. And even then, doing everything in an organized way he still was mis-fortunate to introduce significant regression with his patch on critical vulnerability -- patch fixed the vulnerability, but have broken many sites. So I think doing short raids will do more harm then good. Please reconsider time frame.
C: >Would anyone be interested? Yep.
C: one night a month? can you really fix much with that kind of hit-and-run approach?
C: Haha, this sounds like a pretty cool idea. :D
C: As we have learned from the rally and other occasions, hordes of redditors can accomplish great things. Let's make the open source world a better - and slightly weirder - place!
C: Well, the details are entirely up for discussion. Maybe 2 days is more appropriate. But more likely it would need to be determined for how long it goes on a raid-to-raid basis or just for however long people want to. People will probably also stick with some projects after a raid, because they liked it. In the end it'll all come down to the raid organization, including write-ups on how to get going, giving people specific tasks and communication with the original project maintainers. Just having a bunch of people mindlessly hacking away for such a short time probably won't achieve much, but with good team efforts and structure you can do a lot.
C: If we planned out the project and assigned bugs beforehand, I think it would be very doable. Edit: what maritz said.
C: I was thinking the same thing. Maybe we could extend the "night" to a couple of days, or maybe even a week. I guess it would also depend on the project: if small, a night would be rather sufficient; if big, it could take up to a week for the entire "horde" to coordinate well enough to make a noticeable difference. Anyway, I'm up for it. While not a professional, I can do some coding and could help with translation and other stuff.
C: hmm.. i guess i can see that, and i suppose it depends on the project, but i can see you maybe fixing some low-hanging fruit (bug-fixes, simple ui changes, adding some documentation, etc), but to make a dent in any large project, or major feature changes? i would think it'd take on the order of weeks of dedicated work. Investigate the code-base, get to understand, how it works, what it does, why it does it, etc. Understand the feature you want to add, write the code, get it reviewed by the maintainer(s), fix any issues they have, etc. That said, i don't mean to dissuade you, i'm sure there are *LOTS* of projects who'd like people to clear off some of the low-hanging fruit.
P: To the brain, reading computer code is not the same as reading language
C: It makes sense to me. Code is rarely trying to convey an idea to someone who reads it, instead it is like looking at meshing gears in a machine. It also makes sense it would use the same region used for puzzles. Many people describe coding as a puzzle and are drawn to it because of that. I'd be interested if, as they mention, the region changes with experience, but also if it changes between various languages, i.e. one that is prose-like vs use that uses lots of symbols.
C: What is the last time you sat down by your fireplace on a cold winter evening and read a good program? For me it was a long, long time ago, reading the source for Unix v6 ... never happened again.
C: tl;dr reading code is not like reading English and not like doing maths. It is its own discipline. Surprise, surprise!
C: I've seen studies shared that say language skills are a better indicator of a good programmer than math skills are. I definitely think language is important. I wouldn't say reading code is like reading a book though. I can speed read text. Code though, that is something different. Code is logic. Code doesn't express a thought like this sentence does. It expresses logic in instructions.
C: Group 1: "It's a language problem for the brain!" Group 2: "It's a math problem for the brain!" Brains: "shit this is hard"
C: I don’t really agree with code rarely trying to convey an idea. Often, code is written to follow a common pattern which will convey an idea of its purpose to the reader. It’s part of what makes code easy or hard to read.
C: I think programming compared to language and math is apples vs oranges vs berries. Three separate things. It’s a false dichotomy to just say one predicts programming skill and one doesn’t, or even to say one is more predictive than the other. Language and math can both mean many things too. Language: foreign language knowledge, essay writing experience, analytic philosophy studies? Math: logic, calculus, algebra, financial math, engineering math?
C: I'd argue that's not conveying an idea like written language, but rather understanding and recognizing a pattern so as to understand functionality similar to know you would do so when looking at a common circuit.
C: I would agree and I thought about that however I cannot resolve something in my mind: I go out of my way to write code to look more like the pattern for easier readability. To me, that seems language like. It is the same way I would modify a sentence to sound more like a common idiom. It picks up a shade of meaning and understanding.
C: You make a good point. It makes me wonder how other things that do not inherently carry meaning but have meaning superimposed on them are processed in our brains. i.e. how are emoji and other pictograms processed Sort of connected, I wonder how people who read but do not speak a language process writing. I know that people who are deaf often have a harder time processing writing because a lot of written language has a basis in how it is pronounced. I wonder if they process written language closer to how this study shows people process code.
P: Percentage of GitHub commit messages with angry words in them (sorted by language)
C: Haha, I love vim
C: Given how bad everyone says PHP is, It's the lowest in the list.
C: What are the most popular angry words used in commit messages?
C: Here's the post where it came from: http://geeksta.net/geeklog/exploring-expressions-emotions-github-commit-messages/
C: I **fucking** love vim!
C: 
C: You don't use git with PHP. Just add _new to the filename and edit away!
C: > (?i)\b(a+rgh|angry|annoyed|annoying|appalled|bitter|cranky|hate|hating|mad)\b' According to [this article](http://geeksta.net/geeklog/exploring-expressions-emotions-github-commit-messages/).
C: Works for the built-in library, why not for personal projects? (I'm looking at you mysql_real_escape_string)
C: Unlike mysql_fake_escape_string which was a really bad idea in hindsight.
P: Challenging projects every programmer should try
C: Challenging project? Debug my code ;)
C: Thank you. I was actually looking for projects to work towards in order to better improve my programming skills in c++. Currently a second semester freshman with about 3 years of off and on self taught learning. Nothing concrete. All of them sound like quite the challenge and really seem to make you think outside the box, especially the text editor one without using a GUI capable framework. Once I build up a little more experience in the lower leagues I am going to start cracking at these. :)
C: I'm always finding enough challenges in the things i *need* to do without seeking out more!
C: I guess I'll accept "challenging", but people should really not put compilers under "difficult" projects. They're not hard, the problem is your compiler textbook is poorly written. Also, I think you should write a .mpg player.
C: Living my life is just challenging enough ;)
C: hehehe.
C: HAHHAAHHA
C: I wrote my first (but hopefully not my last!) compiler thanks to the NAND2Tetris course on Coursera. I won't deny it wasn't challenging, but in the end if you can divide up the work and conquer each part separately everything becomes managable. Modern compilers are still "magical" to me when you look at how they can optimize code though. In any case, I can recommended to everyone that has an inkling of curiosity about compilers to write one. And I can certainly recommend NAND2Tetris.
C: >I won't deny it wasn't challenging, but in the end if you can divide up the work and conquer each part separately everything becomes managable. Right, I think this is what makes it not difficult. A lot of projects turn into a ball of spaghetti (take any large C++ app and try to find the part that does something useful - you can't!) but a compiler has a simple structure. It's just a set of passes that run one after the other. That means it's easy to test and it's easy to learn how a production compiler works by reading the debug output.
P: I made a program that shows how effective gerrymandering can be in python - source code & explanation in description
C: Very impressive, well done
C: r/dataisbeautiful
C: I kept waiting for someone to come out with a game involving politics / gerrymandering / ratfcking / misinformation etc. given the last four years. At least let's have some fun with the situation instead of repressed anger.
C: Do not give this code to the GOP
C: It’s also effective in JavaScript.
C: I would have worded the title as follows: "I made a program in python that shows how effective gerrymandering can be". :)
C: I've dreamed of making one for many years. The hard part is making it fun enough that you could make a living off it. The harsh reality of game dev is that your dream project is almost certainly doomed. There's no way I can justify losing my insurance, falling behind on my mortgage, and not funding my retirement to make an app that you play for 10 minutes and uninstall.
C: As if they haven’t already been using computers to do this for decades?
C: They have this code already (used in conjunction with very detailed voter information). It's what made [REDMAP](https://en.wikipedia.org/wiki/REDMAP) possible in 2010.
C: Based on leaked documents they are using Excel to plan their gerrymandering.
P: COBOL, A 60-Year-Old Computer Language, Is In The COVID-19 Spotlight - As State Governments Seek To Fix Overwhelmed Unemployment Benefit Systems, They Need Programmers Skilled In A Language That Was Passé By The Early 1980s.
C: I remember a friend of mine who is an IT manager took on a project on overhauling some government system that was still relying on Cobol. He told me he had to incentivize retirees to come out of retirement to do the project and was basically at their mercy. He said at one point "I'm afraid of two things. My Cobol programmers walking out or passing away in the middle of the project.".
C: [deleted]
C: Sure they need COBOL programmers, but the pays not there.
C: I did it for a few years. Some mainframe work with CICS but mostly for PC apps and even web applications. I wouldn't go back.
C: The reasons these systems never get updated is because they are so complex no-one understands them anymore. Gathering requirements for systems that no group of people currently understand is near impossible, and is the reason so many legacy systems get left in place until they can't be managed. And no manager/bean counter ever wants to do a re-write to something modern, because the costs of doing so is basically the same as writing it from scratch. So we keep our legacy systems near indefinitely and its not going to stop with COBOL. Any older complex system eventually has the details of what it does lost to the ether and the cost of replacing the system becomes the same or more than the original system cost to build.
C: The following is probably the two most important snippets from the article: *"...all experienced technical meltdowns"* AND *"...They might not have an easy time finding the programmers they need."* The problem those state agencies are having with some of their legacy software systems is a computing capacity problem. The mainframe systems went from processing X transactions per day to many times X transactions per day, and they just didn't have that capacity. Unless the plan is to re-write or re-engineer those software systems using COBOL, I do not see how hiring more COBOL programmers would solve the problem those state agencies are currently experiencing.
C: Back in college I had a year of Cobol. The course head literally told us that they put it on the course because they saw jobs opening up from people retiring or dieing.
C: No, there's no excuse. I went to University in the early 80s and Cobol was already considered stupid. That's _forty years ago._ > their funding may be limited If you can't afford to keep your government running, don't have a friggen government! It costs _more_ in the long run to do a shitty job.
C: Some day I’d like to buy an old mainframe and play with it. Just for CICS.
C: >It costs _more_ in the long run to do a shitty job. In fact, it's costing us more RIGHT NOW
P: How Naughty Dog Fit Crash Bandicoot into 2MB of RAM on the PS1
C: [deleted]
C: Jesus. No wonder their games always seemed to squeeze the most out of the PS3, and why Uncharted 4 looks so damn nice. They seem to be very good at optimisation over at Naughty Dog.
C: > after we'd already exhausted the usual tricks of, e.g., stuffing data into the lower two bits of pointers (which only works because all addresses on the R3000 were 4-byte aligned). Wow that's a pretty clever trick, never heard the idea before.
C: My interest in software has always been because of video games. I grew up reading about these kinds of things. The ingenuity and creativity that went into coming up with some of the hacks that allowed early console games to work is amazing, and subsequently a nightmare for emulator writers! Now I work with a bunch of people who whine when they can't find a framework that does 95% of what they need already.
C: That was riveting from start to finish. (I'm not joking.)
C: That's why we pay them the big bucks.
C: A lot of old programs would also stuff data into the *top* bit of pointers, which worked as long as operating systems reserved the top 2gb for internal use. This is why Windows programs require a special flag to use that top 2gb. The modern trick to squeeze more data in than should be sensibly possible is to use 8-byte doubles for a lot of stuff, but use varying representations of NaN and the infinities for special purposes.
C: Tagged pointers are widely used in dynamic languages to avoid allocating small objects, especially integers, on the heap. [MRI Ruby](http://www.sarahmei.com/blog/2009/04/21/object-ids-and-fixnums/), [OCaml](https://realworldocaml.org/v1/en/html/memory-representation-of-values.html), [pretty much every Lisp implementation](http://lars.nocrew.org/lisptags.html), and even [64-bit OS X Applications](http://objectivistc.tumblr.com/post/7872364181/tagged-pointers-and-fast-pathed-cfnumber-integers) use them.
C: https://en.wikipedia.org/wiki/Tagged_pointer
C: It appears that the practice of (mis)using the top bits isn't [dead yet](http://blogs.msdn.com/b/oldnewthing/archive/2015/06/05/10619746.aspx). And for a real world example of using NaN for special purposes see [luajit](http://luajit.org/).
P: ‎Scott Hanselmann: "Don’t feel you need to work more than 8 hours a day. Or 6. Don’t make code your hobby UNLESS YOU WANT TO"
C: I am a web dev for work. What helps me is instead of doing web dev in my spare time I shift to doing something that may still be coding, but is different than what I do at work. Maybe that's devops, Linux, Raspberry Pi type stuff. That way it feels like a hobby, but isn't more work. Then there are days where I just binge Netflix after work. That's perfectly fine too.
C: I wouldn't be able to do my 8 hour-a-day programming job if I didn't have a side programming hobby. I'm well paid but the work is dismal. I hope to turn my side project(s) into my job at some point...
C: Who has hobbies that they don't want to do?
C: What type of side projects do you have going?
C: I think he's referring to people who feel they need to code as a hobby as a way to build a portfolio to validate their skills for employment reasons.
C: r/Warhammer40k became a compulsion for me a long time ago.
C: World domination
C: Audio units for OSX. Synths at the moment.
C: @me It's terrifying to know that I could get my degree and still not get hired.
C: Same side project we start every weekend, Pinky; try to take over the world!
P: Clean Code — A must-read Coding Book for Programmers
C: It's definitely a must read. Even if you disagree with it, you should know why and be able to talk about it intelligently
C: I respectfully disagree, for reasons I have [explained on Reddit previously](https://www.reddit.com/r/javascript/comments/5kpp2f/what_to_learn_in_2017_if_youre_a_frontend/dbpux8g/).
C: A good book as long as you think of it as a rough guideline with some good ideas, not as a rule book. I’ve come to disagree of a lot of Uncle Bob’s ideas over time.
C: To be honest, I found Clean Coder better. As many have pointed out, Uncle Bob can be ...zealous in his code but I found his thoughts on what a developer should be kinda inspiring
C: It's recommended everywhere and it was a big letdown for me. It's full of personal preferences and generic advice, so it's easy to agree at some points that you already follow, but very little insight on *why* you should follow some advice over other ideas, other than authority of the writer.
C: Funny seeing this now, just started it last night
C: I find one often has to go “too far” with an idea or technique before one can truly discover where the “just right” point is. When my favourite language or toolkit gets a new feature I will often intentionally overuse it to really explore where it excels and where it falters. Then after a bit I dial the usage back to what feels optimal to me. Reading _Clean Code_ felt like the same experience. At first I felt like “Wow, this guy really takes cleanliness seriously. I should probably be doing more in that regard.” By the time he got to replacing pure function parameters with internal class state, I was yelling at the book “Oh no! You’ve gone to far! Come back, Martin!”
C: I also did not found it too useful. But to stay constructive here are a few of my favorites that comes to my mind: * Refactoring to Patterns – Joshua Kerievsky * Refactoring: Improving the Design of Existing Code - Martin Fowler * Patterns of Enterprise Application Architecture - Martin Fowler * Domain-Driven Design - Eric Evans * Out of the Tar Pit - Curt Clifton * The Pragmatic Programmer - Andrew Hunt, David Thomas * Effective Java - Joshua Block
C: I read your posts there. Thanks for eloquently presenting that argument.
C: Same here. I even bought his other books on Amazon so that I could read it during all this time at home.
P: I created a video about Neural Networks that is specifically aimed at Python developers! If you understand the Code, you understand how to create a Neural Network from Scratch! The video took me 200h to create and is fully animated! Hope it helps you guys :)
C: dam you did a great job explaining and animating this video great work
C: This was super helpful. Thank you for spending the time to illustrate the concepts
C: Woah this is exactly what I was looking for!
C: Thanks a lot❤
C: That’s awesome 👌
P: A crash course on hacking satellites
C: As an army satcom guy, this is dope.
C: I think I'm out of the loop. What's the use case of hacking satellites? Edit - wish I got a serious response. :(
C: Terrific! Thank you!
C: Nice Website. Loved the 8-bit theme
C: Kit is already out of stock. Was hoping to get my HS son into this.
C: To hack a satellite...duh
C: Technically one use could be to make or listen in on satellite phones. There has been some significant progress on hacking and reverse engineering Iridium satellite communication.
C: A few things: One of the most important is to secure your own satellites from unauthorized use. This is very important if you are building satellites for the government or private business. Second, to gain unauthorized access to another satellite. This could be for corporate espionage, governmental purposes, or personal gain. Third, would be to regain access to your own satellite after a failure or some issue preventing normally designed access. Ultimately, increasing the general knowledge of how satellites are hacked increases the overall security and expectations of security, so that's a very good thing for the industry. There are countless purposes for hacking satellites with most depending on the application of the said satellite.
C: Starlink I guess
C: Check out what the Brazilians are doing with open satellite relays. It's illegal and it's becoming a problem for the US who have satellites all over the shop that keep getting loaded up with this illegal traffic causing them military operational issues. I found a really good article on the subject but can't for the life of me remember where as it was a while ago. Edit: found it. It was wired. https://www.wired.com/2009/04/fleetcom/
P: When I was learning to code, I didn't have enough context to understand why data structures and algorithms are important. So, now that I have experience I created a video to help!
C: Hey, thank you for creating this. :) Next time maybe consider increasing the audio volume through audacity. It's *really* quiet, too quiet actually.
C: Edit: I REALLY appreciate all the love you all are showing on my video!
C: Thanks for sharing your experience.
C: Good stuff!
C: I gave a Youtoob-Updoot +1
C: ### What's the summary? (Video is not audible to me and I'm in a hurry)
C: Do we still need wideos like that in 2020? People are worth as much as the data about them now. Edit: thanks for downvoting, it only proves me right :)
C: Thank you!
C: New people are born everyday.
P: How it feels to learn Javascript in 2016
C: I'm new to coding and this is what I fear moving forward
C: I'm glad it's not just me....
C: I did some web development in 2008-2011. Tried again last year. This could have been me asking the questions, same level of confusion. I just want to <simple task in a personal project>, why do I need to learn 4 levels of libraries?? In the end, I did it in jQuery in an afternoon.
C: It's all this gobbledygook to make Javascript behave like a *"real"* language that drives those of us who have been coding for a long time CRAZY. I've been coding since the 80s. My first paying gig was writing pascal. I've done everything from C/C++ to C# to Python (yay) to Perl (yuck) to Assembly (THE POWAH) to Java to Javascript to Pick Whatever The Fuck You Want. Javascript was a hideous toy language that everyone collectively decided to take more serious than it ever deserved and then spent the next 20 years trying to shape into something that doesn't suck.
C: You can still do plain old Javascript, just like you can do plain Java. The people that like to solve made up problems (because writing the same web app & service over and over again gets boring) or see every large team coordination problem as something that should be fixed with another layer of tooling got tired of piling on Java and moved to Javascript. Doesn't mean that folks that just want to get things done need to do what they do. The vast majority of web use cases do not require all of this. Spend your time understanding the dom, ajax, and localstorage, not learning leaky abstractions over top of it.
C: It's not really something to fear.. Learn the basics first then pick a well known library and make a hello world app with it. Rinse and repeat until you feel comfortable with a set of tools that work well for you. Then just pick up what you need for a job you want. By the time you've learned a few they all start to seem the same.
C: Today one of our embedded guys asked me to make him a monitoring web app that polls two different end points, one returns an image and one returns text, and display them both. It was so joyful for the first time in two years to just bust out jQuery and whip it together in 45 minutes. The current state of cutting edge webdev is embarrassing.
C: Homey with react you can do it faster in no time! You just need to learn it!
C: I have coded since the 20s even when there was no computers http://v1.std3.ru/71/b7/1450110575-71b77b2bd06f431f2bd0b4abb983738f.gif
C: > The vast majority of web use cases do not require all of this. That's true, because the overwhelming majority of web pages are trivial. But the trend over the past couple of decades is moving away from webpages built by that guy in the marketing department "who knows HTML", to rich applications -- i.e. applications with UIs as sophisticated and powerful as desktop applications -- built by real engineers in teams. They have radically different expectations about platforms and tooling. HTML/CSS/Javascript is a clusterfuck of bad/inconsistent design and historical baggage. > Spend your time understanding the dom, ajax, and localstorage, not learning leaky abstractions over top of it. You appear to use the term "leaky abstractions" as a dismissive pejorative, which is missing the point. Abstraction is fundamental to programming. The fact that abstractions leak is something to recognize and be aware of, not a reason to avoid abstraction. I lead a distributed team of two dozen engineers working on a huge, rich-client medical application for the web, ported from Silverlight. The idea of people checking-in code in a typeless language to our code base in 2016, code whose errors can only be detected when run, coding in a language that's almost incapable of benefiting from modern tooling (code inspection, refactoring tools, static analysis, etc.), is insanity. Favoring raw DOM manipulation over a clearly defined MVVM pattern, is almost equally insane. We're not only using a framework, we've built more framework on top of that framework, which is true of any major application on the desktop as well. The result is that the actual non-framework code we write is clean, clean, clean, ultra succinct, properly decoupled, etc. Our feature velocity -- our ability to rapidly, sustainably add new features without generating technical debt -- is due to pushing all complexity and boilerplate not related to business logic into the framework. Yes, this means the application code is built on a giant pile of abstraction, but the same is true of any modern development stack on the desktop as well (e.g. WFP + .NET + Entity Framework). Our Silverlight code base was much cleaner than most because we did the same thing there, creating abstractions on top of our ORM (which itself an abstraction over the database), post-compile modification of byte code to inject features impossible in the language or framework, etc. These framework layers were complicated and took hundreds of man hours to develop and test, and maybe only save a few minutes for a developer building a new feature. But those minutes add up over dozens of developers over years of use. More importantly, those features were designed to eliminate types of code that tends to be more error prone or require more testing, leaving only business logic as much as possible, which results in a more robust applications, fewer support hours spent, ect. Those kinds of large scale development practices might not matter if you're building a website for your buddy's DJ business, but it can make the difference between ongoing success and eventual implosion when building industrial sized applications. Those kinds of applications just didn't used to be built on the web. The proliferation of frameworks today is the direct result of more larger scale engineering efforts happening on the client.
P: Xbox Series X Graphics Source Code Reportedly Stolen, Hacker asks for $100 Million Ransom
C: Just release the source. Money trail gets you caught.
C: What exactly is the danger of the code being made public? I get a company wanting to keep their code secret, but I imagine the code by itself would be pointless without the hardware. Hardly worth 100mil. I don't see people using this alone to make knock-off Xbox Xs.
C: So the hacker stole code used by Microsoft and posted it on a Microsoft-owned website (GitHub) hmmm
C: Whoa. *Huge if true*
C: 100m is a little much
C: Having the source code allows hackers to more easily find vulnerabilities.
C: Of course `huge if true` just evaluates to `huge`, so
C: Their linux graphics drivers are also open source, no problems &#x200B; although this time "good" people can't an don't have a reason to search and fix bugs
C: Official Nvidia drivers are closed sourced in Linux.
C: sadly true, but amd's not
P: You're Not a Fake Programmer, That's Just Impostor Syndrome
C: I find it hilarious how coders swing between "I'm not good enough" and "I am a god"
C: [deleted]
C: Nah bro pretty sure I'm just shit lol
C: If we didn't have impostor syndrome programmers wouldn't have anything to complain about. I can't stand for that.
C: Even as a senior programmer (20 years in the industry) I suffer imposter syndrome. So many people hold me on a high level and I’m worried I’ll get found out. But hey, I’ve got this far ok. Interviewing people for my company helps. There are a LOT of bad programmers out there trying to punch above their weight. But to rise above it all, develop your other skills. “Soft” skills are so important, and I know this is what differentiates me when I feel like I’m lacking in coding skills (whether real or just in my head)
C: That basically sums up a CS classroom. Rarely is there a middle ground, it goes from students challenging the teacher to students regularly calculating score they need to just pass the class.
C: Story of my life, pal. It's not unusual to experience both on the same day.
C: You rely on everyone else confusing bewilderment at your nonsensical statements for their own imposter syndrome - which keeps them from calling you out - then just rotate jobs every 6-12months collecting bank along the way. At least that's how several of my former colleagues appear to do it.
C: Sounds like you're due for a promotion.
C: LOL. I'll never forget the stark contrast between the hundred plus students in the giant, initially crowded CS1 lecture hall compared to the 20 or so left at the end.
P: Why does Linus Torvalds prefer the code on the right? (TED talk in comments)
C: Here's a Medium post that discusses this: https://medium.com/@bartobri/applying-the-linus-tarvolds-good-taste-coding-requirement-99749f37684a "But it wasn’t the line count that mattered. It was that if-statement. It’s gone. No longer needed. The code has been refactored so that, regardless of the object’s position in the list, the same process is applied to remove it."
C: Basically it's most likely because the code on the right hand side avoids the extra conditional. One code to do it all. If you can avoid handling special cases because they're not special cases, then you avoid forgetting about updating them if you have to change the code at some time in the future. This has been discussed recently under the subject of "code taste".
C: In the following TED talk: http://www.ted.com/talks/linus_torvalds_the_mind_behind_linux ... Linus talks about how one implementation of `remove_list_entry(...)` in a linked list is better than the other. I found myself bemused, seeing as I was thought that focusing on readability is better than being clever (unless you really, really need to optimize the thing you're working on). I am sure I'd waste 10x as much of a maintainer's time if I used the right implementation over the left implementation. Or it might be that I don't have experience with coding C, and the right implementation isn't that obscure as I thought. I'm more of a Python/C#/Java guy.
C: I love making special cases not special.
C: Fewer conditionals = better pipelining.
C: > Or it might be that I don't have experience with coding C I think it's really just experience. The right code is conceptually much simpler, not only does it lack an `if`, it is also much closer to how one would solve the problem in natural language: "start at the head, walk the list until the current position contains the entry, replace current position with the next element, thus removing the current". Or try to draw the problem with pen&paper, chances are you won't create a `prev` box to hold a temporary. The issue is that this simplicity is lost when you are not familiar with C and pointer. The references Java or Python give you are somewhat similar to pointers, but this kind of indirect access is exactly what they can't do. You can't get a reference to the reference to `head`, you can only get a copy of the reference to head, thus needing additional book keeping when you want to modify the actual reference to `head` instead of your copy.
C: This is bad relationship advice.
C: The magic that is branch predictors negate most of the benefits that the processor would have (although there would be some small amount by simply not polluting the predictor table). Linus primarily liked the code on the right because fewer branches mean the code is easier for the developer to reason about. There are minimal paths that this code can take to execute, less state in the head of the developer to maintain.
C: It's not just about better pipelining or better performance; code with less conditionals is generally easier to read and understand than code with more conditionals. And in this specific example, the pointer-pointer indirection also removes a bunch of special-cases, which is even better. Conditionals and conditional branching is in my opinion the very definition of business logic. As an experiment in your free time, start a real project you can finish in a weekend or less, then abstract all your conditionals and loops away by separating and tucking them all into short functions. It might make your eyes twitch at first, but when you are done, your code should be incredibly readable. Like a list of sequential steps.
C: > code with less conditionals is generally easier to read and understand than code with more conditionals. That really depends. You can understand what's going on more easily maybe, but you might not understand the intention as well. In the code above I don't find the non-conditional code easier to read even though it is probably better, though I'm not entirely convinced that it generally is outside of a kernel context.
P: SQL police department: Learn SQL while solving crimes
C: I really enjoyed playing this. However, I did think some of the briefs were a little ambiguous in terms of what specific information was being asked for, and it's really not clear what you get for a $20 licence. However, the concept is good.
C: This is actually really cool! Cool learning experience, and totally usable even on mobile.
C: A really cool way to practice SQL in short time
C: This is super dope!
C: Really enjoy this. At a higher level I think it would be good to incrementally take things away from the interface and leave people with a keyboard... Just adding to the educational aspect so that eventually people are writing their own queries from scratch as they would in practice. So maybe have players query for schema, table structure etc and then they can point and click again, then at another level up they have to query and then type again rather than click etc. Just thoughts. Beautiful design. Fun to play. The whole “solving crime” thing reminds me of 1984 a bit and playing Portal at the same time... like... it would be fun if there was some story weaving through the cases that had you searching for and eventually capturing more and more ethically challenging “criminals” ... for example murderers and child traffickers step by step up to anyone who or is suspected of “thought crime” i.e. has spent time on sights talking about the Dalai Lama, Tienemen Square, Hong Kong protests, Martin Luther king, or the bill of rights and eventually you start querying who your working for or something... maybe I’ve read too much dystopian sci fi, mr robot, V for vendetta, and still shook up about watching Waco on Netflix this quarantine, but yea that’s where my head went with story. Thank you for making and sharing a great example of effective edutainment.
C: Did you post this to /r/SQL ?
C: Really nice.
C: I found the cases quite clearly formulated, but I had some duplicate ones. I guess they are somewhat randomly generated? I second the thing about the license though: I don't know what I would get for that, why it is limited to six months and why I have to pay 20$, when it seems like I've used most app features already (I don't really know SQL, so I can't tell, if it gets much more complicated or if it only more of the same).
C: “Totally usable even on mobile” - rare words my boy
C: Not op, but game dev is not yet complete. License looks like a place holder in terms of what will and will not be free. Corrections welcome if I’m mistaken. Also, I thought the ambiguity all though not ideal for a super noob is actually useful for dealing with real world specifications and expectations. (Old man rant) In my former life part of what we had to learn was that the customer often doesn’t have the understanding of what is or isn’t possible nor the language to ask for it, so creating specificity from ambiguity is ... a feature and not a bug. ;).
P: I reverse engineered Google docs (2014)
C: Kinda disappointed that Wave got such a brief mention in this document. Google's realtime collaborative typing experience was basically pioneered by Wave and then ported over to Google Docs once it was working well. Then Wave died of course, but it's no coincidence that the realtime collab engineers passed through the Wave team on their way to the long term Docs project
C: Very nice post... And its also quite interesting how google built the docs revision thing :)
C: Except for being a fun read.. it also means that google docs are a huge security risk. If you typed anything in such a document that was later redacted out or even if you removed it yourself immidiately after typing, then it is still in there. I bet there are lot’s of documents out there that contain obfuscated content in this way, that never should have gotten out. “Go hackers, go out harvesting this information” This is very bad !
C: Very nice read.
C: A fun read :)
C: Wave was so cool when it came out. Too bad not many had access. Docs really was a better decision though, best not to make it too unconventional. Really interesting to think how different document editing could be though.
C: That makes me think... There was an article about correlating movement patterns in VR with people's identities (say, for unique advertisement ID). I bet that can be done with people's typing patterns if you have microsecond accuracy on the time between keystrokes (to an extent, with a small enough sample size).
C: Wave was ahead of its time. If you think about it, Slack essentially captures the essence of what wave was.
C: I actually just did a ML project on this! It's actually a problem of you either neither a very small sample size, so you are trying to pick who out of a hundred people typed this paragraph, OR you need a VERY sample size of people where you are allowed to type your own words for multiple pages. If you have too many people and they are all typing the same paragraph then it all kind of starts to look the same to the computer. A more granular time stamp for each key may have helped, but from what we saw it does not seem like it would
P: Beginner guide to git and GitHub.
C: Looks promising! Now I just need to take the time and read it.
C: It's pretty sad how git has come to totally dominate as it has. It's sort of Linus Torvalds' practical joke: he realized his first creation Linux was helping everyone - which is really not his style! - so he thought "ah ha! I'll make something no-one can \_possibly\_ like - and I'll even call it Git to make that clear!" But ... lo and behold... another massive industry. But what a terrible product! By "terrible" I'm not saying it is technically badly done - of course not. But as a \_product\_ it's awful. I mean just count the hits on Stackoverflow for "git problem" or just the existence of sites like [ohshitgit.com](https://ohshitgit.com) tell the story. And don't tell me "he wasn't developing a product" blah blah... yeah, so why is everyone using it then! A load of Torvalds fan boyz! I mean I love what he did producing Linux - but that doesn't mean he sh\*ts gold, please. Github (and Gitlab and a host of others) help - but why are they necessary? git came into being because open-source projects of size (like the Linux kernel) need distributed version control and Bitkeeper is closed: okay. Maybe there was no alternative at the time - but [Mercurial](https://www.mercurial-scm.org/) and [Bazaar](http://bazaar.canonical.com/en/) were both getting going - why not try a little open source eh Linus? And for the \*rest of us\* - why jump on \_this\_ band-wagon - the one with no suspension and a wild horse? So now we're stuck with \`git reset HEAD\~ --hard\` and such gibberish. We've got \`git prune\` \_and\_ \`git cherry-pick\` - can't even the \*fruit\* be consistent? Hey, look I'm [not](https://stevebennett.me/2012/02/24/10-things-i-hate-about-git/) [the](http://www.evan.org/Fun/Git/index.htm) [only](https://medium.com/@jerryhawstien/programming-why-i-hate-git-9225b0ff79a2) one. I personally don't believe anyone who's done significant software development in a team under pressure hasn't hit a git catastrophe one time or another. Typically you have to have a local git guru in your team - who spends his/her time doing practically nothing else but extract colleagues from their git pain - that's not how it should be. Well - Github I like - but couldn't it have been HGHub instead? One thing for sure, Linus Torvalds is chuckling all the way to his basement. Okay - end rant...
C: Hey thanks!
C: Awesome guide
C: [deleted]
C: I'm glad that you found it helpful 😊
C: more like forgit haha...
C: Dammit, this is sadly accurate but going to help me prevent it.
C: I feel attacked...
P: Stop saying learning to code is easy.
C: Monday's article: \> Stop saying coding is easy Friday's article: \> Stop saying coding is hard Repeat weekly ad fucking infinitum as per every crappy bloggers wet dream.
C: Well, coding at shitty levels IS easy. And let's be honest, most people just want to code a shitty Arduino application or some shitty alarm clock.
C: Coding is easy. Software architecture/design is hard
C: I'll be curious to see how this all pans out in 20 years. The fast-paced boot camps, the "everyone should code" campaigns, the visual programming paradigms, etc. It seems like we're placing a huge amount of emphasis on recruiting and outreach but very little effort on sustainability and long-term career insight. Sure this stuff will attract tons of people, but what's the retention rate going to be like? And what's the code quality going to be like, on average?
C: Writing a sentence is easy. Try writing a novel that people actually want to read.
C: 10 PRINT "PROGRAMMING IS EASY" 20 GOTO 10 1. Learning enough to understand "toy" code examples is easy. 2. Learning enough to automate simple, useful tasks is medium hard. 3. Learning enough to make large, maintainable applications is hard. I'd say everybody ought learn code at level 1 above, just to make the concept non-magic. People whose main work involve some kind of non-trivial data processing ought to learn to code at level 2, using whatever tools are relevant for their field (like Excel). Learning to code at level 3 is usually only worth it if programming is going to be your main profession.
C: Coding is medium.
C: The problem is that the basic principles of coding are relatively simple, it's not some mystic process that requires years of study in some basement somewhere. Writing a "hello world" application is dead easy, and turning mathematical formulas into powerful applications is something you can do with next to no experience. However, computer systems are complicated and the way that things interact do require a fair bit of understanding. The more systems you try to tie together, the harder it will be. In part because documentation is spotty at best, and in part because you need to have a solid idea of how all the systems tie together. Programming has a simple foundation that has a lot of complexity built upon it. Tl;dr It's easy to write a program to do your math homework, it's hard to write an application that can do your math homework, show the work, and automatically email it to your English teacher.
C: Stop saying coding is medium
C: Software is the medium.
P: A complete daily plan for studying to become a Google software engineer.
C: I want to point out that the individual who made this does not work at Google...
C: One thing that might be important to note is the systems design interview. This interview is only given to people coming in as L4s and up (generally 5+ years experience) so it doesn't show up on most Google interview resources. You need to demonstrate the ability to solve a problem via distributed computing and answer questions regarding resource requirements, scalability with respect to hardware, latency, etc.
C: I actually had the hidden Google coding challenge foobar pop up for me while searching programming related info that apparently if you finish all of the topics they ask for your contact info and sometimes contact you for a job. I finished two test without help the third test I needed help. Still haven't finished cause their nerv racking you can start a test anytime and have to finish in two days. Theirs like five test the code has to pass and if it doesn't do it fast enough you'll fail. No logs and no explanation why it failed just these test failed. You get dropped into a terminal session and cat the directions. And write the file as answer.py or in java.
C: [deleted]
C: Flip side: When your dream is to improve your coding skills to the point that a company with a well-known high quality bar is willing to accept you, then that doesn't sound so unreasonable? Nothing wrong with using an external metric to measure your progress. (Also, the fact that you've then scored a job with [Fortune's #1 place to work](http://fortune.com/best-companies/) is probably not a bad thing either.)
C: But those are the people Google wants. Like Amazon. 80 hour weeks? Come on down!
C: No idea why you were downvoted. This guy doesn't even say why they want to work for Google so bad, it's a given. Even buying future Google stickers. As someone said, this is setting himself up for major disappointment when Google turns out not to be cloud cuckoo land.
C: At least when I was at Google (starting in 2009)...no. The people who usually ended up at Google and did well there were ones who had no ambition at all to "work at Google", and it sorta fell into their lap. My coworkers there included a former punk rock bassist who got sick of touring, a film studies major who happened to pick up programming on the side and discovered it was easier to get a job there, *two* philosophy majors who decided Google was a better option than law school or grad school, and a large number of startup founders (including myself) for whom Google was the consolation prize when their startup didn't take off.
C: [deleted]
C: Most had some programming experience before Google, although in many cases it was just hobby projects. Still made for a portfolio they could put in the resume though. I think, for the most part, it was largely "show up to the interview and do a good job on it". The ones with more non-traditional backgrounds (eg. the film studies major) often went to good schools, but not necessarily Ivy-League, and indeed, probably a majority of my colleagues there went to state schools. I think that if you're open to new possibilities but not completely desperate for a job, that comes across in the interview, and it tends to skew the conversation to your benefit. There's also pure dumb luck. Google gets millions of resumes; oftentimes people get to the interview stage just because their resume stood out to some HR temp, or because that temp had a quota to make, and conversely people might get rejected just because they apply late in the year when Google is trying to ramp down spending.
P: Git - A dead simple tutorial for beginners
C: That's the thing with Git, it's actually pretty simple to just Add and Commit some files. It's the only thing you do 90% of the time. It's just when you start Merging, and Rebase, Check out, Revert, Reset, Patch, etc, it's far to easy for your repo to explode into a huge unrecoverable mess. I've been using Git for just over 10 years, and I still get nervous when I need to do an advance/normal every day command.
C: True. Once I messed up my local repository and have to reclone everything. 😅
C: I find git quite simple to use with a good GUI like GitExtensions or SourceTree, even for 'advanced' usage like rebasing branches or subtree or else you don't need the console at all.
C: I highly advice you toeread http://tom.preston-werner.com/2009/05/19/the-git-parable.html It explains how git works internally, and once you understand that, everything become easy.
C: Almost everything in git is non-destructive. For "undo", see `git reflog` to see what changes you've made and you can checkout the appropriate version with the commit hash.
C: Never used Git GUI.. but seems good idea when messed up.
C: Cool.
P: Automate Your Dating Life with 100 Lines of Python
C: This is as hilarious as it is mildly depressing. Kudos, OP.
C: This was a very good read, thank you for posting it
C: An interesting article for the technical aspects of inspecting a protocol and automating things but I hope no one actually does this 😓
C: If you are to do this, be sure to remove mitm's cert from the device afterward, or better yet use an old device with nothing else on it.
C: Dating apps will bomb your visibility if you just swipe right on everything. Cute though
C: 1. Automate swiping right on their profiles 2. Scrape their social media for their interests and hobbies 3. Train a RNN with a million chat conversations, including their personal details, and throw in a few classic pick-up lines 4. Call Google Assistant to book a restaurant that's close to her 5. Integrate with Apple Calendar to add the dates to your planner 6. Post a task on Mechanical Turk for someone to go on the date and have sex with her on your behalf. Fully automated process.
C: >I hope no one actually does this 😓 Spammers most certainly do
C: Can you explain why ?
C: I don't know if mitm proxy generates its own certs on install now, but having self signed certs for mitm software on your device is not ideal.
P: Programming Books You Wish You Read Earlier
C: The pragmatic programmer is a master piece
C: On a related note, I wish more programming books were spiral bound. I like to lay a book flat on my desk while I explore the code examples.
C: I think a very important book that is missing is clean code by Bob Martin
C: Office Depot will re-bind the book to spiral if it's not too thick; I've done it with a bunch of books and it's not expensive.
C: I agree. It gives you sensible *guidelines*. I'm still bewildered by having to explain fellow devs of all experiences and sizes that 14 arguments constructors aren't the way to go.
C: All the other books on the list are heavy on science. Clean Code would be an odd addition - it’s basically just Bob’s unscientific opinions about coding style. I agree, the book is a valuable read, but the other books are just on another level.
C: Exactly. 15 is the sweet spot.
C: >14 arguments constructors The builder pattern get's around those pesky 14 argument constructors ;)
C: If anyone wants to read on stuff like this I recommend Game Programming Patterns by Robert Nystrom. Very good concepts there.
C: The builder pattern always seems so elegant but I feel like my coworkers would just say it’s over engineering and to just use an object.
P: GitHub game jam · over 200 games with source code
C: [deleted]
C: The flappy Bird spinoff was amazing
C: > Solve puzzles with turing complete bovines! This one got me good
C: [deleted]
C: [deleted]
C: Thanks! I also love playing and ~~hacking~~ experimenting with the source! There's not a *great* way right now to filter all entries by language (unless the creators tag the games on [itch.io](https://itch.io) and/or GitHub), but you might find these URL hacks interesting/useful. **Finding gamejam entries:** [https://github.com/topics/gamejam](https://github.com/topics/gamejam) **Games written in Lua:** [https://github.com/topics/game?l=lua](https://github.com/topics/game?l=lua) **Ludum Dare entries written in JavaScript:** [https://github.com/topics/ludumdare?l=javascript](https://github.com/topics/ludumdare?l=javascript) **Game Off entries**: [https://github.com/topics/gameoff](https://github.com/topics/gameoff) **JS13K entries** (all JavaScript / TypeScript): [https://github.com/topics/js13k](https://github.com/topics/js13k) **Global Game Jam entries written in C#** (likely Unity): [https://github.com/topics/ggj?l=c%23](https://github.com/topics/ggj?l=c%23) You might also like [https://github.com/topics/c64](https://github.com/topics/c64), [https://github.com/topics/nes](https://github.com/topics/nes), and/or [https://github.com/topics/retrogaming](https://github.com/topics/retrogaming) :)
C: I will be messaging you in 4 minutes on [**2020-01-15 10:04:48 UTC**](http://www.wolframalpha.com/input/?i=2020-01-15%2010:04:48%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/coding/comments/eoo3w1/github_game_jam_over_200_games_with_source_code/feg8p6m/?context=3) [**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fcoding%2Fcomments%2Feoo3w1%2Fgithub_game_jam_over_200_games_with_source_code%2Ffeg8p6m%2F%5D%0A%0ARemindMe%21%202020-01-15%2010%3A04%3A48%20UTC) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20eoo3w1) ***** |[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)| |-|-|-|-|
C: I will be messaging you in 1 day on [**2020-01-16 16:49:56 UTC**](http://www.wolframalpha.com/input/?i=2020-01-16%2016:49:56%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/coding/comments/eoo3w1/github_game_jam_over_200_games_with_source_code/feh1757/?context=3) [**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fcoding%2Fcomments%2Feoo3w1%2Fgithub_game_jam_over_200_games_with_source_code%2Ffeh1757%2F%5D%0A%0ARemindMe%21%202020-01-16%2016%3A49%3A56%20UTC) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete%20Comment&message=Delete%21%20eoo3w1) ***** |[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&subject=List%20Of%20Reminders&message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&subject=RemindMeBot%20Feedback)| |-|-|-|-|
P: A Beginner's Roadmap to Becoming a Full-Stack Web Developer
C: Thanks for putting this together. I think it definitely helps provide a path for someone like me who is a baby in this world
C: Now we just need a section on how to actually get a job.
C: Looks good. I have been maintaining a repository [https://github.com/kamranahmedse/developer-roadmap](https://github.com/kamranahmedse/developer-roadmap) containing roadmaps since 2017. Have a look at that also.
C: Awesome! Well organized :) For job preparation, it may be useful to add in resources where users can prepare for technical coding challenges and interviews. Ex: Codewars, Leetcode, etc.
C: Thanks
C: Thanks for putting this together! I’m just at the start of my journey so it’s a big help 🙏🏻
C: Thanks so much for putting this together. I'm a UX/UI trying to get into development and this is super helpful
P: 200 universities just launched 600 free online courses.
C: Is that me or the site does not let to open its link in new tab (in iPhone). Kind of like they disabled right click! Anybody else experiences same thing?
C: Sweet
C: This is the best tl;dr I could make, [original](https://qz.com/1120344/200-universities-just-launched-600-free-online-courses-heres-the-full-list/) reduced by 98%. (I'm a bot) ***** > If you haven&#039;t heard, universities around the world offering their courses online for free. > In the past three months alone, over 200 universities have announced 600 such free online courses. > Philosophy for Children and P.E.A.C.E. from University of Naples Federico II. L&#039;innovazione sociale per il patrimonio culturale from University of Naples Federico II. Dante tra poesia e scienza from University of Naples Federico II. La costruzione dell&#039;Italia from University of Naples Federico II. La Letteratura latina in et&agrave; post-augustea from University of Naples Federico II. Comprendere la filosofia from University of Naples Federico II. L&#039;Italiano nel mondo from University of Naples Federico II. иностранный: B1. Russian as a foreign language B1 from Saint Petersburg State University. ***** [**Extended Summary**](http://np.reddit.com/r/autotldr/comments/7bioj2/200_universities_just_launched_600_free_online/) | [FAQ](http://np.reddit.com/r/autotldr/comments/31b9fm/faq_autotldr_bot/ "Version 1.65, ~242358 tl;drs so far.") | [Feedback](http://np.reddit.com/message/compose?to=%23autotldr "PM's and comments are monitored, constructive feedback is welcome.") | *Top* *keywords*: **University**^#1 **Universidad**^#2 **Naples**^#3 **Federico**^#4 **II.**^#5
P: Most popular languages by number of GitHub and Stack Overflow tags
C: I'm guessing: * **XML**: You don't really write your program in it, but you still need to know how to use it. * **SQL** **XQuery**: Projects using it aren't tagged as such because it's embedded in other code. * **Delphi**, **Ada**: Lots of old code to maintain. Not really a fancy new language for open source project. * **D**: Only its maintainers are using it, they do not need to ask any questions (that, or people are using their awesome forum instead). * **ActionScript**: Simple language for simple things. Nothing to ask questions about. * **TeX**, **VimL**: A lot of personal and side project stuff stored on github. * **AutoIt**, **AppleScript**: Commercial and personal use. * **Mathematica**: Students asking questions about homework. * I'm not sure about **Cuda**. Fun thing to learn, not a lot of things to use it for? People having problems with running their bitcoin farm?
C: VimL - the least problematic language ever.
C: TeX has its own exchange over at http://tex.stackexchange.com so I'm not surprised by the "low" amount.
C: Java, still killing it
C: There's an Objective-C++?
C: [deleted]
C: I think many can be explained by the users they are targetting and their mindsets. For example, a former C/C++ developer looking into D would have learnt to study documentation and research the language & standard library carefully before asking, because if you didn't do that, you would probably have had a hard time even getting started with C/C++, given the many pitfalls. Conversely, I imagine a Visual Basic developer not exactly being a hardcore hacker, but far more casual, doing small projects or jumping into old or others code, and using the quick & easy method for getting help to "fix that Excel macro to arrange the spreadsheet properly into a text file". So I think part this, and part how scarce the documentation might be. Assembly language is hardware dependent, fragmenting the common knowledge you'll gain by studying the language, F# is sort of Microsoft's often forgotten .NET child. AppleScript, AutoIT, SQL used for so specialized scenarios ("do this with my computer", "how to do this with our database") that online info might usually be lacking. Delphi ranks reeeally high above the curve for some reason though, even more than Visual Basic. It surprises me, I expected it to be largely used by a close knit community these days while being old enough to have vast amounts of documentation.
C: And the most angry one http://geeksta.net/img/emotions-github-commit-messages/commit-messages-anger-percentage.png Source: http://geeksta.net/geeklog/exploring-expressions-emotions-github-commit-messages/
C: It being the software industry.
C: Are Javascript and PHP commit messages that low in anger because developers who work with them have already resigned themselves to perpetual misery?
P: GitHub is now free for teams
C: Good news... But how will GitHub make money now?
C: Cool
C: they also lowered the price of some of their tiers from $7 to $4
C: It’s more “fremium” nowI think they got rid of or limited the free features like pages and what not
C: They also decreased the amount of included monthly minutes on GitHub actions from 10000 to 3000. At my company our upcoming overage charges will about even out with the money we save
C: I've heard that Github Enterprise is where most of their money comes from.
C: Doesn't microsoft own github?
C: GitLab has had free private repos forever and are growing quickly. So, I have no idea how any of them make money. GitLab seems like their business model is the be a loss-leading new business acquisition channel for GCP.
C: Yes, but they aren’t a charity.
C: Companies throw hundreds of thousands at them for premium features. And they have a lot of companies that do this
P: This is what I have made using table
C: This is a follow up to my previous post
C: Thats awesome for just html !
C: Cool!
C: Nice
C: Very nice
C: Clean
C: His birthday is a day after mine :o
C: Endland?
C: Can you share the source code?
C: I don't have access to the pc at the moment. I can share the code tomorrow
P: How to learn ___. Where can I learn ___? Should I learn to code? - Basics FAQ
C: I started out on Sololearn as it links your progress with your phone and on the laptop, the phone is great for doing the mini courses and games but the laptop version is great for traditional coding and trying out your code. I would also recommend stackskills bulk course that was on a 98% deal but idk if hats over now I’m half way through a html n css course, hope this helps! Happy coding
C: Great post. Thanks for doing this. I am in the early stages of "retooling" my career away from finance and towards coding. I would recommend folks check out Free Code Camp ( [https://www.freecodecamp.org/](https://www.freecodecamp.org/) ) as well. It is free and a great place to start.
C: The wiki could use updating. As of now it really only covers webdesign. Could also use a section on "How to ask a question". Something along the lines of https://stackoverflow.com/help/how-to-ask
C: Thanks. When I saw posts titled, "where to start" or "how to start", I used to link to a search in this subreddit for the word "start". After a few of those, I gave up and just downvoted. I don't like downvoting because that's what the worse part of Stack overflow does. However, I am much more interested in helping people who put at least a little effort in first.
C: Thank you for sharing :)
C: ❤️❤️❤️
C: The discord link only takes me to the discord website.
C: I started with Mimo, It's similar to Solo learn İ think!
C: Good idea. I’ll do that.
C: No problem. I agree. Glad I could help out this subreddit.
P: [AI application] AI agent plays Contra
C: This game was my shit as a kid lmao this is sick
C: This gif is loud if you're old like me.
C: [mp4 link](https://preview.redd.it/439mng978xj61.gif?format=mp4&s=3c36b1e79cfc66c20733b4b659854396b8a28cdc) --- This mp4 version is 93.15% smaller than the gif (1.69 MB vs 24.75 MB). --- *Beep, I'm a bot.* [FAQ](https://np.reddit.com/r/anti_gif_bot/wiki/index) | [author](https://np.reddit.com/message/compose?to=MrWasdennnoch) | [source](https://github.com/wasdennnoch/reddit-anti-gif-bot) | v1.1.2
C: That’s so awesome. I never made it past level 1 when I was kid lmao. I’d love to play it now that I’m older.
C: Source code: [https://github.com/uvipen/Contra-PPO-pytorch](https://github.com/uvipen/Contra-PPO-pytorch) Full demo: [https://youtu.be/YBd4l806Di8](https://youtu.be/YBd4l806Di8)
C: Is this AI or a script?
C: I fucking knew constant jumping was the best way.
C: Otherworldly
C: This and Double Dragon II were pretty much all I played back in the day.
C: haha yesss
P: Y'all who want help getting started: This sure is funny but take it seriously.
C: Holding your mouse from the bottom. Seems efficient.
C: The best way to start is to do it. No matter how you fuck up you'll always learn.
C: This is true although im talking a online course but we do many exercises by ourselves and we have to follow along with the video. I'm learning better when I had a lot of mistakes but coding is so much fun to learn.
C: This is me. I've just started trying to learn coding. I didn't know where to start so I went to code academy.
C: Please Add A Flair To Your Post! Suggested Flair: `[Random] or [Meta]` &nbsp; ***** To add a flair: + Click `flair` underneath your post + Select a flair + Click `save` &nbsp; ***** *^I ^am ^a ^bot ^run ^by ^[\/u\/SupremeDesigner](https://www.reddit.com/user/SupremeDesigner) ^for ^/r/CodingHelp ^|| ^This ^was ^an ^automated ^response*
C: Honestly, coding is just like learning anything else. You fail until you don't. Except that premise stays with you no matter how proficient you get. Not like other things where you practice until you don't fail anymore.
C: I'm not aware of any skill that is practiced until there is no more failure.
P: HOW DO I ZOOM OUT?
C: `Ctrl` + `-`
C: its basically a chrome web browser. ctrl+/- to zoom in and out, ctrl+0 to reset.
C: [https://www.google.com/search?q=visual+studio+how+do+i+zoom+out&oq=visual+studio+how+do+i+zoom+out&aqs=chrome..69i57.3058j0j7&sourceid=chrome&ie=UTF-8](https://www.google.com/search?q=visual+studio+how+do+i+zoom+out&oq=visual+studio+how+do+i+zoom+out&aqs=chrome..69i57.3058j0j7&sourceid=chrome&ie=UTF-8)
C: Smh
C: MacOS: `command` + `-`
C: Answer
C: /u/elvertoo is on Windows.
C: Bruh don’t downvote my mans comment like this cmon y’all did him dirty
C: Maybe they have a really convincing icon pack?
C: Not really it was ob af and a quick search it's as if he used reddit as soon as he couldn't zoom out so smh is right although your right down vote is a dirty move.
P: I’m trying to create this, but I’m not sure about how to do it, any help would be appreciated!
C: Maybe hosting a webpage with esp8266 can be useful
C: Check out internet of things. The light is probably connected to the internet and the girlfriends app communicates with it via an IP.
C: What u/cndvcndv said is probably the most straightforward, however if you want to be extremely ressourceful of computing power, you could omit the overhead that comes with a webpage and just send a ping via ICMP to the microcontroller, since you don't need any actual communication. I say this without having ever even been close to trying something like this at all though.
C: I preface this by saying I don’t have any real experience doing this. But maybe it’s possible to establish a TCP connection between the two devices or use a specific port that the outgoing and incoming communication will use so then it’s easy to retrieve. I feel like this is possible, but again I’ve never done this so idk if this is actually possible. Cause then maybe you can send an onClick function call or something.
C: Yeah that sounds like a terrible idea.
C: Please Add A Flair To Your Post! Suggested Flair: `[Random] or [Meta]` &nbsp; ***** To add a flair: + Click `flair` underneath your post + Select a flair + Click `save` &nbsp; ***** *^I ^am ^a ^bot ^run ^by ^[\/u\/SupremeDesigner](https://www.reddit.com/user/SupremeDesigner) ^for ^/r/CodingHelp ^|| ^This ^was ^an ^automated ^response*
C: Hmmmmm makes sense
C: Yeah, esp8266 controlled relay. Or a smart bulb with local wifi control and cors built into it to allow to be controlled from a separate domain. (if that exists) Or a smart bulb with local wifi control and a local machine (rpi) with a server that will send the "blink" requests out to the bulb. (obviously you can take advantage of this and also host the webpage on the rpi as well) You'd need to give the bulb a static address or make sure it has a hostname on the network so you can always talk to it when it's connected.
P: New theme on the website and loads of tutorials coming to the website! The website even has a working dark mode that remembers by using cookies!
C: Link to the website is in the menu above, as well as here: [https://codinghelp.site/](https://codinghelp.site/) Applications are always open for Article Writers. If you want to apply you can do so here: [Writer Application – coding.help\[ \]](https://codinghelp.site/writerapp/) There is a "New to Coding?" link in the menu above which links to the latest blog post I made here: [Are you new to coding? This is your one-stop-shop! – coding.help\[ \]](https://codinghelp.site/are-you-new-to-coding-this-is-your-one-stop-shop/) All new members to coding will be forwarded here. If you have any other suggestions for the site, let me know! :)
C: I love the new website theme.
C: Do you plan on going over Javascript as well?
C: The articles is very nice and compact and easy to understand :) if you are running out of ideas consider the while True statement i python, would love to see that.
C: Great site!
C: Nice theme!
C: Great job p.s: Don't use cookies for storage, they can worsen the performance
C: Thanks!
C: Yes that is being added within the next week. :)
C: Alright. Shared that with our team. Thank you so much!
P: PLEASE HELP. What am I doing wrong here?
C: What's with the `\\`? `\` is the line continuation symbol and you have code after it, so it's giving you the "unexpected character after line continuation character" error.
C: Isnt the error about the additional "," at the end of printf? Seems like you want to pass another variable to printf and it awaits something but after " ," There is nothing
C: So, there are a couple of things here, let's go step by step. First, the error you encountered is because of an extra `,` at the end of your print statement. Second, in your comment, you mentioned that you want it print *month/day/year*; this print statement will not do that as it can print only strings or variables and `\\` is neither. A quick fix is replacing `\\` with `"\\"` assuming you want backslashes there. Do note that, by default, print will add a space between the strings separated by comma; you can remove that by using the `sep` parameter. The final print statement: `print("The date is:, month, "\\", date, "\\", year, sep="")` Third, better way of doing this would be to use f-strings as suggested by others. I won't explain how they work here but here's how you use them in your case: `print(f"The date is: {month}\\{date}\\{year}")` This will automatically get month, date and year from their variables
C: print("The date is ",month1,"\\\\",day1,"\\\\",year1)
C: I need it to print month/day/year. I thought double backslash prints a backlash
C: Not when they're not `str`s. Just use f-strings.
C: im very new to this and i have no idea how to do that would you please explain?
C: U say that likes it’s obvious while OP be on Python Task #1
C: f'{month}/{day}/{year}' The `f` before the quotes tell Python that it's a f-string. The curly braces within the quotes are used to denote variable substitution.
C: >f'{month}/{day}/{year}' thanks so much
P: Why wont it just let me edit the text and not delete it. VERY NEW TO CODING
C: You've inadvertently pressed the insert key at some point. Hit it again and it type correctly.
C: Ah the insert key, hate that key 🙄
C: Insert key, that shit is pure evil if you use it accidently
C: 2 year coder here, I figured out just the other day it's because of the insert key, press it again and you'll be fine
C: My Logicool keyboard software has an option to disable the Insert key. Before I got it, I literally superglued it so it wouldn't move. Same with Num Lock.
C: Hahah this got me too when I started.
C: Thanks so much!
C: Does the insert key have any real use other than to annoy us? Genuinely curious
C: I use it for editing fixed-sized-columns CSVs, quite useful
C: Nice, glad it has use for some people. Feels like a cruel joke sometimes lol
P: Non techy wife seeking help for coder husband gift!
C: A rubber duck
C: Just want to make sure 100% - do you have any smart-home switches or things like that? Lovelace is also the name of a dashboard to control those things: https://www.home-assistant.io/lovelace/
C: Ada Lovelace sounds good!
C: I saw some tesla patent prints on etsy and a few sites the other day. Moreso related to engineering, but similar realm. |[https://www.etsy.com/listing/806782819/tesla-set-of-6-patent-prints-engineer?gpla=1&gao=1&&utm\_source=google&utm\_medium=cpc&utm\_campaign=shopping\_us\_ts1-c-art\_and\_collectibles-prints-digital\_prints&utm\_custom1=\_k\_CjwKCAiA8Jf-BRB-EiwAWDtEGguBfJ8Aks7CSzHQX-zwMMKP4a6IneHufGxVyh\_zhY0YsS8-tWxCfhoC7TMQAvD\_BwE\_k\_&utm\_content=go\_2063581104\_76452839735\_367965825297\_pla-328046931108\_c\_\_806782819\_117963325&utm\_custom2=2063581104&gclid=CjwKCAiA8Jf-BRB-EiwAWDtEGguBfJ8Aks7CSzHQX-zwMMKP4a6IneHufGxVyh\_zhY0YsS8-tWxCfhoC7TMQAvD\_BwE](https://www.etsy.com/listing/806782819/tesla-set-of-6-patent-prints-engineer?gpla=1&gao=1&&utm_source=google&utm_medium=cpc&utm_campaign=shopping_us_ts1-c-art_and_collectibles-prints-digital_prints&utm_custom1=_k_CjwKCAiA8Jf-BRB-EiwAWDtEGguBfJ8Aks7CSzHQX-zwMMKP4a6IneHufGxVyh_zhY0YsS8-tWxCfhoC7TMQAvD_BwE_k_&utm_content=go_2063581104_76452839735_367965825297_pla-328046931108_c__806782819_117963325&utm_custom2=2063581104&gclid=CjwKCAiA8Jf-BRB-EiwAWDtEGguBfJ8Aks7CSzHQX-zwMMKP4a6IneHufGxVyh_zhY0YsS8-tWxCfhoC7TMQAvD_BwE)
C: Depends on price range but if he doesn’t have an ultra wide they are fantastic for productivity
C: This
C: We do not! But that is kind of you to point that out... He's told our daughter about Ada Lovelace the first computer programmer.
C: She's looking for art.
C: She's looking for art ideas not monitor ideas
C: Ahh yes I’m dumb
P: Why won’t the song load?
C: Hey check this out [https://www.w3schools.com/html/html5\_audio.asp](https://www.w3schools.com/html/html5_audio.asp) hope it helps.
C: I am new to coding
C: If you’re using google chrome, they stated to disallow autoplaying and will require a control for audio
C: Looks like your forgot the = after type and before the “
C: Huh explain
C: You have type”audio/mp3” it should be type=“audio/mp3”
C: He’s saying you have type”audio/mp3” but should have type=“audio/mp3” also check the src path as well. You may need a back slash in front of the static dir name (/static/sounds/your_song.mp3)
C: Okay it’s because I had <embed> instead of <source>
C: Okay I did that and it still won’t load is it cause I am on a school chrome book?
C: Check your browser's console for errors regarding the file. Could also try putting ./ before static to indicate that the static folder is in the same folder as the html file.
P: What happens when you print (this)? The answer is TestClass.si = 10 but I’m confused why because the toString() method wasn’t called??
C: “This” is a TestClass object and by printing out the object you called that object’s toString method. Whenever you print out an object, that object’s toString method is called.
C: Calling `System.out.println()` on any non-primitive object will call that objects `toString()` method to get a string representation of it. By default this returns `[ClassName]@[HashCode]`
P: Short Code to Tell My Brother He's Going to Be an Uncle?
C: baby = family.addchildinstance() self.addstatus(uncle) Edit: To those saying add baby as paramater of add status, that makes sense. here's a version with that change for OP: baby = family.addchildinstance() self.addstatus(uncle, baby) To those mentioning camelCase... snake_case_4_lyfe!!!!!!!!!!!!!!!!!!!!! praise(snek)
C: class Rel: def __init__(self,x,y,z): self.n = x self.r = y self.c = z print (f'{self.n} is gonna be an {self.r} to {self.c}') Rel('Jack', 'uncle', 'baby') Code (python) when run would print: Jack is gonna be an uncle to baby Replace 'Jack' with your brother's name in quotes. Replace 'baby' with baby's name or whatever you'd like it to read, also within quotes.
C: \`<your-kids-name> = self.sibling\[0\].spawn()\` Maybe the \`\[0\]\` if you're their oldest sibling, etc. If you're say their 4th oldest sibling then you could do something like \`\[3\]\` instead.
C: I haven't written Java in almost 15 years so I'm useless but just wanted to say this is super wholesome and I love it. Congratulations :)
C: https://pastebin.com/Ht2McDw8 In case you want to get technical.
C: if(num_nieces != 0){ print("World's best uncle."); } If you know what languages he likes or uses the most you could adapt syntax for it but this is pretty generic. Obvi num_nieces can be num_nephews or num_niblings as appropriate.
C: Don't forget your camelCase (:
C: This one is the best
C: What language you use now? Or you retired?
C: PHP pls send help... Jk, I quite like it, but learned throughout HS & college mainly with Java and some C++
P: Did everyone else get the feeling of being overwhelmed:
C: Coding in general is a very taxing task, it’s very normal to feel overwhelmed. Coding is like any other skill, you just got to sit down and start practicing, you’ll eventually develop a rhythm on how you tackle problems. Many problems in the computer science field, coding, mathematics, etc require an immense amount of critical thinking and sometimes the solution isn’t obvious and you’ll bang your head days on end trying to get something to work. As someone who minored in computer science whilst majoring in applied mathematics, I felt the exact same way starting out. But don’t worry, keep your head high and push forward, the reward is definitely worth it
C: Millions of very smart people have been advancing computer science for 60+ years. There’s no way you’ll know everything
C: I started last week, I know that if you try to do at least a little coding a day, it won't seem as hard or big. I'm not that good at it, but I'm starting to get into a daily routine, and that really helps the nerves.
C: Honestly when i started coding i was completely overwhelmed and had no idea what i was doing. I was just giving up and coming back all the time. It took me time to process everything and today it all makes sense finally. Focus on the basics as much as you can and if u learn something new learn to master it so it really sticks and you have a good understanding
C: When I started I was packed with so much dang information that I had pretty frequent panic attacks. My best advice is to know that you don't have to keep all this stuff in your head. You'll learn a language, use it, and then find a problem that calls for a different language. You'll keep learning them, and when you have to go back to a past one, you just look up references. The best thing you can do is learn syntaxes, like how python cares about white space but not about semi colons but Javascript is the opposite
C: Alright thanks for the reassurance. I really appreciate it and I’m definitely going to put forth my best effort.
C: Yeah that’s definitely true lol. Thanks.
C: Yeah I do like an hour and a half everyday which helps a lot
C: I always recommend doing a 101 and 102 course at your community college. But lots of people don’t want to do that. Pick a language. Check out newer coding book for that language from a library and get through it, being able to understand the exercises they have you do. Start with one language. Once you understand a language well, and you understand how to think through problems, almost all other languages are similar except with different syntax and easy to pick up. It’s also many many times easier if you have a friend or mentor type person that knows what they’re doing. Probably most your struggles, we’ve all gone through and can explain it in easy concepts
C: Thanks so much man and I’m still in high school but I’m going to take come cs that they have. But I’m definitely going to do that. Appreciate it!
P: border help for an amateur coder (details in comments)
C: The border property can't be specified with pixel width alone. https://developer.mozilla.org/en-US/docs/Web/CSS/border `border: 1px solid black;` for example
C: Random first observation is that in your html your body tag opens on line 33. It should open on line 10 instead, directly after your head tag closes.
C: I want a border around the blue float element but it won't work I'm not even sure if my pictures are showing properly on here but if they are any tips are super helpful edit: Finally figured it out! thank you guys for all your help!
C: *```border-width: 1px;``` might be it
C: border: size, type, color E.g: border: 1px solid black;
C: I think what you're looking for is border, instead of margin for the css under . container1 Margins are transparent, and are mostly used to provide empty areas.
C: Border: 1px solid black; You need to specify the type of border, solid, and colour I believe
P: How would I use my CSS for the print statement on the first pic?
C: idk php but in your html your href=“mystyle.css” but your css file is named “styles.css” so that won’t work...and if the files are in the same directory you should add a “./“ so the same directory is referenced. so, if you keep the current name of the css file as “styles.css”, your html href should be “./styles.css”
C: I believe you want to put the PHP print commands inside a <div> tag. You can then give the div tag a class or ID of print by doing <div class="print"> I can't remember which uses a hashtag and which uses a period out of the two, I believe class is the hashtag but I could be wrong.
C: So php is a server side language. The string will be printed within the html. However print is a php command and is not rendered, it's executed. Php stands for php hypertext processor (the php part is a recursion joke), html stands for hypertext markup language. So php processes html (for our purposes here). On the server you have your php file, which is being sent to the client as html. Anything that is contained by the <?php ?> Tags will not be sent over to the client, only what it outputs will be. In this case the string you are printing is going to be output. There is no print tag being sent over. You can know this by using inspect element for the rendered page. You'll see there is only the html above and below the php, and the output of your code, which is the printed strings. Later as you do more with php you'll start to see how this is so useful. With that in mind, you would put whatever html you want to use for styling purposes within that string or above and below it. For example: `print "<div>";` `print "whatever you want to output within your div";` `print "</div>";` And then you can add a div class or whatever you want.
C: #print { font-size: 2em; font-style: italic, bold; }
C: I think if you styled the php tag, or tried putting it in a div and styling that, php is a sub-language, you can't effect it's elements with css.
C: Add an identifier
C: Stop using notepad ++. Use vscode/sublime/atom even eclipse. Trust me people will say your text editor don't matter but it does.
C: `#` is the id selector, `.` is class :)
C: Instead of using `#print`, you need to use do something like `print "<p class=\"php\">text</p>";` then for css `p.php { … }`
C: Ahhh can't believe I got them the wrong way around haha
P: YouTube channels for coding
C: freecodecamp.org
C: mycodeschool is fantastic as well. He goes over some data structures/algorithms stuff in c/c++ and some general concepts and explains them very well
C: Mike D is the man. Giraffe Academy. The man just wants to watch the world learn.
C: I also wonder about this! I have a hard time getting properly started
C: I recommend javidx9
C: Codergopher is great for c++ imo
C: Colt Steele and Brad Traversy are also great! Also - MDN (Mozilla web docs for reference/resources)
C: SoloLearn is amazing as well.
C: I'll give it a try!
C: It's always fun to learn from such an enthusiastic teacher.
P: [Source code with demo] Here is my python implementation of Deep Q-learning for playing Tetris
C: Source code: [https://github.com/uvipen/Tetris-deep-Q-learning-pytorch](https://github.com/uvipen/Tetris-deep-Q-learning-pytorch) Demo: [https://youtu.be/g96x6uATAR8](https://youtu.be/g96x6uATAR8)
C: I'm def. bookmarking this! Thanks!
C: I waited so long for those two bottom rows to clear. :O/
P: Can anyone tell me why the image isnt coming as the background ?
C: it looks like your image is in a folder, so try Background/Image.jpg
C: Mention your path correctly . Using Background/ should work.
C: nice
C: Thank you mate ! It worked
C: additionally I would recommend using css for these stuff
P: I want to learn how to code so bad! But this stuff is so hard man!!!
C: Repetition - admittedly it’s hard to wrap your head around it at first. But the more you get into it, the easier it’ll be for you to understand the concepts. Should you need any help or have any other questions, feel free.
C: 80% of it is understanding how to think, which simply takes time and examples and practice and repetition. Once you have that, picking up new code or reading code is more or less understanding differing syntax that does the same thing. 10% is repetition/practice. Practice makes things easier. Practice gets ideas firmly rooted in your head and makes future things easier. 10% is simply experience. With experience, you will simply be more knowledgeable. You will better be able to read documentation and not get stuck simply because you didn't understand in a dry technical manual that is 1000 pages long. Experience will cause you to understand similar concepts. Experience will cause you to have an understanding of how to approach something. There's not really any shortcuts to these. Everyone you think is super smart or a natural was at your point once, and they either had good tutorials, good teachers, good coworkers etc that helped them get over a new hump
C: Hey, you can do it, I'm also a newbie in coding a d trust me it just easier. Just keep practising every day and keep your motivation up. You may also have to learn some concepts over and over again. I had to learn CSS flexbox and grid thrice to get it. Know yourself, some of us don't grab thing at once, we need repetition. Check freecodecamp.org. they have a simplified curriculum.
C: I personally find that the online courses are convuluted and confusing and often the task you're given makes absolutely no sense when you read it. Personally when I'm learning a language I like to first look up how to do a function which I then will use to make programs like find min, find max, search a list, input validation etc. Those programs help you to get used to using things like arrays, if statements, loops, and plus or statements, mathematical operators and user input and output commands. It also forces you to read through the code and understand it by error checking and using stack overflow for what you can't figure out to find what you need.
C: Really appreciate it. I noticed lots of repetition in the lessons alone, which is dope. It kind of starts off slow with most information given and then slowly takes the info away and makes you input more and more of the code until you are writing small lines.
C: And I am super stoked to dip my toes into these waters and hopefully in the future be a part of all you code wizards. And I don’t have any friends or resources at the moment that could help me learn, I know the internet is full of useful info and I will dig deep until I get somewhat versatile.
C: Awesome, thank you. Yeah I’m a slow visual learner. But I’m having a great time learning it. I’ll check out freecodecamp.
C: A lot of it is giving you the frame work and the knowledge to ask the right questions. If you don’t know those questions you will know where to look and how to find it.
C: I recommend codecademy to everyone that wants to start. It'll be a decent jumping off point. Personally, the SoloLearn apps taught me a lot and are surprisingly good. I've heard good things about FreeCodeBootcamp as well. Everytime you learn something new, do a project. Maybe you have one large idea, so break it into smaller things on what you need to do to make the bigger piece. Then figure out what you need to do and learn for those smaller pieces. Keep breaking it down until you have a decent idea of what you need to learn and do, and then go and learn and do it. Don't feel like you can't google stuff while programming. I've been working with Python for 6 years and do open source stuff with it all the time, but I still catch myself googling basic stuff that slips my mind when I'm thinking at a million miles a minute. Just jump in head first and have fun! You got this!
C: What we be a good way to stay noticed and having fun with it, because it can get very frustrating very fast. And being new, those frustrations are prevailing over the rewards at the moment.
P: I made an infinite while loop, how can i get out of it?
C: When desired effect of the loop is reached, variable “menu” should change to false and that will finish while loop
C: I am curious, 1. why a loop with a switch? and 2. why is menu not set to false at time of break?
C: Your Last case is not supposed to be case. it needs the end of the loop to be as followed default: cout << "Goodbye"; menu = false; break;
C: its not letting me choose any cases and just infinitly runs the menu function, so i cant reach the desired effect
C: So for my cs course for uni we have to create a c++ console app, i decided to make a food nutrition sorta app, and after login/sign up is done the entire app will be the menu but you choose options to from the menu to use the app, the menu, once a user is done with an option, they will want to choose something from the menu again, and they may want to do this an "infinite" number of times so the menu must meet that user requirement and be available an indefinite number of times until the user is done with the app
C: This is not true at all. You dont need a default section unless there are possible values not handled by a case. If you have a 'case' for each situation default will never occur. You also dont need the bottom case (whether specific or default) to break since there is no more cases below.
C: Oh, so I think if statement should be more suitable here, try “if(menu == true){menuFunction();}” Let me know if You got what You wanted *writing on my phone sorry for poor style
C: thx.
C: Yeah thats what i had originally, i guess ill just switch it back, thanks
C: If your menu is infinitely repeating it means you never set 'option' to 7 which is in the part of code you failed to show us. The problem is not with your switch, nor is there a problem with your while loop
P: What is this even asking ??? I downloaded an app for linux coding and stuff but i need help
C: When you create a socket server you `bind` the socket to a specific address. When you create a socket client you `connect` to an address. In both cases you create a socket using the `socket` function and close it using `close` or `closesocket` (windows only). Im not a native English speaker but I think the question uses poor wording and is talking about the server. In that case it would be the `connect` function which isn't used.
C: I don't know what it's asking but looking at this [link](https://www.cs.dartmouth.edu/~campbell/cs50/socketprogramming.html) I would say closesocket() is the answer
C: I believe it's asking on the clients side which function is not used. So the client connecting to the server will only do 3 of the 4 things. EDIT: After a little reading, Close() can be initiated from either end and is definitely used. The client and server have to have the same port for example, the client connecting to the server will type in the servers IP followed by a colon and a port number. For example 256.0.0.1:25565 Whether that's done in socket() or connect () I don't know. I also don't know what bind() does. I hope that helps you a little though.
C: I never see closesocket
C: What app are you using?
C: Depends on the language
C: I did exactly this in my networking class a couple years ago in C using Winsock 2.0. Assuming the question is meaning "client connecting to server" the answer is "bind()." That function is not used in such a connection.
C: I was thinking connect. But I've only ever fooled around in Java for networking stuff, and never had much of a head for it.
P: Can anyone explain?
C: count = 0 i = 0 while i <= 100: if i % 2 == 0: count += 1 i += 1 print(count)
C: I guess that I:2=0 is actually mod 2, so for every time I is even, Count increases. So The final print Count should display 50
C: I believe it’s adding 1 to Count if I is divisible by 2. If not it adds 1 to I. Once I is greater than or equal to 100 it will print the value of Count and end the program. If I:2 = 0 isn’t a mod function then I’m wrong.
C: Please Add A Flair To Your Post! Suggested Flair: `[Random] or [Meta]` &nbsp; ***** To add a flair: + Click `flair` underneath your post + Select a flair + Click `save` &nbsp; ***** *^I ^am ^a ^bot ^run ^by ^[\/u\/SupremeDesigner](https://www.reddit.com/user/SupremeDesigner) ^for ^/r/CodingHelp ^|| ^This ^was ^an ^automated ^response*
C: Why is it on the bathroom stall door?
C: I=O
C: See what frustrates me is that I read it as I = O, since it’s too big to be a 0
C: That’s what I got from this as well
C: in that case we have either a data type error at i:2=0 or an infinite loop, which leads to a memory error
P: I am struggling to make a chart that updates based off of button clicks from a simple game
C: var win = parseInt(localStorage.getItem(“winTotal”)) || 0; Also do this for your “loss” and “tie” variables instead of var win = 0; var ... = 0; You’re never retrieving the saved value, thus you’re always setting each value to 0 even if there’s a pre-existing number saved. (also need two equal signs in your if statements) // Assumes var 'result' is set globally function graphIt() { var win = parseInt(localStorage.getItem("winTotal")) || 0; var loss = parseInt(localStorage.getItem("lossTotal")) || 0; var tie = parseInt(localStorage.getItem("tieTotal")) || 0; if (result == "You") { win++; } else if (result == "The Computer") { loss++; } else { tie++; } localStorage.setItem("winTotal", win); localStorage.setItem("lossTotal", loss); localStorage.setItem("tieTotal", tie); location.href = "lab6graph.html"; }
C: Im sorry for making a post like this but reddit is so bad for posting code. I made a rock paper and scissors game that pits you choice against a randomly generated selection by "the computer". The game works fine but the graph that I made does not update beyond 1 tally in the win section, disregarding whether or not that first game played is a win by the player. In my head, this code should take the result variable and see if that variable is one of the three responses that the variable is allowed to be, which is You, The Computer or a default to act as a tie. Once this is done win, loss or tie will go up by +1. Do this multiple times and the graph is created. But I cannot figure out how or why my chart does not update.
C: function graphIt(){ if (result = "You") { win++; } if (result = "The Computer") {loss++; } if (result = "No One")tie++ location.href = "lab6graph.html"; var win = parseInt(localStorage.getItem("winTotal")) || 0; var loss = parseInt(localStorage.getItem("lossTotal")) || 0; var tie = parseInt(localStorage.getItem("tieTotal")) || 0; } This is what the new code looks like and it does now register a tally for each category but beyond that nothing has changed. No errors to really work off of.
C: Put the `var win = parsetInt(...)` at the top of your function in-place of where you have `var win = 0;` in the screenshot of your post.
C: Also, where you have `if (result = "You")` `if (result = "The Computer")` `if (result = "No One")` You need to use two `==` not just 1 `=` &#x200B; (assuming the variable result is set globally)
C: updated my original response
C: Ive moved it around and it changes nothing. The tallies for the three categories still wont move beyond 1.
C: https://photos.google.com/search/_tra_/photo/AF1QipMm7OAfYawBS-NgorJ0nO3vfRJTXuyiUzxr6V6s i dont know if this link works but this is the js I have for the whole "game". None of the fixes change anything so the only thing I can think of is that var result is the wrong thing to work with or the js for the graph page is off but nothing in it is out of the ordinairy.
P: Springer releases 50 Programming books for free: Intro to Python, Data Science, AI, Machine Learning, Deep Learning, Computer Forensics
C: Some really great resources there. Go grab 'em while they are up - all open PDFs and EPUBs, and with chapters broken into individual PDFs, which may help when studing.
C: Please Add A Flair To Your Post! Suggested Flair: `[Random] or [Meta]` &nbsp; ***** To add a flair: + Click `flair` underneath your post + Select a flair + Click `save` &nbsp; ***** *^I ^am ^a ^bot ^run ^by ^[\/u\/SupremeDesigner](https://www.reddit.com/user/SupremeDesigner) ^for ^/r/CodingHelp ^|| ^This ^was ^an ^automated ^response*
P: Pygame, Jump not working, Multiple Presses of space needed
C: Your jump logic is inside the pygame event so it only fires when an event happens. Thats why it takes multiple spacebar presses to complete the jump. I think you have indented lines 102 to 111 one tab too much. Try moving lines 102 to 111 out of the "for event" loop.
C: I was using this tutorial: [https://www.geeksforgeeks.org/python-making-an-object-jump-in-pygame/](https://www.geeksforgeeks.org/python-making-an-object-jump-in-pygame/) And my code is: [https://replit.com/@Milan\_Esau/Jumping-Block-Game#main.py](https://replit.com/@Milan_Esau/Jumping-Block-Game#main.py)
C: Not a professional but I tried to do pong from a tutorial in Godot. Check if the something like "spacebar_pressed_once" or something, not the best explanation and I'm not good at all at coding but something similar happened to me too.
C: Looking for help to increase jump height
C: nice
C: This worked, thankyou so much!!!
C: If I wanted to mak it jump higher how would I do that?
C: Try changing vel and mass to see how that to a larger and smaller values to see how that effects the jumping. Remember if you change vel or mass you need to match the change on the lines when you reset the value.
P: How can websites track you when you switch tabs?
C: They can detect when nothing on the page has "focus" anymore. Your browser literally fires an event for "window blur" which means that the current window has lost focus. It's kind of primitive, as it can be triggered if Windows pops an alert up in front of your face, your antivirus wants to be renewed, etc. You can mostly work around this by opening the test on a browser running in a virtual machine. You can leave the virtual machine and use the host machine's browser without triggering window blur on the vm ... depending on the vm and how it's configured.
C: because javascript runs on the client [https://stackoverflow.com/questions/10338704/javascript-to-detect-if-user-changes-tab](https://stackoverflow.com/questions/10338704/javascript-to-detect-if-user-changes-tab)
C: Good explanation
C: This is how some video streaming services stop loading when you’re not on the tab. It’s all to monetize on the ads they show
P: What is a good IDE for C#, C++, C for a beginner with no knowledge of coding? [similar to eclipse]
C: I made a mistake in the beginning and thought programming was all about the tools you can use or the programming languages you know. However it really comes down to your soft skills like problem solving, people skills, perseverance, and ability to learn. I would 100% recommend staying with Java since it seems to be the language the that supports your interests the most (minecraft mods). I know it seems tempting to learn another language, but you really don’t need to at the moment. There is a monumental amount of stuff Java can do that I’m sure you haven’t done already. C++ tops that by only 1% extra ability (low level memory access, e.c.t) and maybe faster compile time / execution. C# is basically the same thing as Java except with a few little twists and turns. And C is the same as C++ but just more stuff to think about. I’m not dissing any of these languages at all, you will still progress profoundly if you learn any of these. I’m just trying to recommend the most fun and enjoyable language / path you might want to go down. Don’t think you need to learn C++ because it’s perceived to be powerful or whatever, the difference of execution and compile time is unneeded in your case. Remember: It’s not about the language, it’s about the programmer. P.S: I’m experienced in Java and have dabbled in minecraft plugin development. Feel free to PM me if you have any questions.
C: First off, don't learn multiple languages at once. You'll grip the fundamentals much faster if you're just focusing on one language. If you ignore my advice I use visual studio code with the c/cpp extensions, if I code in vim I just use GCC not sure if another one exists.
C: Answer Q#1: Use Visual Studio with extensions Answer Q#2: You should have general idea about programming languages. Read this [article](https://www.computerscience.org/resources/computer-programming-languages/). After knowing languages are for what, I think you should start with [tutorialspoint](https://www.tutorialspoint.com/index.htm) to learn languages.
C: I suggest use Visual Studio Code. It's a text editor with extensions capable of making it like an IDE. Just use different compilers for whatever language you are using. After Java, learn C++, Python, Go. The thing is that once you're familiar with all programming stuff( Object Orientated Programming, polymorphism etc...) you'll be able to get things done in any language as far as you know the syntax. Yes, there are some language specifics with all languages that'll be different, but the borderline idea is the same. You could try to learn the basic concepts of Java( what a class is, what an object is, etc...), learn how to implement them. After that, practice on online coding platforms like Hackerrank, TopCoder, Codeforces, etc... Don't get upset if you can't figure out how to do something ( Most software engineers have a problem figuring things out, you're still a 14 year old). Solving problems on such online sites would require you to convert your thoughts into code. After gaining fair bit of confidence, try to do some projects. Maybe even make some Minecraft mods.
C: Personally I hate eclipse with every atom of my existence it should not exist, bluej is good for learning Java
C: Code blocks has been the easiest to pick up and use for me. And I’m mostly in the same boat. Aside from some programming courses in college and some other assorted pieces of knowledge, I’m as new to this as you. There’s a C++ tutorial on YouTube from freecodecamp by this guy from Giraffe academy. It is a pretty decent intro to the language and covers how to set up the IDE at the beginning.
C: I would recommend learning C first. Honestly if you’re looking to learn C it might really help to learn to manually compile your code with GCC before using an ide. If you are running windows I would suggest installing the Linux subsystem for windows, familiarize yourself with basic terminal commands and usage, learn how to compile a hello world program from the terminal with GCC, and then start learning C from the ground up. Start with variables, expressions, functions, etc. then learn how memory is managed on the computer as understanding the basic physical properties of the computer is almost essential in C. Then I would start learning more in depth about arrays, pointers, structs, etc. C can be a sharp learning curve for a beginner, but if you’re motivated to learn you can definitely do it. If you want any more help I’d be happy to help. I’m a TA at my university and I actually help teach the intro to C course, so I could definitely help show you how to get started. Feel free to DM me for more info
C: Thanks for the advice :) I'll try what you suggested :) Thank you :)
C: Thanks for this. I'm just gonna install them and when I'm done with JAVA I'll go to C# next. Thanks again :)
C: You got downvoted, but you're 100% right.
P: brand new to coding sorry if dumb question, i have the stuff between the <div> elements and im trying to get the turqois background behind the picture and words, why wont it appear?
C: .div in the CSS means a class of div. Remove the period before div to mean DIV elements.
C: It looks like ur end `/body` tag is before your end `/div` tag. It's not the cause of this problem but it might cause a different one. EDIT: You have an extra `/body` tag, that's the one before the closing div.
C: On your main div you need to add your class <div class="div"> and get rid of the extra /body tag in the middle of your page... Thats one of the last tags you use /body /html
C: Aah, welcome to the joys of css. You'll learn to love it.
C: thanks
C: Can you explain to me what css and html is?
C: CSS is your styles, the text in the middle panel. HTML is the panel on the left, the structure of the page. Simply put, HTML is what goes on the page, CSS is what the page looks like.
C: Ok thanks
C: And the two together make headaches!... sorry, I mean Magic!
P: I finished the C++ on CodeAcademy, and I was wondering what i can use C++ for?
C: Everything
C: I would say - Take some time, think and write down a few real world problems you face in your daily life. Start with very simple things - like a reminder application or a simple Todo list application. Note down your requirements. Try to identify the programming tasks you have to build the application. Are you creating a console application? Or the one with a UI? How do you take your inputs? How do you receive your outputs? What would be the best way to implement it? Can you use any open-source libraries? Identify the data structures which you need to implement and think of the logic. Try to code it yourself. Understanding theory is very different from applying it to practice. You may get blocked even from the start. Google your issues, search in stack overflow, post a query in Reddit/Quora if you're still blocked, refer your notes and find out answers to all your questions. Once you get your simple application done, you will have learned a bunch of knowledge. Happy coding!
C: It really depends on your line of work and what you want to do with c++. These days with things like QT, there's not much you can't do with c++ if you want to. Even its area of expertise is vast that it truly boils down to what you would like to do with it yourself. For practice, you can look into ACM websites like codeforces or uva onlinejudge.
C: The first thing i did was an encrypting program and a program that stores names in files + other information and you can like view it and edit it.
C: You can get some inspirations from here https://github.com/danistefanovic/build-your-own-x Just search for c++.
C: Using C++ for video game programming is pretty common. (Iirc, Unity can be either C++ or C#? They're fairly similar.)
C: Even making an AI
C: Yes, it'll be harder than doing so in Pyhton (which specialized in that field), but; yes, you can make AIs in C++. As the comment said, with C++ you can do pretty much everything - of course, limitations in skill exist, and the language doesn't specialize in anything, so certain things will be easier in other languages.
C: Ok thanks, do you have any tutorials on coding an ai in c++
C: Sadly none readily available, YouTube and Google are great resources for finding such things though!
P: Hi, I am trying to be an robotic engineer and I don’t know where to start on coding, can anyone help me with it.
C: [https://www.learncpp.com/](https://www.learncpp.com/) This is a good intro to C++.
C: An arduino and C++ would probably be a good start if you’re into robotics. There’s lots of cool tutorials and projects online, and can even get started free with the Arduino IDE
C: Be aware that C++ is tough for a beginner, especially your age. (I also started around that age with C++ as my first language.) To really grasp several concepts, I would first try some easier language that isn't so low level. - Usually I recommend Python so you can practice thinking like a programmer on a higher level. The games Human Resource Machine or 7 Billion Humans are also good for absolute beginners. After you got the basics down and wrote some programs, you can start looking into something more low level like C or C++. (Might take some months or years.) Those languages have harder to thoroughly understand language features and notoriously bad compiler messages which make them very frustrating for beginners. If you want to go into robotics you should also take a look at Arduino or Raspberry Pi after a couple of months of doing C/C++ and some input and actuator units for those. Maybe even PLC programming. (You should rather focus on microprocessors for the first few years though.)
C: I see many people advising you to learn Python as opposed to C++. While Python is really easy, learning C++ is definitely better for your use case. After you have a fair grasp of C++, you'll ace other languages. I encourage you to learn C++. It's not an easy task, but you'll get through it. There's a ton of material out there for C++. I suggest you start from this https://m.youtube.com/watch?v=vLnPwxZdW4Y. After this, solve some problems in C++ over here https://www.hackerrank.com/domains/cpp. After this, I believe you'll be able to understand many things about programming. Time to learn mathematics. Start by this, https://www.3blue1brown.com/. Learn linear algebra, vector calculus, differential equations. If you really want to go in the robotics field, this is extremely important. After you've done all of this, start learning about self driving cars from here. https://www.udacity.com/course/intro-to-self-driving-cars--nd113. Don't feel intimidated by this. I was 20 when I learnt all this stuff. You're 13. Do this at your pace. All of this is basically the software side of robotics. You still have to learn about the hardware side. Khan academy has an electrical engineering course. That would be a good starting point. I know I'm crazy that I'm suggesting a 13 year old to do things that engineering students do. But it is what it is. You'll eventually have to do this. So why not start now!
C: Thank you!!
C: Ok thank you I will try out arduino IDE
C: Thank you so much for the advise I will try to start with python!
C: Okay will do, thank you!!
C: I second this. C++ is really tough for a beginner. I learned Java when I was around your age and then Python and I’m happy with where it took me but others here will definitely disagree about learning java first
C: I agree with /u/narcissistPenguin. While C++ is not easy, it is better fit for purpose. If you already know that you want a career in robotic engineering, C++ will give you a head start.
P: 8 Mistakes Every beginner programmer makes
C: lol, I'm always trying to install all of these things into new devs just from experience, but not seen them listed together like this. Clue for number 1: if the desk is devoid of paper, there likely hasn't been any planning.
C: feels like #8 contradicts some of the others? &#x200B; Honestly my biggest problem jumping from simple programs to larger more complex ones was that i sat down to plan them out and couldnt decide what worked best. Sometimes you just have to write stuff and worry about how everything should work together later.
C: Please Add A Flair To Your Post! Suggested Flair: `[Random] or [Meta]` &nbsp; ***** To add a flair: + Click `flair` underneath your post + Select a flair + Click `save` &nbsp; ***** *^I ^am ^a ^bot ^run ^by ^[\/u\/SupremeDesigner](https://www.reddit.com/user/SupremeDesigner) ^for ^/r/CodingHelp ^|| ^This ^was ^an ^automated ^response*
C: this is great advice! edit* a typo
C: Refactoring is a thing. Depending on your development approach, sometimes the first thing you do is get the code to function and refactor when the time comes. Everyone should strive to find the simplest solution, but sometimes that doesn't come on the first iteration.
C: yes ... i agree
P: I want to start coding games.
C: I don’t think that learning python first is a good idea. What is the purpose of learning it if you want to create your own games? C++ is a powerful and a great choice for this career path. Start learning C++ and coding concepts and then you won’t waste your time learning some low-level stuff after Python.
C: As far as coding games go, c++ is great for making efficient and fast games. However, it is definitely not as easy as using a game engine like Unreal or Unity. Most game companies use a game engine to make games because there are more pre-made tools to make it easier. Learning a programming language is still recommended for scripting (coding behaviors for objects in games), as c++ is used for Unreal engine and c# is used for Unity. In short, I recommend you to look up Unreal Engine and Unity to determine whether you would rather code your games from scratch or use an engine.
C: The better language is the one you feel better using. Personally I'll take C++ over python any day and over C# too. But thats because it mechanically fits how I imagine program flow better. I've used Python in game modding enough to know I actively dislike it. You should also make your decision based on experience in both languages. The best thing would be to first make a 'hello world' in each. Then something like tic tac toe and an Asteroids or Space Invaders clone with each. There are plenty of tutorials on youtube for each of those in nearly every coding language. That would give you enough experience to decide which is more enjoyable to work with **for you**.
C: Unless you want to get a job in the industry I think you should learn C# and look into a game engine for example Unity. C++ costs a lot more than it tastes. I would recommend Complete C# Unity Game Developer by GameDev.tv on Udemy. They have one for 2D and one for 3D and they cover all the basics in both C# and Unity.
C: > once Python is not enough for me Realistically, this will never really happen. You're probably not going to develop a AAA-like game that will need to squeeze every bit of performance it can. You can use any language you want to make games, like Java, C#, JavaScript, or Python, and it'll probably be enough.
C: Thanks I already thought so :)
C: C++ is kinda a weird language and it requires more knowledge about the computer than i think a beginner would have. I'd suggest C# and Unity probably to learn first
C: Oh nice thanks, I'm going to look that up
C: Thanks I'll definitely take a look on game engines
C: I fully agree... Go with C++ and learn to work with Unreal Engine to start. Fortnite runs on Unreal Engine 4 Heres a C++ starter: https://docs.unrealengine.com/en-US/ProgrammingAndScripting/ProgrammingWithCPP/IntroductionToCPP/index.html
P: I'm a sailor trying to save our local business by learning how to code in Python - can anyone help me out? #python #webscraping #localbusinesses
C: Checkout https://scrapy.org its a Python web scraper that you can probably easily mod to do exactly what you want and is open source.
C: For a complex site like google maps you will likely need to use a web driver such as “selenium”. Using something like beautiful soup or scrapy probably only get you the initial html and not the information that is dynamically loaded after the html is delivered. Using selenium, you can navigate the web page as if you where clicking around on it and waiting for things to load before clicking on more things. It is a tool commonly used for scraping and automated testing of websites. If you have money to spend I know that google has a good api you can use and it would probably cost you about 20$.
C: Raw scraping is not going to be a good experience. If the data you want is available in those google search pop out sidebars, then you want to get at them through an API. Or alternatively use the structured data on the site. https://developers.google.com/search/docs/data-types/local-business
C: https://docs.microsoft.com/en-us/azure/cognitive-services/bing-local-business-search/quickstarts/local-search-python-quickstart
P: HELP when i try to enter playmode i am impended by this text message "all compiler errors have to be fixed before you can enter playmode" i dunno what to do
C: It says that you have to fix all your mistakes first before you can start playing. For example, the method is called "GetKeyDown", not "getkeydown", the capitalization is important. If you click on the "Console" (next to Project) tab at the bottom, it will show you what the mistakes are.
C: have been following this tutorial [https://www.youtube.com/watch?v=nlFbKkoyJIs&ab\_channel=Clipper](https://www.youtube.com/watch?v=nlFbKkoyJIs&ab_channel=Clipper)
C: Looks like you're missing IntelliSense (the autocomplete), and I don't blame you because sometimes it's a pain in the butt to set up. I recommend getting the C# extension and the Unity debugging extension. That will usually get you set up with the auto complete. If that doesn't work, then good luck figuring out which of the many issues is your issue.
C: well shit... i didn't know that thanks\] really really thank you
C: is there a addon that completes the words for me ?
C: Also don't forget your semi-colons ";" at the end of lines 18 and 23.
C: I see that you are using Visual Studio Code, in which case you should be able to use "code completion". Or ["IntelliSense"](https://code.visualstudio.com/docs/editor/intellisense) as it's called in Visual Studio Code. Google it if you don't have it.
C: any of them will work or i need a specific for c# ?
C: thank you. thank you, SO MUCH
C: You'll need a specific one for c# afaik.
P: Can someone help me fix the error?
C: You need a space between `def` and `__init__`.
C: Dunder init blunder
C: Make sure there are 2 underscores before and after init.
C: I did this and now there is a red line under “self.answer = answer
C: Agreed, need that space. What is the error you get when you make that change?
C: It just says invalid syntax
C: Are those double underscores or single? If single, try double.
C: Double underscores under what?
C: For your init function. \_init\_ vs \_\_init\_\_ Also check the spelling/capitalization on your import. Questionclass vs QuestionClass
C: Because of reddit markdown, your "inits" have various styling, not underscores. Escape the underscores with "\\" to make them not format the word.
P: Why OOP is loosing its charm?
C: In addition to the things listed by others, you have to consider your source. Much of the most active people in online dev communities are in front-end centered space, and OOP isn't something that they use much. It's easy to see something as defunct when you don't use it everyday. There is a whole other group of developers (I'd argue they are possibly the largest group) that shows up to work from 8-5, does their work and goes home without focusing on the online dev communities. Many/most of those people are working in large companies with things like Java. These things also aren't greatly exciting so there isn't as much media about it. New languages and framework get a lot of excitement and that means that you see more about them. Just last year everyone went crazy about DENO being the new NODE replacement, and now I haven't seen it mentioned since then.
C: Pure OOP can be unnecessarily convoluted. There are plenty of examples where the “pure OOP” solution is much much much more complicated than it can be. Somewhat ironically, I think a lot of homework and examples taught in school are much much easier with Functional programming. Imo OOP will still be really dominant for a long time. It makes a lot of sense for business logic and coding.
C: OOP gets accused of being pro-mutation. Mutation is definitely bad if you want concurrent code, but I think you could argue if it's necessary for the spirit of OOP. OOP is also associated with nominal typing, which means incompatibility-by-default in some situations where we don't want that. Finally OOP is associated with the use of inheritance. Inheritance creates inflexibility when the language doesn't support multiple inheritance. Even when you have multiple inheritance, it violates the Liskov Substitution principle.
C: I expect you will get a fair amount of opinionated answers here, so I don't want to go into details about OOP vs other paradigms. Instead I recommend you watch [this presentation](https://www.infoq.com/presentations/Simple-Made-Easy/) by Rich Hickey, the creator of Clojure, which gives you an overview of the problems that made people fall out of love with OOP.
C: OOP isn't losing its charm, and it's not going anywhere. It's still very much the present and the future. All the most most popular higher level languages are either purely OOP (Java, C#, etc), or support and utilize OOP as its primary paradigm (C++, PHP etc.). I'm not sure what you're reading, but likely it's just pointing out OOP's shortcomings. All paradigms have shortcomings and this is just noisy chatter. The fact is, the most popular thing in any context always has critics. If in some alternate reality functional programming was dominant, then people would be talking about that more often. In fact, though functional programming isn't as widely used, it's still criticized. That's just the curl of the burl.
C: Thanks 🙏🏻
C: Thanks man “Change is the only thing that that doesn’t change”
C: https://link.medium.com/XzMqHTFradb
C: i assumed at the start it was going to end up with functional evangelism and was not surprised. Im surprised that the author things OOP is prone to becoming spaghetti code. I work with some fairly large code bases (even just the Synfony suite is large) and I think it's very well built and organized. If you want to see spaghetti code, take a look at an average website's JS, which is a functional language. Or look at old web scripting before PHP took an OO turn. I stand by my original points. OOP isn't going anywhere and it's not perfect so there are things to complain about.
P: Someone who knows nothing about coding trying to use github...
C: TLDR I can only help upto connecting the remarkable to the computer First check if you have git installed. Type `git --version` and see it shows the version of git. If you don't have git you have to install it. Type `sudo apt install git-all`, you may have to type your password if prompted. Now repeat step 1 to see if it's installed. Now clone the repo, `git clone http://github.com/evidlo/remarkable_news && cd remarkable_news` Next you will need to ssh into your remarkable. I don't have a one so did some research. First make sure it's connected to your wifi. Then you will need to find its IP address. Here is what the website says, > In order to find the IP addresses, select the "Copyrights and licenses" tab. The IP addresses are found in the bottom right corner." On your computer type `ssh root@ip`. It will prompt you for your remarkable password. After that what every you type in will be sent to the remarkable. From here I am not sure. Check if their are any videos or tutorials of people loading things into their device. That's as far as I can help.
C: that's really helpful! thank you!!!! once I have the remarkable connected so that everything I type goes there, do I need to re-enter the code that I was given so that it goes to the remarkable?
C: As I said previously, I am not sure from this part. Your guess is as good as mine. I recommend to do some research and find how other people installed things on the remarkable.
C: I would guess git clone http://github.com/evidlo/remarkable_news && cd remarkable_news make download_prebuilt make install_nyt Are the actual commands once you are on the device
P: Is there anywhere I can see good examples of coding portfolios?
C: Too much stuff? Really? Like not just some small exercises from your courses or something like that, but actual projects? A lot of CS students don't even bother having their own projects at all. (You can still include these kinds of exercises, much like you can link to your hackerrank or codewars account, but I would just select the significant stuff in this case and bundle all of that to one package.) Generally, even though I am neither American nor working in HR, I would guess that especially code examples that show decent coding style, documentation and knowledge about the respective language and in how to properly version your stuff should be a decent portfolio. Also some clever hacky snippets here and there maybe as long as you demonstrate with other examples that you can also write clean code. (Probably a good idea to categorize them and mention this in a short description, like a table of contents you give them together with your code.)
C: Pick the most significant or most challenging projects if you're unsure. I'd say tailor your portfolio to the job you're applying for as much as possible (ex. web dev job = lots of web projects). Always keep the projects that taught you the most in your portfolio, they're great talking points even if not directly related because they can show how you problem solve and learn.
P: where you find free good quality illustrations for your projects
C: Thanks for this !
P: I want to become a programmer or something along those lines, but the only aspect of it that i enjoy is game development. How do i get interested in the rest of the programming world?
C: You summed up my career choice. I'm currently a programmer, but not in any game development. I used to enjoy programming in general because of the following: I treated the program itself like a game (where you clear the game if you get the code to work as expected) Now its a given that no code will work on your first try if it is fairly complex. So it becomes like a race towards perfection. How quickly can I solve this issue and get closer to the endgame? Sadly, in truth, you gotta write code with all such pitfalls in mind and its less of a fun game for me now. Lately, it feels more like a world-building exercise where you build your own little world of code that can interact with the rest of the world's code. Hope that helps!
C: How can you know that the aspect you would be more interested in is game development if you have never worked in game development? Reality is that the domain/product you write is something you will care little when this will be your job. Game development is a broad field that encompasses a very large area of development skillsets. You think you're gonna enjoy tracking overflows in your codebase? Writing code in hellish languages like C++? Or writing finite state machines for player movement or AI? Or writing test tooling for your colleagues? Or audio decompression on the fly? Or udp communication protocols? Or debugging virtual machines? Or fighting 10+ years old legacy libraries without docs on a Playstation platform? Because, surprise, surprise, nothing of this sort of programming is specific to game development, games really are a sum of a huge and broad field of technologies of which basically none but probably rendering is specific to game development and even then it's a mixture between complex math and implementation details which will be hardly exciting. Moreover, in all of this, it's not like you're going to have a say in how games will work, or look like, this will be not in your hands. Seriously, whatever dev job you'd find in game development will be on a highly specific task to the point that the fact that a game is the end product will be almost unrelevant compared to: salary, working conditions, colleagues and many other factors. And working conditions in the game development industry are generally pure hell. Lower salaries than people maintaining wordpress websites, while working under huge pressures by both company and public.
C: You do not need to love your job, but you do need to not be miserable because of it. Unless you own your own business, you will be doing work that accomplishes someone else's goals. It's better to change your perspective from, "I need to do something that I love," to, "I need to feel fulfilled by feeling useful by understanding and growing my talents and using them to provide value in exchange for money." In my opinion, having a fulfilling job does not necessitate that you must love it. And I'd rather have a fulfilling job than a job that I simply love. I feel the best about myself in terms of my job when I realize that I'm a little bit better than expected at something in particular and then putting in the effort to realize that potential and surpass even my own expectations of what I can do and accomplish. Growing as a person in a multifaceted way is more important to me than loving my job. Leave your passions as hobbies. Sure, it can be wonderful if it works out that you do what you love and make money from it, but that is the exception to the rule. Take this all with a grain of salt because you haven't had a real job yet, so you have no idea what you will feel and think until you do. Your question isn't a programming one, it's a question about how you choose to live your life and you can only really know that by living it. Only you will know once you experience it.
C: I’m in the same boat. Senior in high school and fascinated by programming but it’s not something I can sit down and enjoy doing at all. It’s hard and mentally draining so it’s hard to do after class and hours of homework because it just feels like more studying. I really just think you’ll need to find an obsessive goal to put up with learning something like programming because it’s hard to learn all the aspects if it’s not applied regularly. Again, in the same boat, so I’m sure this is nothing new.
C: Never said i wanted to be a game developer. I am aware it's not gonna pay well unless i'm really fucking good at it and can work on the newest stuff. I just said i like to make simple games on my own and it's the only thing about coding that i ever got interested in.
C: i mean people do their careers by not doing what theyve done before
C: Even if you're actually very good at it, salaries are generally lower than most other programming sectors.
C: And many of them find out they hate their jobs or had no idea what the day to day routine would be.
C: In fact what i intended to say was that my intention wasn't to become a game dev since that type of job has way less opportunities. That's the whole point of my post.
C: most people have jobs not careers, and its lot better to learn and suffer through programming than to kill your back doing construction work and ur just in constant pain from 50+ years of age and youre broke. like you cant know what youre going to do if u start law , nor medicine nor any other profession cause the work youre doing when ur younger and when ur older and got seniority changes
P: How do I make myself code daily?
C: Motivation sometimes follows action: if you just sit down to do it (even when you don’t feel like it), you’ll find yourself almost magically wanting to do it. Set an easy to accomplish goal. Don’t tell yourself: I’m going to code all night. Tell yourself: I’m going to watch the next tutorial video in the series and see where that takes me. This is a good place to start. **Edit: thanks for additional outstanding advice and the gold u/ImPeachMint!
C: do random projects, watc youtube videos on things you wanna learn, like, how to topen apps with code or simulating keybored presses, and genural have fun
C: Coding podcasts, and videos. Put yourself in the world of coding and you will want to code. Make sure that you are working on a project that you find interesting. Good luck. You can do this!
C: Join us at Twitter for #100daysofcode, a challenge to code for 100 days in a row. There are thousands of people sharing what they've worked on each day over there. Sharing helps drive me a little more
C: https://www.youtube.com/watch?v=ZXsQAXx_ao0
C: https://www.codewars.com/ https://www.hackerrank.com/ Just look up programming katas for short/small code exercises.
C: I want to add to this: Look for things that annoy you or that you think can be better. - Have a repetitive task? Figure out how to streamline and automate it - Regularly forget your custom bash functions (I have a terrible memory)? Make a function that uses user-centric design to hard bake in a guaranteed way to pull your functions back up (mine is "myfunctions". I had even forgotten that I made that and one day I was sitting in front of bash and said "damn, I wish I wrote a function for this! Wait, I wonder if I did." And to my happy surprise, I had, and it pumped my custom functions out) - start digging with curiosity. Make up a project. Never learned python? Take a tutorial or work through a free course OR, my favorite, find someone else's code and rewrite it while thinking about what everything does. Debug it with break points or try to optimize it or write it in a different way - inspect a website or view it's source and try to understand how and why it works. Try to rebuild it yourself. Wget can be useful to make a mirror copy to work with (use with respect please). I once recreated PUMA's website because I wanted to understand their menus. - PLAY -- super important. This is how humans learn. We don't read a manual for our smart phone, we pick it up and play with it. I've been a coding hobbyist since the early 90s with my parent's HP 85 and early Windows and Mac PCs. Then I decided that remembering formulas for math class wasn't worth the mental space (I'm terrible at memorizing) and so I coded them such that they could take input in different ways and have menus (like Pythagorean theorem taking two legs or leg and hypotenuse, etc) &nbsp; **Edit:** a follow up To be completely candid: as a teen, I taught myself bash scripting because I noticed the repetitive nature of downloading porn pics and videos. It, amusingly, annoyed me. There MUST be a more efficient way. I figure out that wget was a perfect solution for this (I hear curl is good too, but I focused on the former). That script grew and evolved over years to become a magnificent web scraper that does so much more beyond downloading dirty pics. Nowadays I can use it to grab all sorts of docs, images, or whatever off websites and organize and relabel them just by running the script. This is similar to how I taught myself how to use graphic design software. A horny teen who wanted to touch up dirty pics. Now I use that software to make my company's logos and branding. I also taught myself about working with Apple system files when I had to fix my 2010 MacBook Pro crashing due to GPU issues inherent in that model. The crash would routinely ratfuck saved application state files and I would lose everything I had worked on. This is how I created a menu'ed script that created my own, more robust saved application state files and it can pull them back up too. It's OK however you start. It's just important that you do, because if you let the journey, the curiosity carry you along you will be surprised at where it takes you. A little every day over a long period of time adds up.
C: Thank you
C: Thank you!
C: Have any suggestions for coding podcasts? Javascript specifically
P: Can those be considered as Perlin Noise?
C: I wrote it's code in Python(from scratch). It doesn't use any libraries except matplotlib to display noise. I am not sure if what I have done was the correct implementation, but it worked anyways. So can that be considered as perlin noise? If not why?
C: So you can code noise now ?? Wow. (I am not a coder btw, only follow this sub cuz I go to a school for software engineering and what not)
C: It’s noise so yes you can consider it at Perlin noise ( I can send you mine wrote in C if you want I got the interpolation too with comment I think )
C: Its noise. Would have to painstakingly read through your code to see if its the EXACT formula perlin uses. If you got something subtly wrong it might still be 'good enough' or it might cause a problem. SO Now that you got some good experience implementing it yourself, throw it away and use an already written library for perlin noise so you can be sure of the quality
C: Perlin's algorithm is documented on how it was achieved. Noise != Perlin. Therefore just because you've created noise, it doesn't mean it is the same algorithm. So it's not safe to call your noise Perlin. While Perlin's algorithm is well known to create textures that we can find in nature, coding isn't about having a single answer to any situation. Perlin noise is costly to compute and often not recommended in real-time generation scenarios such as in a video game environment. There are also various alternatives to Perlin noise such as Fractal, Cubic, or Wavelet noise. It's possible your code is more similar to any of these others. If you're interested in noise, check out this older tutorial (written in C# for Unity) It gets into detail about octaves and frequency and some of the issues Perlin noise has and at least one alternative. https://catlikecoding.com/unity/tutorials/pseudorandom-noise/
C: Basically is not “noise” is just the name give to this algorithm I coherent unknown values created with a permutation table ( it’s with this you can have water effect or cloud in video game or animation movies !! ) the very first implementation you can see it’s from the first Tron movie
C: Whats wrong with me coding noise :D?
C: Well, I actually couldn't figure out how interpolation of Perlin Noise works so I calculated average pixel value for each gradient and interpolated it after upscaling 😳
C: Well kinda true but I tried to replicate Peelin's algorithm. It sorta worked tho, but not the same.
P: Hi! I’m new to coding and have a question. Why does the last line show up as bold when I preview it when I set it up to be just plain text.
C: didn't close your h4 tag near the end
C: 36 isn’t closed
C: 32 and 36 are not closed
C: and 26
C: I inspected the source and it said I used h4 when I didn’t
C: You have an unclosed `<h4>`.
C: What program is this that doesn't have any linting for unclosed tags?
C: How do I fix this?
C: Oh wait I got it! Thanks for the help :)
P: What constitutes being able to say that you 'know' a specific programming language?
C: You don't need to be 100% fluent, but you need to know enough to be able to know how to find out what you don't know
C: Been asking myself the same question, As im 100% stressing on the getting better in one language, Id say my goal is to solve a problem without googling/looking at notes. By problem, I mean a irl application of something. Let's say i want to filter a list of lists and flat map it to a specific type, I'd wanna be fluent enough to do that from memory rather than looking at notes/googling.
C: If you were to get hired for a company tomorrow, could you pull down their repo and read/understand a program written in that language? (or if i gave you an opensource python repo, could you read it and explain it to me?)
C: When you feel comfortable knowing syntax and workings of a language. The part after that is knowing the ecosystems of libraries and tools that are apart of the language and that you’re more concerned about how to pull other libraries in and use them.
C: That's a good point. I mean I've made 20 or so simple apps in Flutter (dart) and worked out through so so many hrs of googling and figuring problems out. So I guess maybe I could claim I know dart... but that's a really good way to say it
C: That's so true
C: Be careful with that mentality. I’ve seen amazing, smart, and fast developers still have to pause and google something real quick to remember. With your mentality I’d shape it so it’s more, if you have to google it, you aren’t teaching yourself while you’re googling. You’re looking up a quick syntax reminder and then good to go. I’m just trying to say don’t just measure yourself based on what you can pull out of your ass/memory.
C: That's a good way to understand it. Thanks
C: Agreed. It's much more important to understand how to solve the problem than the specifics. I think "knowing" a language is less about syntax and more about understanding how it does things and why. For example, take Javascript. The first step is obviously learning the syntax and some built-in methods but that's not "knowing" javascript. "Knowing" javascript to me would be being able to explain that while JS does have "classes" they're not really classes, they're objects linked to other objects via a prototype chain. And how that affects your solution
C: Thanks for the advice, I'm definitely not capable of memorizing things lol, what i meant was the same and just that have the basics in mind from practice.
P: Hi, I just started coding, and I can't stop getting this error message, does anyone know how to fix it?
C: Count the number of opening and closing brackets, make sure they match.
C: You have an unclosed paren.
C: I’m no genius but looks like somethings wrong on line 10
C: Extra opening parenthesis before math
C: Aka parenthesis
C: ^
C: no shit sherlock
C: Well I said I’m not genius
C: well im sorry if it sounded a little rude, wasn't targeting to hurt someone
C: Nah dw bout it wasn’t hurtful
P: When you guys are given a large project you don’t understand what do you do?
C: Breakdown your objetives according to your needs. Make sure you have a clear picture of the process flow and what are your possible inputs and outputs. Keep you code well organized and readable. Abuse creating files and folders. Name these appropriately.
C: I normally plan in java (weird ik), but most c++ programmers wont think much use of that. If it's console app, (guessing it's not if its a large project i dont tend to plan, but I'm kinda stupid that way lol. But would defo reccomending planning classes u need to create with a basic UML. One tip that always helps me with a project is to read the most complicated parts of the task, then I feel confident to start doing the basic structures I need to implement. if u dm me im happy to help :)
C: Break it down. It's very helpful for me if I just start. You usually begin doing the same things no matter what language or framework you're using, doing almost any project has the same first steps - be it organizing your classes, or filestructure, or defining simple getters and setters for objects. That's the beauty of OOP, everything is building blocks that you stack a bit like Lego bricks. It's usually good to have some concept of the finished product in the back of your mind, but just enough to avoid tunnel vision. The idea lends itself to breaking everything down into smaller tasks. When you get stuck, look away. Take a walk or watch an episode of something. Whatever. Just give yourself a chance to put it on a backbones before you make it worse by getting too stressed about it. If you're doing procedural work... well. My sympathies.
C: Start with stuff you do know how to do
C: I find breaking it down helps. Usually I'll open a paint.net project and write down what functions I'll need then break those down into what they need to do. From there you can write some pseudo code for how you want it to work before then writing that as actual code.
C: Then you ask for me to help.
C: This comes up in software development all the time. If a task is too big, you break it down to smaller pieces. If those pieces are too big, break it down again.
C: Like every body else has already said, Break it down into smaller pieces. You can't build a car without an engine, you can't build an engine without a camshaft, you can't build a camshaft without the weird off-center lobe things. Think of something this program will need to do, like produce a list of unique random numbers, and write a function that will do that. in the end, you might end up with unused functions, but that's no big deal.
C: u/chingu111 And test the smaller components independently along the way
C: Yh depends how much cpp knowledge he has, if it's just like a basic theme park simulator then yh plan your classes and constructs before even starting.
P: How would you implement a “dark mode” button on your website?
C: One way would be to set up separate classes that only control color. So when a button is pushed you add or remove these classes.
C: There is a chrome extension that will do [this](https://chrome.google.com/webstore/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh) for you. The creators made it open source; if you see how they can do it for any website, it should help you.
C: Maybe try [this tutorial](https://youtu.be/rXuHGLzSmSE), it'll probably help you! :)
C: The way I would do it: 1. Setup a `light` and `dark` mode css selector that contains css variables for your colour schemes. For example you'd probably have a `--primary-text-color`, `--primary-bg-color`, and so on in each of your light/dark css. 2. Ensure all your css uses the defined variables instead of hard-coded values for colours 3. Add a button that toggles the light/dark class on your `body` tag, and have everything below that use the variables.
C: You don't simply reverse everything, because of how shadows work with real objects. This is a great write up about how to think about building a dark theme: https://blog.superhuman.com/how-to-design-delightful-dark-themes-7b3da644ff1f Also, I've found this to be really useful to color palettes: https://material.io/design/color/dark-theme.html
C: If you have a super simple site you could do it like I did here: https://codepen.io/avidworks/pen/WNxNYKV It essentially just toggles a class that changes the background and text colors. You could get fancier and write the script to include local storage, etc.
C: Another redditor actually released their own CSS library called halfmoon that has a built in dark mode feature. I've never actually used it but it might be worth checking out. Edit: Here is the link https://www.gethalfmoon.com/docs/introduction/
C: I hadn't thought about this. I was thinking about changing css variables with javascript. Changing classes would be much easier I think.
C: That would be a no code way to do itbut I don't believe that's what OP is asking for. He/she wants to make a darkmode toggle or button for his / her site specifically. That would mean that he/she would need to actually do some coding instead of relying on a 3rd party extension. I would tend to agree that you could use an event handler to say onclick darkmodeOn() where it toggles all the default classes off and the darkmode classes on. Then just do the reverse for darkmodeOff() I personally use dark reader for everything.
C: I wasn’t suggesting to use a chrome extension, but rather he look at the open source code for how these people did it. The creators of this dark reader have made their code public.
P: How do I provide a working link from index_2.html to index.html?
C: href="../index.html"
C: Yes the relative path is exactly like shiba mentioned href="../index.html" , and also for cat img you should use an img tag like <img src="../Cat.jpg" alt="" /> happy coding :)
C: [https://www.w3schools.com/html/html\_links.asp](https://www.w3schools.com/html/html_links.asp) Focus on the part "Absolute URs vs. Relative URLs" If you want to go with absolute links... Let's say your website address is `https://www.ga_site.com` Then the path to index.html is `https://www.ga_site.com/index.html` (Depending on your web server, it might default to index.html so you could maybe omit that part, but it's better to be explicit.) The absolute path to the other page would then be `https://www.ga_site.com/dir1/index_2.html` For relative links, you build from where you're at. Since index.html is one directory above, you use the "../" prefix to indicate to go up to the parent directory. If you need to go up 2 directories, then "../../". The good think about relative is that you can develop on your home server, copy to a live server, and everything builds off from its new path.
C: Idk
C: Wow such incredible answer thank you!
P: What languages should I learn?
C: I went with Java for a bit but now I'm on c++. Caleb curry has an amazing c++ course on YouTube
C: Well the way i did it was, i started off with Javascript, HTML, CSS. Then learned NodeJs, ReactJs, and other frameworks. Then i built a few full stack projects to understand stuff like client-server architecture and database design/management. Then i moved onto Python and C#. Imo once you learn one language and the go through the process of developing a full app you realise that as long as you know how to read api references, documentation and where/how to scour the internet for information you can quickly grasp any language or framework. Always learn through building things, you will never master a language through tutorials or theoretical crap. We are engineers and engineers design, build, break, and build again.
C: What do you mean by “learnt next”? There should be no next, yet. You could spend 5 years learning only JavaScript and still not know it all. JS is such a hugely diverse language you could forge an amazing career out of just that, so don’t jump ship quite yet, spend some time with the language, get to a good level with it. Get comfortable with it. And only then consider a new language. Having an extremely strong base in one language will speed up your ability to learn other languages.
C: what do you wanna do with coding? what do you plan on making?
C: Many people have already answered good answers, but I'll give my take as well. Web programming although is important (and accessible), what you've described here is not actual web programming, as HTML and CSS aren't programming languages - they are markup languages for putting text in a different form. Try learning JS (javascript), as it is an actual programming language created for dynamic web pages. You can code games and actual mechanisms with it. I've had a small experience with it and had some fun. Also, read about frameworks like nodejs and react. (Please don't ask me about it as I have no idea, I coded something very small in nodejs and that sums up my experience.) Note: Java and JavaScript are completely different. Java is a high level programming language for programs and applications, while JavaScript is a language that is highly associated with dynamic websites. Don't mix the two up Personally I don't really like high level. I like C and python (which contradicts my previous statement, but it is for scripting, I am absolutely against writing actual big projects in python). I would advise you actually against learning python for a first language, because it is made a scripting language and has many weird properties. I learnt C# and it is fairly good (or learn Java it may be even better for its popularity and cross platform - although for some reason I dislike it more, maybe because I learnt it in my first Uni course and it left me scarred haha). OOP (object oriented programming) is cool but sometimes (or even most times) is unnecessary and overused, although when used correctly and efficiently - is good. Try to google some positive and negative opinions about OOP to understand it better. If you do show interest in low level I suggest learning C and assembler - albeit you would need some understanding about the inner workings of the computer, mainly RAM and CPU.I believe all should have at least a taste of low level as it is fairly underappreciated, so do yourself a favor and learn a bit of that. Visual studio code and visual studio itself are fairly nice, although Brackets seem fine and if it suits you - go for it. As for tutorials, thenewboston on youtube has some videos, I suggest starting there. Edit: added a part about OOP Edit2: emphasized difference between java and javascript
C: Java is not a popular web language. It definitely has its place in enterprise software, and there's money to be made, but it's a fraction of the webdev market. That said, it and C# are excellent languages to learn because they are 100% OOP and you are forced to learn some good practices. Python is great for data science, and there is a web framework, but it's not very popular despite a lot of people on Reddit talking about it (and the fact that Reddit is built on it). That said, Py will grow most likely, because it is quickly becoming the default first language people learn, and so will be familiar to people. But it's not there yet, we're talking a decade out probably. JavaScript is necessary for web development. Anything slightly complex uses JS, and you will eventually have to use it. That said, I don't recommend starting with it. It will not teach you standard object-oriented programming, which is the standard for the biggest languages on the web. Moreover, JS is really easy to write sloppy, and you will see lots of sloppy JS while you're learning. I say start with the server side and learn JS as you go along and as you need it. Server side means PHP. The biggest language on the web is PHP. Old PHP was not well designed, but PHP after PHP7 has become a great OOP language. If you learn this the *right* way, it will likely open the most doors for you. The right way means that you don't just learn a language, you learn how to program. Two areas of consideration, once you understand the basics of programming and CS, are data structures & algorithms, and object-oriented design patterns. You can google for courses on those subjects. Other random thoughts: 1. Don't ignore the tools. It's not just about programming, it's about the ecosystem. As a webdev you'll have a boost up if you can navigate git, gulp, webpack, docker, and composer. Also, don't use sublime text, brackets, etc. Use Phpstorm. It is easily the best and most powerful IDE for PHP. Jetbrains, the company that makes it, also makes PyCharm for python. 2. Don't pay for courses. There is more than enough free stuff out there. 3. Feel free to pick up a framework like Symfony/Laravel/etc, but don't confuse the framework for the language. If you're a framework monkey, you're going to have a tough time when something breaks and you don't have the coding skills to figure it out. 4. Don't ignore SQL. Too many devs do so at their peril. Not only is it important for webdev, you might also find that you like it, and there are a lot of high paying jobs in it.
C: Oh, I knew it's big and had a lot of uses but I never expected it to be this amount. Thank you and I will try and focus on it
C: Thank you for sharing your experience and advices
C: As it is said, there is no such thing to know all. I suggest that firstly you should decide what you want to do with programming. Any programming language goes deep as long as you go with it. i also started with HTML CSS and javacript and c#. But then i focus on Embedded programming and Now i am dealing with c/c++ mostly. A bottomless pit 😂
C: That goes for many languages really. I have been professionally developing in Golang for the past 5 years, and I still learn new things every day.
P: Have you ever felt this??
C: I have a brilliant idea. I can't believe no one has thought of this already This is going to take time I can do it if I just keep working on it I'll take a break this week Maybe it's not the best idea Why would anyone use this It'll never work but I have another brilliant idea
C: Don't forget somewhere along there "crying with joy after spending an ungodly amount of time trying to debug what should be a minor issue".
C: [Fixed](http://i.imgur.com/tOM4p14.png)
C: Currently in the dark night period lol thanks gave me a good chuckle.
C: So that's *ME* in the picture - @jonahlobe, game developer, author & illustrator - but everyone should know that Austin Kleon was the originator of this graph! (I just saw it painted on a cafe wall!) You can find it in his book "Steal Like an Artist". Buy!! Thanks everyone. And if you're somewhere on this graph... hang on!!
C: This is like every single project/website that I worked on :( . I thought that there is something wrong with me only :/
C: This is definitely me. Haha
C: This week it was when I realized I was running a system call in php with single quotes instead of double when passing a variable. I don't think I have ever had so much frustration lifted from me in my life.
C: Needs a third "Never open project again".
C: Maybe occasionally see project and get anxiety at the *thought* of reopening it? I have this with video projects; just guessing it applies here too!
P: Google: 53% of mobile users abandon sites that take longer than 3 seconds to load
C: Take imgur for example. They're trying to monetize by redirecting hotlinks to their **slow as death** webpage with ads. I don't even bother watching gifs anymore if they aren't gifvs from giphy. 15 seconds of loading in optimal conditions for a 5 second gif is bullshit. E: i meant gfycat not giphy. 53% of people don't even know the difference
C: Probably because they know if it hasn't loaded in 3 seconds it might not load at all
C: Actual source rather than the blogspam: https://www.doubleclickbygoogle.com/articles/mobile-speed-matters/
C: 20 years ago, when the World Wide Web was still pretty new, we understood that things were slow by necessity. We had 14kbps dialup, computers were like 233 MHz with 4MB of RAM, and a JPG would take a minute to load line by line. We knew, though, that all of these things would improve. Eventually pages would get faster. Computers faster, more RAM, faster internet. This will be a problem of the past. All along, however, there have been shit advertisers and inept web design that invalidated progress at every turn. Flash intros, pop ups, wiggling ads, page intros, pages that have to load all the ads before you can read the rest of the headline, infinite redirects, auto refresh, click bait, slide shows, you name it. The internet looks more and more like those ad saver books from the lobby of the grocery store that nobody picks up. Full of crappy ads that all the advertisers think people will somehow see and respond to favorably. Really, though, it's all geared toward the small percentage gullible enough to think there are hot singles nearby or a free iPad waiting for them. We have enough speed to download libraries at a time, and we can't get a simple news story to load.
C: Slow as death *and* it hijacks your back button
C: I miss imgur when the entire site was literally just an upload button.
C: I don't even look at pictures hosted on imgur unless it's a direct link
C: [deleted]
C: [deleted]
C: Has there been a tremendous upturn in that very recently? A lot of ad-supported sites have been doing this.
P: I made a site with 550+ Free open source fully customizable SVG icons.
C: Hi All, I made this actually for my own needs. Then yesterday it was featured on ProductHunt and ended #1 with more than 500 upvotes. You can: 1. customize size 2. customize color 3. change stroke 4. search by tags You can check it and download icons here: [Tabler Icons](https://tablericons.com/) Enjoy it guys.
C: Hi.. yes.. ummm... i love you
C: This is so cool! Any chance I'd be able to add it to my collection of web development tools on [https://thewebtoolbox.cc/](https://thewebtoolbox.cc/) ?
C: *Starts replacing fontawesome icons with this*
C: Hi what Is the licence of the icons :)
C: I love you too.
C: I would be more than happy to see it there.
C: I hope you'll :)
C: If you check out the github they indicate that it's MIT license, which is fantastic.
C: Exactly. MIT
P: How Spotify makes text on images readable
C: And they would have gotten away with it too, if it weren’t for you meddling kids and your “Dev Tools”.
C: In my day we didn’t have gradients. You filled a layer with white over an image and set the opacity to 0.85 and liked it.
C: Hey folks! Thought to share a little tip that a designer taught me, which has helped improved readability of text that's overlaid on images. Just apply a simple gradient using black, with about half opacity, up until the point that the text ends, and you will make the text much more readable. And if you want to have more fun, you can use different colored overlays
C: We can use before and after Pseudo-elements too .wrapper{ position:relative; z-index:1; } .wrapper::before{ content:''; position:absolute; background: linear-gradient(0deg, #00000038 30%, #ffffff44 100%); width:100%; height:100%; z-index:-1; left: 0; top: 0; } This code will work too.
C: In my day we used a 1px square translucent PNG and repeated
C: Nice tip!
C: [deleted]
C: GIF it was. Not your strange modern hocus-pocus.
C: In my day you baked the overlay into the image itself
C: Because the wrapper is position relative it creates a new stacking context, so it just pushes it behind the text. https://www.joshwcomeau.com/css/stacking-contexts/
P: fyi: You can bypass youtube ads by adding a dot after the domain
C: You're the MVP of the week, u/unicorn4sale Absolute gem of a tip, thank you.
C: Top Google engineers hate him because of this one little trick
C: Enjoy it while it lasts! Or don't rely on bugs, and just install an adblocker (I recommend uBlock Origin).
C: Can't wait to see this tip on various blogs in a week.
C: Unicorns being unicorns 🦄
C: Honestly, most of the engineers probably don't care.
C: You won't believe what Google Engineers don't care about!
C: User feedback?
C: No, I believe that.
C: Ouch
P: Animated login avatar
C: [deleted]
C: Genuinely laughed out loud when you got to the password box. Not sure how I'd feel if this were actually used in production. Feels like it could potentially be obnoxious, but I'm probably just gun-shy when it comes to web pages reacting to things they shouldn't.
C: Very similar to MetaMask (which has been around for a while). https://i.imgur.com/PMXMtHj.gifv You can't see my cursor but it follows it at the beginning.
C: How is svg generated? Seems difficult to know exact values to use.
C: if you go to the original post you will see that the OP posted the codepen in the comments section
C: I'd say it depends on the website, probably would be fitting for a gaming website or an online store that sells fun things. Don't think I'd want to see something like that when logging in to do my taxes or see my balance lol
C: Nah this bad boye just wants to steal your password.
C: “Meet Max the Tax Yeti! He’s gonna guide you through the whole tax process from start to finish. You’re gonna have to login first though, but don’t worry, Max won’t peek at your password!”
C: Honestly for someone who is scared of the internet (old people for example) I can see this as good.
C: Not even just that but there's still plenty of people who don't understand they shouldn't share their password, even with the service they use. Far too often I have customers send me their password, even when I explicitly tell them not to. Something like this cute little animation helps instill that "Even our fucking Yeti doesn't want to see your password." So maybe just maybe that will help them truly understand that their password is **theirs**.
P: The FCC is killing Net Neutrality - Help spread the word in your own websites
C: If anyone else is interested in contributing I started this project during the last NN scare, it's gone rather dormant since then https://github.com/panxzz/nn-blackout
C: sudo americactl restart
C: If net neutrality is eliminated, what does that mean for peoples' careers?
C: As a worried American, I’m really glad we’ve got people across the world aware of this insanity. It will quite literally change the way the entire *world* operates on the internet.
C: I just want to point out that net neutrality is only needed because government regulations protect ISPs. If you really want to ensure long-term internet freedom, you'll **fight for deregulation**, which will bring more competition. Hell, if we deregulated it enough we could even have "Mom n Pop" ISPs working together to give us the best internet we've ever had. Fixing government regulations with more government regulations typically doesn't help in the long term and the fact that the net neutrality protections are probably being rolled back now only proves that.
C: rm -f /dev/fcc
C: Stifled innovation, even more ISP monopoly than before, high risk of internet based startups failing as a mainstream competitor can bribe said ISP to deny its users access to your product. In general, not good.
C: Problem is that top government officials in America couldn't care about the insanities affecting people. FCC and Pai have somehow convinced the top bureaucrats that net neutrality is bad, and the government couldn't care less about the people's voice. And these small adverts on little known sites isn't even going to get noticed. Unless there is something like a candle light march or a Boston Tea Party in the making, its not enough to wake them from their deep slumber.
C: Yes and no, IMO. Either we need to go full on public utility (like water/sewer/electricity) or we need to go full deregulation and introduce more competition. I would prefer competition, but if that doesn't work because of how expensive it is to install cable lines then we should treat all ISPs like a natural monopoly and do to them what we've done to other natural monopolies: public utility.
C: If the porn providers of the internet went down for even one day I think that would have quite an impact.
P: I was tired of Triplebyte's ads making me feel bad for being unemployed. So when they misspelled their own URL, I redirected the misspelling to a site with a link to my Github account.
C: Great! You’ll get a job in no time with all those unemployed developers checking out your github.
C: I had an interview with Triplebyte a year ago. I am still fuming about it. I passed their 'test' and got to the via video call portion. I built something functional/to their spec in react. I stumbled a little here and there, but the CSS was 90% there and I got through \~80% of the functionality they required in an hour. I got a follow up email saying 'sorry, not good enough. Here is a link to W3 schools and the most basic intros to JS and CSS. Good luck and reach out to us again once you learn the basics. PS, if you know any qualified devs send them our way.' I showed what I built to my senior dev friends and asked if their assessment/recommendations made sense for what I did in an hour - they confirmed that no, I don't need to review what is a variable/array/how to set a background color in CSS.
C: This actually touches well on the moral dilemma of targeted ads, the shame/peer pressure effect, aka bullying.
C: If I were the job fairy I would give you a good one.
C: This is why I love IT That and half a byte being called a nibble
C: LOL. 😭
C: F'ers. Have my upvote.
C: You should have redirected it to your onlyfans instead.
C: Lmao. Hope you find something soon.
C: Support ( ͡° ͜ʖ ͡°)
P: They automatically took me off their email list b/c I hadn't visited the site in awhile. Nice 👍
C: It helps with deliverability. I send about a million emails a month on average for work and its better to prune inactive accounts than keep sending stuff rather isn't opened, archives, or worse marked as spam.
C: That's how it's done.
C: Exactly this. My company sends a stupid amount of emails per month--I have no clue how many, but I do know that one of our distribution lists 11 million. I think our open rate is in the low teens or even single-digit percentages (keeping in mind that these are from users who subscribed to these emails). Low open rates don't look good to our clients, so every once in a while we will run a "re-engagement" campaign to prune users from our lists and up our open rates.
C: [deleted]
C: How do you check opened or not?
C: [deleted]
C: Classic trick: you put an `<img>` in the email body, with the `src` pointing at a file hosted on your server. You track requests to that file. Email clients should only request the file once you open the email.
C: Confirmed. Source: I work at the confirmation department in this company and here is our source code: function confirmRemoval(customerEmail){ // Send confirmation email sendRemovalConfirmation(customerEmail); // Confirm that removal was successful if(confirmRemoval(customerEmail)){ return true; } else { // If not removed yet, remove email from mailing list return emailDB.removeCustomer(customerEmail); } }
C: Doesn't google mail and the likes now pre-cache images for safety reasons, making this not accurate?
C: > Using cached images is a fine idea for Gmail, but it has the potential to mess with open tracking for ESPs. Fortunately, MailChimp can still detect the first request for the open-tracking pixel. This won’t interfere with the count of “unique opens” you get in your reports, but it could prevent us from seeing multiple opens per subscriber. https://blog.mailchimp.com/how-gmails-image-caching-affects-open-tracking/
P: I accidentally created this 😂
C: Looks done to me. Time to push it to QA 👍
C: It's glorious
C: You spin me right round...
C: The submit button is clickable too 😂
C: NO TIME PUSH TO PROD
C: It is not a bug, it's feature.
C: Its called great design, look it up 💅
C: If you can catch it lol
C: git push -f origin master
C: I hate this and love it at the same time.
P: An animated loading icon I made for my side project mydevportfol.io. Supposed to convey that the app is coding the user a website. Happy with how it turned out, feedback appreciated though.
C: I'm just happy the coloured pairs all close correctly. Looks good!
C: This is great. I would do three things to add more polish: 1. Move it up incrementally rather than continuously (e.g line by line) 2. Don't start drawing the line at the bottom until it has been given enough space to be drawn 3. Rapidly fade out the line at the top rather than let it get cut off. The invisible cut off line that the text scrolls under is a *bit* jarring since it has the effect of making otherwise uniform line heights, thinner as it moves up. By fading them out, you keep all lines a consistent thickness. I know that the current behavior is how normal text scrolling works, but normally you see exactly where text is disappearing due to a clear bordered window, or the text scrolls up off the top of the monitor. This current text has no "window" that makes it clear where it's scrolling to, and it's in the middle of the page, so it looks a bit odd as is.
C: I really appreaciate that. Beautiful and simple. Could you write some post, to explain how did you do the animation effect?
C: what are the loading times of your app? unless the app is loading huge data and you expect 4-10 second load times, i might speed up the animation so that the user gets the gist of it in just a second or two... assuming that's the kind of load times your system has... otherwise vnice :)
C: /r/loadingicon
C: Haha yeah that would've made my eye twitch otherwise. Cheers.
C: ah I didn't notice that initially, nice touch OP :)
C: Damn this is good. I like everything you suggested. Gonna see what I can do when I get back to the laptop. Thanks a million!
C: Thanks. Yeah a post would be good actually, trying to blog more anyways. My attention for the moment is building out the app I built this for, but if I get a few hours I'll put something together and share.
C: it's an Angular 2 app working off a hobby dyno on Heroku. currently the app is about 0.5mb, so depending on the connection it can be a few seconds. Then within the app itself when the user wants to generate a site, the backend has to generate the html. At the moment it's fairly quick but I imagine if the server is getting decent traffic and the designs become more complex then times are likely to get slower. But yeah, relatively trivial to speed it up a tad, might do that. thanks
P: Stack overflow's new copy/paste limit
C: Forgot it was april fool's and my heart skipped a beat lmao. Was ready to start writing my resignation letter and begin looking at farmland to purchase.
C: It isn't April fools in my time zone yet so I was very confused
C: I remember this happening on another site for real. It was a learning site too.
C: I honestly got really upset.
C: I was having some issues with some CORS errors and I was very upset, this popup made me smile. Thanks StackOverflow
C: is there a farmoverflow.com?
C: I almost spit out my beer reading this.
C: I was ready to start writing a script to circumvent the limit lol
C: It totally got me... Not too proud to admit it
C: https://gardening.stackexchange.com/ i mean, a farm is just a really big garden, right?
P: New business cards came in
C: Excellent card if clients are web developers.
C: All fun and games until you have to maintain an old business card written in Angular :(
C: No use of definition list tags... what is this, a business card for fully sighted people?
C: Does anyone want to see Paul Allen's card?
C: We need more font ligatures!
C: Yeah when I see business cards like this, it’s like ... who is your target audience ?
C: Jesus Christ, Paul Owen's card is written in Svelte. Look at the theme. One Dark Pro. This code would render faster than my old Vue one. Oh my god, it even uses optional chaining
C: Aw man you butchered that line. Anyway, here's Paul Allen's card: https://codepen.io/johnslipper/pen/Fvlwi
C: I was originally going to use FiraCode but it made the code too long horizontally for the card.
C: Perfect for web dev conferences though!
P: I made the desktop music player I always wanted. A site to listen to your Soundcloud, Spotify, and Youtube playlists in one place!
C: Live @ [https://www.kord.app](https://www.kord.app) Repo @ [https://github.com/bundit/kord-app](https://github.com/bundit/kord-app) Built with React/Express/PSQL. Chromium & FF browsers supported. This is the biggest project that I've built and would love any feedback. Thanks for checking it out! **Edit: Looks like I've reached the user cap for youtube sign ups since my app isn't verified yet. Sorry guys! But also thank you very much.** Edit 2: App is google verified!
C: For someone that switches between youtube and Spotify when listening to music this is amazing! Nice work
C: This is dope
C: How did you build this? What languages and API’s were involved? How did you find the resources to build something like this?
C: Awesome job! Be careful if you ever try to monetize it though, UI is insanely close to the Spotify desktop app.
C: I've always wanted to build something like this, but there was a huge thing back in the day where a redditor created a Chrome Extension called Streamus - it was essentially a YouTube player that skipped over advertisements and hid the video; Google shut that shit down realllll fast whenever they updated their ToS to say videos cannot be hidden for musical listening (the advertisements have to be shown). So... how are you getting around this? Edit 1: Here's a long email chain between YouTube and the developer: https://i.imgur.com/15gaOf6.png Edit 2: I see the video in the bottom left for the YouTube video, but the question about the ads still remain. Thanks!
C: Thank you so much! I hope you find it useful
C: Built with React/Express/Postgresql. Oauth for authenticating with Spotify and YouTube. Then each specific API for getting user data from each different service. It all started with wanting to try making a soundcloud client, then wanting to expand that to other services. I wasn't even completely sure if I could do it but I just tried and solved each little step at a time. To be fair, I spent a lot of time working on this and tinkering with all of the APIs. I'd be happy to answer any other questions or specifics!
C: Thanks!! No plans to monetize currently. If I monetized I would have to drop Spotify support anyways or ask for their permission since I accepted their terms of conditions. I thought about adding a donation link if it gains traction though
C: How do you get the songs ? Like using spotify api, you can get my playlists, does it also return a link to play that song or something? Sorry I’m new to this and just curious to know how you get and play the songs?
P: Thought you guys would like this. Crazy what is the web to the develop the web dev community in google does
C: What the fuck is that title OP
C: Translation: “Thought you guys would like this. It’s crazy what the web dev team at Google has been able to create!” *shows Google Docs/Translate integration* While the integration may be good, looks like Google Translate failed him for this title. Heh.
C: Holy christ I thought I was having a stroke reading that title.
C: Wow. You could instantly translate a whole subtitle file and upload to YT.
C: You're telling me you never crazy what is the web to the develop the web dev community in google does?
C: I suspect it was translated with Google translate
C: fucking hell. I just spent an hour trying to debug a simple issue in python which i still cant fix(edit: fixed lol) and then I read that title. I'm like wtf am i just really stupid tonight?
C: [deleted]
C: =GOOGLETRANSLATE($title)
C: >=GOOGLETRANSLATE($title, "en", "gibberish")
P: Cute login form
C: Designer: This is adorable! Developer: Why are you like this? Client: Needs to work in instagram browser, and on netscape navigator. Project manager: I need it by end of day.
C: 🦉 Creator here! I made this years ago for my company ([ReadMe](https://readme.com)) years ago, before we launched. I'm a designer/engineer, and it just felt like a cute idea. [People loved it at the time!](https://littlebigdetails.com/post/101243507017/readme-the-owl-covers-her-eyes-while-you-type) His name is Owlbert, and there's [A LOT more of him now](https://owlbert.io)... this got so popular at the time, he became our mascot :) (If you want to do something similar, you can [see how the Yeti clone did it](https://codepen.io/dsenneff/pen/2d338b0adf97472ebc5d473cf1fa910b). My version is all images, so it's implemented a bit differently!)
C: [deleted]
C: I had the opposite of this once. I implemented a fun, pointless visual effect as part of a redesign, some confetti on a success page. I thought nobody would really care whether it's there or not. Few weeks later I got a call: hey qqqyqnz, the confetti isn't working anymore - could you take the time to fix it?
C: [deleted]
C: At the time when I built this, I was all of the above :) It was before I had an employees, and was doing all the engineering/design myself. But I didn't ever want that to stop, so I made "**Err on the side of whimsy:** Life is too short to not use puns and owl doodles everywhere" [our #1 company value](https://readme.com/handbook). (We're hiring if anyone wants to work somewhere like that!)
C: I am now a full blown fan of Owlbert. Thanks for providing some history and the codepen on how Yeti did it. Stay awesome web dev friend!!
C: Fun animations? On *my* website?
C: this is a great idea. Something fun and surprising. I'm going to use it for my site.
C: At this time qqqyqnz realised he made a mistake
P: I made a useless online instrument. Reddit, meet spaghetti audio.
C: I’m still not totally sure why spaghetti audio exists, but it’s been fun. I started this a while ago and, as usual, got sidetracked by non-spaghetti related stuff. I figured it’s time to wrap this monster up and share it with the world. [Code](https://github.com/woodwoerk/spaghetti-audio) [Demo](https://spaghettiaudio.vercel.app/) Edit: on mobile, pinch with two fingers to draw strings, and strum with one finger Edit edit: you lot are wonderful, and it makes me immensely happy to see others enjoying the random weird side of the web. Thanks to everyone who made suggestions, there are some great ideas that I definitely want to take forward. Contributions are welcome too! Oh and I bought the [spaghettiaudio.com](https://spaghettiaudio.com) domain... so now we’re “official”!
C: Just because you can doesn’t mean you should. But in this case I’m very glad you did!
C: This is cool as fuck LOL
C: What the fuck is this I like it
C: This is awesome. I was just reading an essay on the early web and realized how much I missed useless passion projects. I'm starting to think of things like this more along the lines of art than dev and it is no more, or less, useless than the paintings on my wall.
C: I knew my spaghetti code was goin somewhere!
C: I just spent 5 minutes playing with it... awesome!
C: this comment has made my day
C: Thanks for your comment, I totally agree! Functionally this thing useless, but it’s useless stuff like this that led me to love the web, and that hopefully inspires other people to create random wonderful uselessness too
P: Three of the most frequently used lines of CSS code which I type in a couple of seconds I guess
C: I can‘t imagine a life without flexbox anymore 😅😂
C: It's good, but it's no "border: 2px solid tomato"
C: make a nice mixin of it.
C: Could be two https://developer.mozilla.org/en-US/docs/Web/CSS/place-items Edit: This statement doesn't work with flex layout (since justify-items is ignored in that context), but a two line center-center layout can be achieved with grid: `display: grid; place-items: center;` ([source](https://youtu.be/qm0IfG1GyZU?t=127))
C: This is my goto when boss ask me to vertically center stuff
C: Same! Gives me appreciation for our older brethren who went through the dark times of the float era
C: 1px solid red gang
C: Wait, really?! Gosh, it's so cool, didn't know about this.
C: I started with the <table> era, then moved to float then flexbox, I feel old even tho I'm only 29.
C: Yes :) Learned about it from [this](https://www.youtube.com/watch?v=qm0IfG1GyZU) video, lot's of great tips & tricks in there!
P: Someone on the Chrome team deserves a promotion for this
C: Firefox and uBlock Origin. 👍
C: Isn't that just in the best interest of Google, though? If the ad ate up resources on your phone through Chrome, *Chrome* would be what is eating up your phone's resources.
C: uBlock Origin, Privacy Badger, HTTPS Everywhere, and Decentraleyes. EDIT: Forgot Cookie AutoDelete.
C: ads? what are those?
C: Hell, I had to use chromium to see a video on YT (didn't have adblocker there) and I started asking myself how TF people see YT with ads. It's awful
C: I always seen folk mention uBlock, how does it compare to AdBlock?
C: Looks like desktop - but in perspective, my 2013 Macbook Pro Core i5 can hardly run a modern news media website because the ads literally use all the resources. Fans spin up and it gets HOT. Using an ad blocker makes it run super smooth and fast. So I'm glad Chrome has some of this built in to help out lower-powered devices.
C: And they can also force more people to use their own ad services, which of course will always fit those guidelines
C: Used to be okay but then they decided they were going to start putting unskippable ads in the middle of content. Then they decided that every single video should also be preceded by at least two unskippable ads. So in total a 20-minute video may have a total of 5 minute worth of ads - that's not a good ratio of content: advertisement
C: adblock sells your data
P: I am a Web Dev. And I am Burnt The F#*K Out.
C: 47 y/o web dev here. Feels like I could have written this. I started a business trying to switch careers and it didn't work out. Still shackled to my desk with golden handcuffs. I don't have any answers, but please have an upvote because i want to see what advice others have.
C: I'm 42, not much older than you, and 5 years ago I was feeling the same about web dev and programming in general. What saved me was the switch from front-end to the back-end world. I don't know your situation but I was lucky enough to be given that opportunity, and boy was it a breath of fresh air. Learning C#, OO programming, .Net Core, how to build APIs and interact with databases, etc. I hadn't experienced that sense of wonder since the start of my career. I know it's not a magical solution, but I'd recommend any burned out web devs out there to give it a try.
C: Hi OP, sorry I'm late to the party. I'm 32, have been a teacher for 6 years, starting my first internship as a Dev this summer and quitting teaching. Why? Money. I can understand your frustration but in a different way. I tell students all the time there are 3 things you need to figure out in life: 1. Hobby or job that makes money 2. Hobby or job that keeps you in shape/healthy 3. Hobby or job that brings you pure joy Don't over complicate it. If you're extremely lucky you find a job that does all 3. If you're really lucky you find a job that does 2 of them. Most of us aren't lucky. Working with kids brings me joy. I'll miss it but I need money for starting a family soon. I can always volunteer to mentor kids to make me happy. Sounds like you have the money but need to spend more time on the joy. Hope this helps. Good luck
C: Sounds like maybe you were expecting too much out of this? I’m about your age but am on career number 3 or 4 rather than having done this forever. I don’t think my job will change the world, I’m not likely to open a text editor in my spare time. My work is work and I do it for the paycheque. On a good day I still take pride in delivering quality product, and on a bad day I implement terrible ideas that I couldn’t talk some stakeholder out of. I’ve had burn out in previous careers, worked long hours and spent too much time thinking what I did day to day was more important than it was. This industry is full of self-importance and cultish like belief in tech. That kind of mindset gets in the way of work life balance, but there’s nothing about the work itself that requires it.
C: I did web development for 11 years. Now I'm a bowling alley mechanic, and I'm genuinely happy with life. Wouldn't mind a better wage, but I enjoy my job, I'm not stuck sitting at a desk all day, I get to interact with people and work with my hands... [and make cool shit.](https://i.imgur.com/bcMGFnS.jpg) Don't be afraid of change. Change is healthy.
C: [removed]
C: So far not much, other than "recognize that it's not a calling, it's a paycheck." Which I don't disagree with! But if that's all it is then this is no better than factory work, wasting the best, healthiest, and happiest years of your life learning new JavaScript frameworks to stay relevent enough to keep earning that money. I am glad to hear I'm not the only one that feels this way though.
C: Thanks for the perspective. I did come into it feeling the way you described. I burnt out at the last agency I worked for. I felt like I could do the job better doing it myself, so I started my own company. And I was right. But building quality, modern websites entirely alone does not scale in a way that's good for work-life balance either. I've spent the last two years trying to figure out how to successfully move from a "freelance" to an "agency" model but I've failed miserably. I've spent thousands on training from gurus like Eric Siu trying to make the agency leap the right way, and I just can't seem to get the recipe right. But more importantly I've realized even if I am running my own business, this is STILL totally just a paycheck. If it's not making me happy, I should find a way to earn a paycheck that does, I suppose.
C: Dude, I’m 32 and I already feel this coming on in my life. I’m working on starting my own business in a completely different industry and getting into management so that I’m not competing with all the 18 year olds who are learning 15 new languages and frameworks as they step out of their incubator programs. Get creative, start getting your personal finances straightened out, start using your extra money to begin building new cash streams into your life so that you can have options and choices. Most of all, good luck and stay strong
C: Don't be intimidated by people with flashy tech on their resume at 18. I've met so many bad developers that thought they knew all the languages. Even ones who actually could learn the languages. They lacked experience and application to be able to do anything useful. They are still going to require that stuff until they can have higher level jobs. The problem is that you shouldn't be competing with the 18 year olds out there. You should be focusing on moving to a more mature position -- which it sounds like you're working on. Good luck!
P: Here's a comprehensive visual overview of useful skills to learn as a web developer
C: You can find the website here [https://andreasbm.github.io/web-skills](https://andreasbm.github.io/web-skills) I created it to help web developers get a visual overview of various skills that can be useful to learn. It is useful for people who just started learning about web development and for people who have been in the field for years and want to learn new things. The skills are based on what I find the most useful in my day to day life. EDIT: I'm so happy to read through all of your messages and see how many of you have found it useful. Thanks for letting me know - it means a lot to me. Also, thanks a lot for the awards, you people are awesome! I totally understand why some of you feel it's a bit overwhelming, but I can assure you that this overview includes MUCH MUCH MUCH more than most people will ever need to know. I'm really not trying to discourage anyone, my goal is to make people hungry for learning more and provide a visual overview. One of the things I absolute LOVE about being a developer is learning new skills. I think it's amazing to be in a field where you can do what you do for a lifetime and still learn something new! As a beginner I would encourage you to not see this website as the definitive list of what you need to know, but as an example of what you can learn and where you can start. This overview is based on a combination of 10 years of experience, a bachelor in software engineering and what I personally find to be the most useful to know on a day-to-day basis. Therefore, you'll notice that it's missing a lot of things. For example, I'm not a PHP developer - because of this, PHP is not included. If you were a PHP developer, this overview would probably look a lot different. If you feel like something important is missing, feel free to make a PR to [https://github.com/andreasbm/web-skills](https://github.com/andreasbm/web-skills). If you have any questions, you are welcome to PM me :-) EDIT 2: I see some of you doesn't like the horizontal scroll, and I totally get it, it's not for everyone. For those of you who don't like scrolling horizontal I've now added a compact mode which is only vertical scroll (default on mobile) :-)
C: 3 years of experience as a web developer, and I only have an idea about ~40% of this and call myself experienced in 20% so if you're a new comer, don't get intimidated by this
C: Useful but also overwhelming lol
C: Under CSS: "colors" Nice. I've got that one in the bag, so I'm all set.
C: As much as I want to love this thing and I see the love put behind, it is not the most usable it could have been
C: Don't give the recruiters ideas please
C: As someone who's lost all my work before because of a folder being deleted, I think you should move Git to #.5 lol
C: Nobody would really know all of it. Most developers I know (including me) are great at maybe 20% of these things, have an idea about 40-50% of the things and assume the rest are somebody else's problem.
C: Also a web dev here. About a decade in. Its funny because when I see a lot of this stuff I immediately think "front end dev" and not web dev specifically. I'm great with CSS, I can get stuff done in JS, but I have no idea what a lot of this stuff is. I'm a web dev but my focus is in middle/back and most of the tools I use reflect that. The vast majority if what I write executes on the back end and I'm planning on moving straight to WASM with Blazor so while I never really learned anything beyond vanilla JS and JQuery it looks like I'm never going to need to either. It always feels weird seeing these web-dev intros and how little they overlap with what I personally do on a daily basis. 90% of what does apply lists software I've never even heard of and tends to be universally applicable (like unit tests) so most of what does overlap is general dev stuff and not web-dev specifically. Id love to see one of these guides some day that actually covers the kind of work I do but I imagine most new devs aren't really pushing for corporate full stack dev that focuses just as much on internal APIs and applications as it does front-end work. Personally I think its a lot more fun but its not the sort of stuff you tend to see hyped up online. All that being said despite being a web dev im here from /r/all so I don't have a lot of context for this subreddit.
C: Mastering the basics and maybe one or two tech is all you need. It's just like cooking, you have handful of recipes and tools, but to open a restaurant, you only need to be good with some of them. You could do the best burger in the world and have no clue how to do cupcakes.
P: [Showoff Saturday] I made a progressive web app that lets you generate matching themes for your editor/IDE, terminal, Slack, and desktop wallpaper
C: Free and open-source. Web app: [https://themer.dev](https://themer.dev) GitHub repo: [https://github.com/mjswensen/themer](https://github.com/mjswensen/themer)
C: That looks very polished and thought out. Thank you for sharing!
C: I was thinking before trying it, *it would be so cool to be able to share my theme* And then I found at the bottom of the page **Copy URL** Thanks. Amazing job, love it. BTW, you should make a post of it on r/unixporn. It could be really useful for all the ricers.
C: This is really well made! If you don't mind me asking how long did this take you to get to this state?
C: Cool, gotta try it myself :D
C: Super cool! As someone who enjoys tweaking color schemes and matching this is great!
C: Thank you! Been working on it for a while 🙂
C: URLs have got to be at least top 3 best features of the web, amirite?! Thanks so much for your kind words 🙏
C: Thank you so much! I've been working on it casually for a number of years now, as a hobby project that I've paused and later come back to a few times. It started out as a command-line tool, back in 2016 (can still be used this way if preferred). I later built a GUI around it using Electron, but [had problems with Electron and decided to completely re-write it as a progressive web app](https://mjswensen.com/blog/2019/03/23/from-electron-to-progressive-web-app/) about a year ago. So it's been off and on for quite a while now 🙂
C: The best projects are the ones you can always improve by learning new stuff with.
P: [Showoff Saturday] I made a website that combines your tutorial of choice, an in-browser IDE, and a live preview into a single window
C: I thought it’d be cool if you augmented the browser based IDE experience to include an area for a tutorial video so you could more easily follow along. So, instead of needing vscode, two browser windows open, and a live server running (or refreshing until your fingers fall off), all you would need is one web page :) The app is more of an MVP currently to test the waters. It supports HTML/CSS/Javascript, 5 different projects, auto saving, video embed code of your choice, and exporting your final index.html file. This was a quick prototype so it likely has bugs. If y’all find any, please send them over! Link - [https://www.devlecture.com/](https://www.devlecture.com/) Edit: Wow, thanks everyone! I'm so glad everyone is liking it. If any of you want to keep up with the project, I started a [subscribe list](https://devlecture.us17.list-manage.com/subscribe?u=c1941282fe209100009b673c8&id=e63d3e93d8)
C: Man this is the best home project, that i ever seen
C: Things we struggled for but didn’t care to change. Awesome work.
C: Brilliant! Though honestly this just reminds me that I really need a multi monitor setup.
C: Boi this is brilliant. Find a way to monetize it
C: This is like sizzy but a website. It is a good idea, I hope you scale it up.
C: I appreciate that :) especially since there are some super cool projects that have gone up
C: Or open source it and we can all contribute?
C: I will try :) Welcome to all feedback & feature requests.
C: I'll fork it for the comic sans version!
P: StackOverflow is super toxic for newer developers
C: StackOverflow is super toxic for old developers too. I've had comments altered by mods for no good reason, years after I've written them, and for what? Just because the person had moderator abilities and wanted to reword what I said? It leaves a really bad impression on me when my words with my name and picture beside it can (and are) just altered whenever by whoever has the ability to moderate. Yuck!
C: You're just using the wrong strategy. When I was a new developer someone taught me the secret. You can't just post the question you want the answer to. That gets you nowhere. Instead, post the code you want fixed with some stupid question. Brag about how awesome your code is and even question why dumb developers don't use the techniques you are employing. The more condescending the better. The way you should phrase your question must incorporate blaming other developers for your problem like, "How do I make my awesome code work with this idiot's shitty excuse for an API that I'm required to use because my boss is a dumb ass." Then post your code. Your code will be tuned to perfection by angry devs everywhere. They will explain every piece of it to you likely in the most easy to understand (think condescending) way they can because you're an idiot noob who thinks their code is actually good. This will not be a nice explanation, but will be super clear to make sure you understand what an idiot you are. Plus, you will get every finely tuned code snippet possible to fix your solution. You just have to ignore all the mean shit the devs say to take you down a peg. Ask an honest question as a new developer, expect one of two things to happen: crickets or an insult about how you didn't bother to search for the answer.
C: I've found it's in response to being flooded by new devs, most of which ask really poor questions. They're aware and they've revamped their ToS and guidelines (and added a 'new member, be nice' icon). Unfortunately the wheat in the chaff are immediately branded as suspicious because they are new. It takes a quite a bit of effort on your question to avoid getting immediately downvoted. Plus they removed the ability to put comments like: "What have you tried?" and just suggest "downvote and move on" which seem counter to their new initiative.
C: I had a highly rated question that had over 20k views and hundreds of upvotes rated as too subjective.....4 years after it was submitted.
C: sometimes i see my answers/questions being edited and i think, "oh yeah, i guess they're right, my question really could have been condensed down from 3 paragraphs to 1: all of that extra background information wasn't really necessary." but other times it's more like, "why did you need to change those two words? it doesn't change the meaning of the question at all. why do you even care?"
C: This technique was, and may still be, well employed by new Linux users. If you asked "How do I do xyz in Linux?" you wouldn't get nearly the number of "helpful" replies as the person who said "Linux sucks, you can't even do xyz. It's dead simple in Windows!"
C: [https://meta.wikimedia.org/wiki/Cunningham%27s\_Law](https://meta.wikimedia.org/wiki/Cunningham%27s_Law), if you want a name for it. Although your explanation was definitely way funnier than this one.
C: That's the thing, I see a lot of "low effort questions", but at the same time I remember when I was just starting it wasn't that it was low effort, I didn't know how to make a proper question (English not being my first language adds some complexity too).
C: Because editing is something that gives you points and is one of the only ways for new accounts to gain permissions for things like commenting and voting.
C: You could always jump into a time machine and answer a simple question 10 years ago and get 20,000 points, if you really want to act like you're special.
P: Password Box Idea
C: Really cool idea! Although I think the animation needs to be almost instant since some people just want to peak at their password real quick
C: I coded this here! [https://codepen.io/zackkrida/pen/gObRyoE](https://codepen.io/zackkrida/pen/gObRyoE) Did it quick and dirty, and definitely color contrast issues with the original but still fun to implement.
C: From an accessibility standpoint the purple on black has a contrast issue, though you're only ever displaying dots on the black background. Additionally I would suggest not using placeholder text as a label, and ensure the label is always displayed. Now on to the good: I love the animation to show the password. The speed is good and it looks very fluid. Great job! Edit: icon is not purple on black. Removed comment.
C: Very appealing visually, but outright changing the color of the text field is likely to cause confusion about focus location, and generally seems like a risky design idea. If you could do a faster animation which just expanded a circular border out like a scan line to reveal the value without changing the color, perhaps that would be less likely to cause issues. Sometimes the prettiest designs are not safe for use, but often the concept can be salvaged and made accessible.
C: Shouldn't the two eye icons be swapped? If I click on the eye icon it means I want to see it. And for the closed eye I want to hide it? Really cool animation though
C: It's a cool idea, and I get where you're coming from, however for UI standards, this is incorrect. Many people won't know what that button does by default. Edit: I meant how the icon is shown, not everyone will see it's a closed eye. I understand your arguments that an eye is already used on some password fields, which is correct, however for them it's an eye that is open with a slash through it, which would be more understood to a larger audience.
C: Meet in the middle, we should definitely see the animation, but we shouldn't have to wait for it. Yes the text toggles instantly, but it's barely readable on the dark background. Very cool idea!
C: > Shouldn't the two eye icons be swapped? If I click on the eye icon it means I want to see it. I feel like there is no consensus on this kind of thing across the web. Even with things like expand/collapse arrows. Should it show the current state or the desired state? No idea...
C: I would say that really depends on the audience. For any app/account that comes from gov etc. units and should meet the highest standards of accessibility, there should be a checkbox/toggle outside the input with a label clearly stating it will reveal the password. If this app is for a teens-millenials group with a high it literacy then this eye icon is fine, it's commonly used/well known symbol. Also if interface is not too crowded with interactive elements (and login page should be free from distractions) then users will simply worked it out on their own.
C: That’s because the UI is trying to combine the role of a status and a command into one UI element. This is why it’s generally recommended to provide labels rather than letting the icon be stand alone.
P: As someone who thought they were pretty good at creative coding, can I just say: what the fuck
C: How is my phone not melting
C: For anyone wondering, this was coded using WebGL. Bare WebGL is quite low-level in itself, but has been abstracted upon by libraries such as Three.js and PIXI.js. If you want to learn how to code something like this, you should learn how to code **shaders**. Shaders are essentially small programs written in GLSL that run directly on your GPU (you can see quite a few examples in this GitHub author's JS file). A great starting point to learn more about these is the https://thebookofshaders.com/. Just some helpful knowledge I picked up over the years trying to code shit like this myself 🤷‍♂️
C: Well I'm useless.
C: Big deal. I once deleted a paragraph using JavaScript. ^oh ^god ^I’m ^useless ^piece ^of ^human ^trash
C: I think I spent way too much time playing with this. It's awesome. Can make some sick wallpapers with it.
C: We have to delete this repo before my employer figures out that I am an impostor.
C: Smooth as butter even when loaded in my baconreader app. I mean that's how things should be, but rarely are. This is really neat
C: Runs like butter on my piece of shit Moto E4 backup phone... Hooow?!
C: While this guy's purpose is to code sick nasty fluid dynamics, my purpose is to simply pass the butter 😞
C: > Don't worry, we cached a copy of it forever. \- Google and Facebook
P: [Showoff Saturday] I made an Extension to Visualize Data Structures
C: You can find the code of the extension [on github](https://github.com/hediet/vscode-debug-visualizer/blob/master/extension/README.md). You can get the extension for free in the marketplace [here](https://marketplace.visualstudio.com/items?itemName=hediet.debug-visualizer). Since v2.0.0, all visualizations can be used independently from this extension ([see `@hediet/visualization-bundle`](https://github.com/hediet/visualization))! You can play around with them [here](https://hediet.github.io/visualization/?darkTheme=1). Expect support for another IDE soon - follow me on [twitter](https://twitter.com/hediet_dev) to stay tuned ;) A big thank you to my [sponsors on github](https://github.com/sponsors/hediet) who motivate me to do this and other stuff! ;) Besides graphs, this extension allows to visualize * Trees * ASTs * Plots * Tables * Arrays * SVG/PNG * and more If you like this extension, you also might like my free, open source [Draw.io extension](https://github.com/hediet/vscode-drawio/blob/master/README.md) for VS Code :)
C: great tool, especially for students
C: This is really cool! I was looking for something like this when I did my data structures course. Will this work with Python?
C: This is pretty awesome. What was your motivation for making this? What is your skill level as a software dev? I'd like to make a project like this someday (still a beginner dev myself though). The code doesn't look very complicated, but maybe there's something I'm missing.
C: this is great! do users have the option to change the physics animations? its a bit too bouncy for imho,
C: That draw.io extension is awesome!!
C: Agreed! This would have helped me a ton back in data structures class.
C: Kind of. [You need to convert your data structure into json manually though.](https://github.com/hediet/vscode-debug-visualizer/blob/master/demos/python/graph.py)
C: > What was your motivation for making this? Good question. It's fun and cool. And I always wanted to have this. > What is your skill level as a software dev? I cannot answer that :D I've been coding stuff for many years now. > The code doesn't look very complicated Thanks, that is always my goal ;) I would say this project was a pretty challenging one and I had luck that VS Code's APIs usually behaved as expected. I struggled with the overall architecture quite a bit. I had several attempts at this (my initial idea was that you can only visualize html and that you should use custom html to implement your own visualizations. The current approach is much better). Mastering webviews is not easy too, as you need a way to debug them quickly. You cannot easily debug webviews in VS Code.
C: Users have the option to open a pull request with a different animation ;) There is a graphviz based rendering option though. [this](https://hediet.github.io/visualization/?darkTheme=1&state=XQAAAAJQAgAAAAAAAABBKQlHM6T2Wc3LEDSCeIALvKHAdfb_AsEB0UuwlAICjcyIaLZBmzAxm_NzCxZ6QMDa_jkChjBcva-xSRfHXjXAomU6yB7nS9BW7YdivJGAIbv6YxYOMmssQU1i7Ghx8JpCJmf90aZhJ91Z6KjZSH2jBvn7Uy3y6rWWKlwY-J76HiOXIdzhF-MhLIb-P0u31qmYD3qluX3aaJdlK0Ft5ox_-5b5undefinedg) vs [this](https://hediet.github.io/visualization/?darkTheme=1&state=XQAAAAJSAgAAAAAAAABBKQlHM6T2Wc3LEDSCeIALvKHAdfb_AsEB0UuwlAICjcyIaLZBmzAxm_NzCxZ6QMDa_jkChjBcva-xSRfHXjXAomU6yB7nS9BW7YdivJGAIbv6YxYOMmssQU1i7Ghx8JpCJmf90aZhJ91Z6KjZSH2jBvn7Uy3y6rWWKlwY-J76HiOXIdzhF-MhLIb-P0u31qmYD4hWiO09xA3yKIL0P__HSUFA)
P: Reddit gets its app to 50 million Play Store downloads, mostly by making the mobile web experience miserable
C: Are people just unaware of the third party apps and that they are (or at least, most of them are) better than the official reddit app?
C: It's not just the constant app popups (which are intentionally confusingly worded). * It cycles the "loading" icon waaay longer than it needs to now. The loading icon intentionally prevents any already loaded content from being shown until it's "done". * It limits the amount of comments you can see and forces a reload when expanding them (retriggering the loading icon and app popups). * The other day I went and it literally wouldn't let me load more comments. It required the app. Like the paywall of Washington Post or NYT. I've only had that happen once but it seems like a new method they're trying or maybe moving toward. It's gotten to the point where I actively don't click on reddit when doing web searches. Even if it seems to have an answer to something I'm looking for. Unfortunate since the mobile web experience is a big part of what, I think, got reddit a lot of its popularity. It was refreshing compared to all the other sites that were a hassle. Now it's just one of those. Edit: Oh, and if we're suggesting apps, I love Slide on Android! It's really nice (and open source too!) RedReader is another really nice open source one too!
C: Http://old.reddit.com Best mobile experience for me.
C: The issue is Reddit making the mobile site unusable in a mobile browser in an obvious attempt to force those people to use their app. It’s a really shitty, scummy ass maneuver. And this does effect 3rd party app users as well because sometimes a link will open in say chrome or safari, redirect to the site thread, and force open the official app (if you have it installed) and open the App Store if you don’t. It’s like back in the old days when mobile browsers were just starting out, you would request a mobile site and the web server would flip out and go “*oh! I have a mobile version of the site do you want to see it?”* you say yes and it dumps you to the sites front page losing the article you wanted to read. Reddit use to work great on mobile browsers, they intentionally killed it to push their app and it’s a real shit practice.
C: I thought the whole point is that they didn't want to have to download and use an app for Reddit?
C: I've been using "Reddit is Fun" for years and I still prefer it to Reddit's own app and site.
C: Relay FTW!!
C: Reminded me of this xkcd https://xkcd.com/869/
C: I hate seeing the internet become like this. Twitter/Quora/Pinterest shouldn't come up on my google search if the information isn't publically visible. I feel like I constantly go to search something up and click it, just to find a login/registration page.
C: It's now called "rif is fun" because they couldn't actually use the name "reddit" for the app
P: This is what I'm eventually realising
C: this is what a lot of people asking for help around reddit need to realize. i’ve seen questions with a 1000 line long code snippet asking why “it’s not working”. people tend to get upset when this is met with unhelpful responses. if you can’t boil your issue down to a few lines of reproducible bug code, you probably don’t understand it that well either. you need to go learn what each thing does as you go or you won’t be able to confidently speak on these subjects
C: Being able to learn new and unknown tech by yourself is the most important skill to have as a dev. What is the standard way of doing things now will be, if not obsolete, at the very least legacy in 5 years. Once you have the basic knowledge to kickstart your ability to learn a new tech/language/technique, you can be any dev you want to be.
C: Counter point. Just because something is the way it is doesn’t mean it should or has to be that way. A lot of research into teaching and learning has shown that a number of important elements needed for effective learning are completely unknown or unused by many if not almost all educators and learners. Take expert blind spot problem. This is the most common issue for junior programmers, experts actually can’t teach well because there’s many foundational concepts needed to be learnt first but experts are so far removed from it that they don’t even acknowledge or consider teaching it. This is why many tutorials, documentation, stackoverflow answers etc just are super difficult for beginners to understand. And the hardest bit is beginners don’t know or understand this because they don’t know what they don’t know. Another issue is the cognitive overload issue, juniors can’t process as much information as experts until they become super comfortable and automate a lot of that information (think learning to drive vs being a comfortable driver). I agree the reality is you have to just wade through the mess and uncertainty and get to the other side. But I don’t like to perpetuate the idea that this is just the way it is and always will be. We all can do things to change this, all seasoned and experience developers can work to make the lives of juniors easier so they don’t have to go through what we did. Things don’t have to be the way they are, just because that’s how they are. Source: Years of research into the science of learning, becoming an expert in the topic including giving a few talks on the subject
C: In this episode, Bruce Tate talks about how pain is an essential component of growing as a developer. https://corecursive.com/051-bruce-tate-language-learning2/
C: Sometimes all it takes is spending five minutes actually debugging. The amount of people that don’t even debug blows my mind. It scares me that the development industry as a whole is moving as fast as it is. It is creating some really nasty habits and people are relying on plug and play WAY too much these days.
C: Additionally, you'll often be required to use certain libraries, infrastructures, and programs you may not agree with. But that is what may have been chosen by the stakeholders of the project and you just have to make it work.
C: I want to be a firetruck dev.
C: I kinda agree with this, also just because you have finished the project doesn't mean you understand how it works. It would have been better if the professor taught you how to think independently and/or how to better approach problems, not just "Yeah you're supposed to do this alone, you will learn faster that way". Some people without background of any logical subject and/or people who were not taught how to think independently will just fold, and is that really how we're supposed to approach them?
C: > Sometimes all it takes is spending five minutes actually debugging. The amount of people that don’t even debug blows my mind. Yup, a lot of problems have relatively straightforward solutions. Knowing how to the find problem is a much bigger job than engineering solutions. A plumber once told me if he's charging you $100 it costs you $5 for him to turn a screw and $95 to for him knowing which screw to turn.
C: Agreed. You may be able to fight a professor on it but I know for damn sure when my boss says "I have a project you need to fix that involves (language/framework I don't know)" I don't nor can't argue with them. I just say "okay when is it due?" Then I'm on my way. Truth is, college doesn't teach you how the real world works, sounds like this professor is doing just that
P: I made an app to explain git commands by typing out the command (What the Git)
C: Link: [https://wtg.nezia.xyz](https://wtg.nezia.xyz) Repo: [https://www.github.com/Nezia1/what-the-git](https://www.github.com/Nezia1/what-the-git) It's my first ever serious project. Contributions are gladly welcome! It only works with a couple of commands so far, and really basic flags, and doesn't handle edge cases such as git branch for instance, so this is only a prototype so far!
C: Oh cool, there is something similar out there for shell commands. [https://explainshell.com/](https://explainshell.com/)
C: This is awesome! Would be sweet to see it repackaged as a cli tool that would have a short blurb as you type the command
C: That is awesome, ilke "I'm feeling lucky" Google searches. The nitpicker would argue that such an application is more useful in reverse (as in: show the command when searching by feature), but I like the type of manuals that shows the commands instead.
C: [https://i.imgur.com/VseBNS2.png](https://i.imgur.com/VseBNS2.png) :(
C: It doesn't give any result with the basic stuff like rebase, merge etc.
C: Heads up, you can do `git help <command>` on the CLI.
C: Good idea! Might look into it in the future :)
C: Yeah, honestly, if it was to be any use, it'd have to be more interactive and show the actual effects. Like if I do a reset or a rebase – show which commit (or specifically which changes to my repository) this would do. Just explaining each parameter individually isn't worth much to me at least. What's the difference between my local branch and the remote branch? Which commits are deleted, which are commited? Or what caused me to be in this distached state and how can I get back in a sane way? I love that OP is doing that and I'm not ever going to put somebody down for contributing to the community. I'm just stating what I'd need as a seasoned developer. But hey, maybe this tool isn't intended for me, and that's fine. But I'd love a tool that did do these things. (And just to preemtively stop people from trying to help me with issues: Yes, I'm not currently stuck in one of these, yes, usually just doing `git reset FETCH_HEAD` will put me in the state I want. I just mean... On the rare occasion, I'm lost, these are the information I'd want.) So anyway, I'd love checking back in a while – every great project starts with a single commit. Good job!
C: I thought about this, but I remembered myself being a beginner and finding myself go through the awfully convoluted git documentation, and not understanding anything and that's what pushed me to write this project! In its final version I hope it will be useful to anyone trying to learn git. Thank you a lot still!
P: Google will punish sites that use annoying pop-up ads
C: Oh shit, Forbes is fucked.
C: Here's the link to the actual blog post from google, instead of theverge (who infuriatingly don't link to the firsthand information) https://webmasters.googleblog.com/2016/08/helping-users-easily-access-content-on.html?m=1
C: Does this also apply to sites that link to pop up overlays? For example sign up modals or, check out widgets? Or is it only for sites that automatically create these pop ups?
C: On Mobile*****
C: Good. Fuck that fucking site.
C: Please disable your ad blocker to view this comment.
C: Quora too.
C: They link to it at the bottom of the article where is says `Source`
C: Google is mysterious. But it seems to be targeting ones that take up most of the screen and prevent the user from interacting with the page until it is closed.
C: [deleted]
P: Markup horrors of the ad blocker wars
C: That's not very accessible.
C: Somewhere, Tim Berners-Lee is contemplating suicide.....
C: Bulletproof selector: document.location.href.includes('facebook')
C: THANK YOU! It's been bugging me how uBlock isn't blocking Facebook ads anymore.
C: [deleted]
C: Accessibility be damned! They need that sweet sweet ad revenue. /S
C: He's already planning a new kind of internet.
C: I got this from a reddit post somewhere: www.facebook.com##[id^="hyperfeed_story_"]:if(.userContentWrapper div[id^="feed_subtitle_"] a:if(span:has-text(Sp):has-text(on):has-text(so):has-text(red)):matches-css(display: inline)) www.facebook.com##[id^="hyperfeed_story_"]:if(.userContentWrapper div[id^="feed_subtitle_"] a:if(span:has-text(Sp):has-text(on):has-text(so):has-text(red)):matches-css(display: inline-block)) seems to work for now
C: [deleted]
C: [deleted]
P: https://routlookit.com - I hide reddit in an outlook2019 web interface (Work only on PC)
C: Of course, for those who know this is "just" an un updated version of : [http://pcottle.github.io/MSOutlookit/](http://pcottle.github.io/MSOutlookit/) I made this webapp in Angular and there is still a lot to do especially with http request but I feel like I have reach a good enough v1 to post it here and start getting some feedback. Hope you will like it ! Website url : [https://routlookit.com](https://routlookit.com)
C: Reddit as code - http://codereddit.com/ Reddit as newspaper - https://unim.press/
C: hide the NSFW tags and u got a product
C: This is amazing! Loved the application. I'm trying to learn Angular, if you could share some resources or tips for making my Angular coding better. That would be great! Cheers to your app again! This is a great idea!
C: >Reddit as code If my boss saw light mode code on my screen the gig is up right then and there.
C: I'll find a way to hide it in a better way but Its here for a reason
C: You can click on the toggle style and it'll change it to dark mode
C: Hmm... could you add a toggle so that users could change the NSFW text to the ! icon that marks urgent email in outlook? I think that'd fulfill the request and expand on your original your intention.
C: This is a trully good idea to implement the NSFW in a better way !!! Will update it this week with that, thanks ! :D
C: *co-worker walks up behind* Oh, hey man looks like you've got an urgent email there. Better open it up and deal with it immediately.
P: My biggest solo project. A platform where you can create a beautiful website, portfolio and resume for your next job interview.
C: That’s a lot of work and seriously impressive! Awesome stuff👍🏼👍🏼 I dont have any feedback, wanted to know what tech stack you used for client side, server side, database and hosting if that is shareable. Kudos and good luck!
C: You EVEN HAVE MENU on mobile positioned amazingly! Wow. Fuck you!
C: Bro this is a sick site !! Clearly shows I have a long way to go 😂 when did you start on your web development journey?
C: Resoume is a project I have been working on for a bit over a year now. It started as a resume builder but the bigger picture I had in mind was a platform to build your online presence for the job search. You can now create a resume, portfolio and personal website with analytics. **What is so great about it?** Well, I am surprised that with something like a resume builder, where you have a ton of competition, I could still get a decent amount of traction and revenue. But the best part is the things I have learned by building this platform. With more and more complex features that I added to the platform, I created more and more code and learnings that I can re-use for other projects. Certain parts, like sign-in/sign-up, email subscriptions, subdomain support, payment solution just to name a few, are now my boilerplate for my next project. Build something like no one cares. At worst, you have another project for your resume (pun intended) and learned a lot of new and interesting things along the way ✌️ If you are curious, you can check it out here: [resoume.com](https://resoume.com/) Edit: Thank you all for your feedback and support and kind words!!! This got way more attention than I thought it would. I love to work on Resoume (I think you can tell by just looking at it) but to see other people appreciate it as well is an amazing feeling ❤️ I decided to build in public and if you would like to follow along here is my [Twitter](https://twitter.com/gobienan) Edit2: The r/webdev Community motivated me so much that I will make the leap and post Resoume on ProductHunt. I decided to do it on the 3rd of April 2021. It would be amazing if you could drop by and leave an upvote. And if you really, really like me maybe even a positive comment 🥰
C: Thanks a lot! It was indeed a lot of work but I am really proud that I stuck with something for so long. Normally I get bored after a few month tops haha. **Here is my tech stack:** Frontend: Vue.js (now Nuxt.js) Backend: Node.js Payment: Stripe Infrastructure: GCP Email/Newsletter: SendInBlue Chat On Website: Crisp Telegram: Alerts/Notifications
C: hahaha, I am always confused about other sites and their mobile menu. Like why is the button at the top where my thumb can't reach it?! I have given it some thoughts and you noticed it, that's amazing as well ;)
C: Thank you! I think around 5 years ago, but I had a long break after Flash and ActionScript was about to die 😢
C: Love it. Fuck you
C: How did you structure your back-end?
C: I love you too hahah 🥰
P: The making of my first fullstack website, visualized by bookmarks
C: Holy shit. The amount of bookmarks I would have on my browser was one thing I was not prepared for when I started learning web-development. I keep meaning to tidy them up into organized folders. One day I'll get around to it..
C: Not a true dev until they are all open tabs.
C: Just get rid of them and google when you need. It is what you'll do anyways if you don't have some top notch organization and regular review of them all
C: 2 years ago I had the idea for an on demand consulting website (my coworkers and I are exceptional bike mechanics but don't make much money). The picture is of all the websites I've saved in the process of creating said website. Bookmarked because I either learned something valuable or thought they have good reference value, though some may no longer be useful. I'll be making a post about the website ([talktree.me](https://talktree.me)) on show off saturday, but I saw the post 'Skills Required to become a Full-Stack Web Developer' and thought my bookmarks would be a good share.
C: [deleted]
C: https://raindrop.io
C: I tag all of my bookmarks in Firefox. So when I’m looking for something specific I just reference the tag and it really narrows down my search. Once bookmarks are tagged in firefox, you can search for them right in the address bar. I like to leave little notes or what I found useful about a certain bookmark.
C: bookmarked edit: FWIW I organized my bookmarks today (9/11)....told ya'll I'd eventually get around to it XD
C: r/madlads
P: A simple diagram but a good reminder. Bottom navigation buttons are great.
C: If you hold your phone with one hand there's a spot in the corner where it might be difficult to reach for your thumb without loosing a bit of the grip on your phone. You might as well want to avoid the bottom far right and far left areas for really commonly used buttons.
C: only because phones have become stupidly big
C: Those areas are getting worse and worse as time goes on. My phone recently broke so I'm back on my iPhone 5 - it's amazing, I can press everything without straining 😍😍😍
C: I work at a web design agency. We switched to bottom menus, and customers eventually wanted them back up. Even me, when I go back to some sites we've done, I can't find the menu. We are so used to top menu everywhere. Anyway, to this day, it's still something I'm not convinced of.
C: Am I the only one that transitions from "pinky preventing phone from dropping from hand" to ["tilt phone parallel to floor and rest on fingers" mode](https://i.imgur.com/00ZoMN3.png) without even thinking about it?
C: I think the tl;dr here is that a handheld touchscreen device is a very non-optimal input device.
C: Yeah, exactly this! Firefox for Android allows to move the nav bar to the bottom, but after trying it out for a while, it's far less comfortable than having it in the top.
C: [deleted]
C: This is me. I have it resting on my pinky underneath. It’s always fallen if I don’t grip it like this. https://i.imgur.com/cU0i5Se.jpg
C: While true, the user share of mobile is only increasing every day. We’ve just got to optimize for them as best as we can.
P: Seeing even just one person use something you’ve made is a good feeling
C: Totally. I always considered one random user as the success milestone for a project.
C: I randomly checked a project I released to the app store and saw i have nearly 70 registered users and 3 of them were online in the past 7 days. It feels so good, i hope it wasn’t a one time use
C: Someone’s been trying to beat the high score on a web game I made, it’s neat seeing new people on the scoreboard
C: I spent half a day yesterday trying to track down a bug causing unnecessary load on the DB. After a few hours, I came to the realisation that around a hundred people were actually using the application The users were the bugs.
C: isn't that you?
C: Plot twist: it's you...
C: And then you find the tab you thought you closed...
C: If you ever create a paid thing, and a random internet person finds it in the wild and pays to use it, you will be over the moon. There no feeling quite like your first sale. I still remember mine.
C: Earlier this year I had one of those shitty clickbait e-sports news sites write an article about one of my sites. Probably one of the highlights of my webdev career. Probably get millions of views on the stuff I do for actual work, but man, having people on one of your personal projects just hits different.
C: still counts
P: I made an open source browser-based video editor
C: madlad built this thing in vanilla JS
C: Only 1000 lines of js? Holy hell. This is the real shit right here ladies and gents.
C: code: [https://github.com/bwasti/mebm](https://github.com/bwasti/mebm) link: [https://bwasti.github.io/mebm/](https://bwasti.github.io/mebm/)
C: You are genius. I excited. So curious to know more about it
C: Holy shit this is impressive! Why did you choose to go vanilla js? How long you been working on this? The meme potential is wild with this
C: Dude is a Facebook engineer. And studied at Carnegie Mellon. These type of people don't post on Showoff Saturday, they go directly to VCs.
C: It didn't seem like I needed any libraries and I wanted to brush up on newer JS standards. I was pleasantly surprised by how much browsers can do out of the box. I started last Friday as a long weekend project. Polished it up this week.
C: Thanks for making such a cool project! &#x200B; How much would you say you spent like percentage wise on brushing up on the new standards, planning things outs, rough development, and polish?
C: I first spent time playing with standards, which was basically copying and pasting StackOverflow examples and getting really inspired. That was maybe \~20% of the time. Building out the project was another 30% of the time. (Design didn't take long as it's just two concepts: a `Player` and `Layer`s equipped with a `render` method). Then I squashed bugs and polished with small features. This took up the remaining 50%. Canvas rendering (all the resizing, placement and mouse detection logic) was the hardest bit.
P: What is the thinking process to start designing something like this?
C: I'm the guy that made this, so I'll try to answer the question. This was just a project that I did for fun. I like to explore some of the weird and unorthodox ideas that pop into my head sometimes. I also work a lot in SVG and I wanted to see if was possible to pull the effect off the way that I wanted. I had seen a similar login for a company called RememBear that had a bear that looked left and right as the user types. I'm not positive, but in my quick exploration of that effect at the time, it looked like it essentially switched to different frames of a pre-rendered sequence as each character was entered. I was curious if I could make one that animated dynamically in realtime at precise angles to what it was looking at. I also wanted to see if I could use 2D elements to fake a believable 3D effect of a 3-dimensional face that turns and moves. I drew the graphics in Adobe Illustrator and exported them as SVG. I then inlined the SVG to the page and gave each element I needed to interact with an ID. I used JavaScript to get the text cursor position on each keystroke. Then, using some trigonometry, I can get the angle between the position of the face and that cursor position. From there, it's just a matter of moving the SVG elements along that angle. I used a JS library called GreenSock to do the animation, but you could use another library or even vanilla JS is your preferred. Hope that helps, let me know if anyone has follow-up questions.
C: Learn how to animate svg elements and then trigger these animations based on user input events (click, focus, keyup/keydown)
C: The first and most difficult step: have a sense of humour. The rest is easy triggered based animation. Probably took an hour if the graphics are prepared
C: My guess is that you must ask yourself this question: *"What would bring a* ***moment of delight*** *for my users"?* The answer to this question is very *open-ended* and that would enable you to think of limitless ideas that are fresh and unique. And then you run along and figure out how to accomplish it.
C: This was done by Darin Senneff. You should look at the code used to create it. He makes things like this a lot a publishes them on Codepen. https://codepen.io/dsenneff/pen/2c3e5bc86b372d5424b00edaf4990173
C: [deleted]
C: What's the website that has this login I'd like to try it out
C: I always thought they were drawn with css instead of svg... makes more sense now
C: That's what white collar employment is
C: You can draw svgs in CSS using background
P: Don't flex yourself
C: The thing that always seems to be pure trial and error for me is "flex-basis". E.g. flex: 1 0 50%; So, you can grow but don't shrink and you start at 50% width. Result: boxes take size of contents and are 15% and 42% width. Ok, flex: 0 0 50% ; You can neither grow nor shrink and should be 50% width. Result: boxes are 100% and wrap to next line. Ok, random values in Firefox CSS inspector until it looks right.
C: https://css-tricks.com/snippets/css/a-guide-to-flexbox/ I just keep this bookmarked and open when I'm doing layout/component level stuff.
C: Let's have a moment of appreciation for how amazing grid is though. Started from float/tables, now we're here.
C: weird flex but okay
C: Flex yoself befo you wrecks yoself
C: [this article](https://medium.freecodecamp.org/even-more-about-how-flexbox-works-explained-in-big-colorful-animated-gifs-a5a74812b053) was the first to actually explain the theory behind flex-basis in a way that made sense to me. Unfortunately there is so much wrong info out there still.
C: > Ok, random values in Firefox CSS inspector until it looks right. This is my dirty secret and the best part is that at the end people actually think I'm good at my job and pay me good money for it. EDIT: [Accurate representation of the process](https://i.imgur.com/Q3cUg29.gif)
C: I actually just start typing flex in the bar and it comes up -- pretty much the first result om any flex search as well ~
C: On my way to present my semester project as a first semester front-end student. Built the site with CSS grid. Fuck IE.
C: OP missed a golden opportunity right here
P: A great demonstration on why accessibility matters on your site.
C: Every time I've seen someone using the read everything aloud stuff, it's always on the fastest speed. I imagine it's quick to get used to but it sounds wild as a bystander
C: I wasn't aware of smartphones having braille keyboards. I thought they would speak into the phone.
C: I wish there was a good ... accessibility course or something. Sometime top down so we know what is actually going on. I see lots of tidbits / medium type articles / gee whiz notes about using labels and etc and I do them but I really don't get it as a 'system'. And frankly the finger waving in the articles about people not doing accessibility is kinda tiresome (not the case here with OP) / I swear to god I've read some conflicting information.... There's a lot of "oh it's the standard / in HTML" or whatever but that means jack shit when you go to layout a page or make a form or whatever ....
C: wow imagine all the sign on steps, modals, and other crappy stuff sites and apps do. Like how would a person read a local news site they are riddled with ads and popups. Like register, now check your email, then enter the code we sent you in your text message, type the 6 digit code, and now get blasted by pop-ups that have the tiniest 'x'.
C: You should check out the audio clips here from a blind programmer. Definitely eye opening on how fast they can process audio [https://www.vincit.fi/fi/software-development-450-words-per-minute/](https://www.vincit.fi/fi/software-development-450-words-per-minute/)
C: I'm dyslexic, so I listen to a lot of audiobooks and podcasts. My wife can't even be in the same room with me if I don't have my headphones on because I listen at 2x+ most of the time depending on the speed the person talks. It drives her crazy because she can't comprehend what they are saying at that speed and it sounds so unnatural. Edit: it is however a learned skill I compare it to her speed reading. She reads way faster than me. Also with accessibility feature such as screen readers. You are often not trying to deeply comprehend what is being said. Most of the time you just trying to hear the difference between the sound it makes when you hover the Twitter icon vs the Gmail icon. So you can think of it as a specific tone for each app, unless you have never heard it before then your brain can take the time to process it. That said I would love if screen readers were a little smarter and would speed up or slow down based on the size of the block of text. So if it is reading an app name it reads at 4x, but if it's reading a book then it reads at 2x.
C: I definitely would have guessed visually impaired would use speech recognition too. I wonder if it's an age thing? I don't use speech recognition but every teenager I see does.
C: https://www.accessibility-developer-guide.com/ This is a good place to start and usually where I tell people to start. I have forced all my co-workers to read this cover to cover along with all our QA engineers, we have to know how to use the tools to have a chance. I currently was hired for a project to pass AA standard accessible, so I am neck deep in all of this right now.
C: Udacity has a free Accessibility course made by Google that provides a pretty good overview. https://www.udacity.com/course/web-accessibility--ud891
C: I do this with lectures and tutorials at 1.75x speed.
P: Coming back to frontend after 10 days off
C: We all got together, had a vote, and decided: it's just HTML now. No more CSS *or* JS. Consumers just have to grow to love each browsers' default black-on-white text style. It's for their own good.
C: Everything is now done in the shadow DOM and you can only see the HTML element when inspecting.
C: Microsoft bought Github. One of the major changes they introduced was that commits were only allowed via Frontpage, which is now conveniently autoinjected to each package.json
C: You get 10 days off? Your job is being outsourced to India.
C: Frontend dev has largely been replaced with MSPaint and GraphQL.
C: We’ve all moved on to jquery, you should check it out.
C: Ppl in this sub love to overreact. Cmon he’s been off 10 days it’s not the end of the world. There are still a lot of maintenance jobs with great companies OP can apply to.
C: HTML.js will transpile your html to JavaScript for backward compatibility
C: Not sure what HTML is, as I am only familiar with React for everything. How is HTML support in IE7?
C: It works with a polyfill in IE7.
P: Why founder of FreeCodeCamp Quincy Larson is banned from this subreddit?
C: Hi, reddit! The user has been communicated with on two occasions, dating back three years ago and was provided reason with which the user was banned. Even today, the user's submission history falls well within our self-promotion guideline of 9:1. Here is one of those conversations, proving the assertion that we did not communicate with the user incorrect. https://imgur.com/T7aUHpx We generally permanently ban users and have them request to be removed >= 60 days later after we review their new posting habits as the majority of accounts are bots to begin with. Available submission history for /u/quincylarson: domain submitted from|count|% :-|-:|-: [medium.freecodecamp.com](https://www.reddit.com/search?q=site%3Amedium.freecodecamp.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|96|56% [medium.com](https://www.reddit.com/search?q=site%3Amedium.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|17|10% [medium.freecodecamp.org](https://www.reddit.com/search?q=site%3Amedium.freecodecamp.org+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|8|5% [self.FreeCodeCamp](https://www.reddit.com/r/FreeCodeCamp/search?q=author%3Aquincylarson+is_self%3A1&restrict_sr=on&sort=new&feature=legacy_search)|8|5% [twitch.tv](https://www.reddit.com/search?q=site%3Atwitch.tv+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|6|3% [freecodecamp.org](https://www.reddit.com/search?q=site%3Afreecodecamp.org+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|3|2% [freecodecamp.com](https://www.reddit.com/search?q=site%3Afreecodecamp.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|3|2% [github.com](https://www.reddit.com/search?q=site%3Agithub.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|3|2% [reddit.com](https://www.reddit.com/search?q=site%3Areddit.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|2|1% [freecodecamp.typeform.com](https://www.reddit.com/search?q=site%3Afreecodecamp.typeform.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|2|1% [self.IAmA](https://www.reddit.com/r/IAmA/search?q=author%3Aquincylarson+is_self%3A1&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [youtube.com](https://www.reddit.com/search?q=site%3Ayoutube.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% [facebook.com](https://www.reddit.com/search?q=site%3Afacebook.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% [theverge.com](https://www.reddit.com/search?q=site%3Atheverge.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% [proquestionasker.github.io](https://www.reddit.com/search?q=site%3Aproquestionasker.github.io+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% [self.learnprogramming](https://www.reddit.com/r/learnprogramming/search?q=author%3Aquincylarson+is_self%3A1&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [imgur.com](https://www.reddit.com/search?q=site%3Aimgur.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% [davemart.in](https://www.reddit.com/search?q=site%3Adavemart.in+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% [rtfmanual.io](https://www.reddit.com/search?q=site%3Artfmanual.io+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% [theguardian.com](https://www.reddit.com/search?q=site%3Atheguardian.com+author%3Aquincylarson+is_self%3A0&restrict_sr=off&sort=new&feature=legacy_search)|1|1% _^...and ^14 ^more_ subreddit submitted to|count|% :-|-:|-: [FreeCodeCamp](https://www.reddit.com/r/FreeCodeCamp/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|49|28% [programming](https://www.reddit.com/r/programming/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|39|23% [technology](https://www.reddit.com/r/technology/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|15|9% [webdev](https://www.reddit.com/r/webdev/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|14|8% [geek](https://www.reddit.com/r/geek/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|7|4% [javascript](https://www.reddit.com/r/javascript/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|7|4% [WatchPeopleCode](https://www.reddit.com/r/WatchPeopleCode/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|6|3% [dataisbeautiful](https://www.reddit.com/r/dataisbeautiful/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|5|3% [web_design](https://www.reddit.com/r/web_design/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|4|2% [CryptoCurrency](https://www.reddit.com/r/CryptoCurrency/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|2|1% [redditrequest](https://www.reddit.com/r/redditrequest/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|2|1% [writing](https://www.reddit.com/r/writing/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|2|1% [IAmA](https://www.reddit.com/r/IAmA/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [Deno](https://www.reddit.com/r/Deno/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [gaming](https://www.reddit.com/r/gaming/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [Bitcoin](https://www.reddit.com/r/Bitcoin/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [productivity](https://www.reddit.com/r/productivity/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [Python](https://www.reddit.com/r/Python/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [node](https://www.reddit.com/r/node/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% [politics](https://www.reddit.com/r/politics/search?q=author%3Aquincylarson&restrict_sr=on&sort=new&feature=legacy_search)|1|1% _^...and ^12 ^more_
C: Inb4 OP gets banned
C: Self-promotion: https://www.reddit.com/r/webdev/comments/547qum/anyone_know_of_a_codeacademy_or_freecodecamp_like/
C: We don't take kindly to purveyors of physical activity here, and this person appears to run a free code CAMP
C: Perma-banning someone who runs a website as well-known as FreeCodeCamp, in a subreddit for web developers and up-and-comers seems a bit harsh. After a few years, unban him. Jeez, I'm sure he learnt his lesson, whatever he did. Nobody needs any answers.
C: And everyone who commented *oh shi-*
C: This. Checking his account history, back about 5 years, almost every post or comment he made in r/webdev either mentioned why FCC is amazing, or linking directly to it, or linking to Medium articles that promote FCC. His claim of wanted to answer questions is pretty hollow; he never did before, it was just a prompt to promote his platform rather than actually educate or assist with any substance. Self-promotion - even for a free resource - is not well-regarded here on Reddit. Ultimately, it comes down to what the Mods can tolerate. As his platform is already well known, and he was contributing in no meaningful way in the subreddit - along with blatant self-promotion - apparently it wasn't a good balance. Perma-ban seems harsh though. But we have to take him on his word that he wasn't previously warned or contacted since by the Mods
C: “No, you misunderstand. It’s not a camp! It’s a Computer Assisted Mastery Program!”
C: wait, how did he hit send????
C: https://www.reddit.com/r/webdev/wiki/faq FCC is also in the wiki
P: Time displayed as color
C: I saw a project a little while ago, where I discovered that the time (in format 00:00:00) works perfectly for hexadecimal codes. I decided to create a *very* small project using vanilla JS, to represent the live time as a color. Here's the source code: [https://github.com/JamelHammoud/hextime](https://github.com/JamelHammoud/hextime) Here's the link to the live site: [https://jamelhammoud.com/projects/hextime/](https://jamelhammoud.com/projects/hextime/)
C: Now make a time-picker control that's just a color wheel. :)
C: Hey! I feel like a lot of people don't know about it, but there's a built-in string function that can ensure the length of a string, and you can supply it a character to fill out the empty with string.padStart(2, "0"); // "2" will be "02" // "10" will be "10" so voila: const pad = t => String(t).padStart(2, "0") const clock = document.querySelector("#clock"); setInterval(() => { today = new Date(); hex = "#" + pad(today.getHours()) + pad(today.getMinutes()) + pad(today.getSeconds); clock.innerText = hex; document.body.style.backgroundColor = hex; }, 1)
C: “What time is it?” ... “Cyan”
C: Minor improvement suggestion: Use a monospace font so that the text doesn't move around :)
C: Hahaha, that might have to be my next ‘show off Saturday’ submission
C: This or turn on tabular nums
C: If you make it, you gotta put it in /r/baduibattles!!
C: TIL. For those who are interested in this the relevant CSS is .some-class { font-variant-numeric: tabular-nums; } Supported by all modern browsers ~~except for Safari for desktop which currently has the feature in preview.~~
P: [Showoff Saturday] I made a web app that allows you to watch YouTube coding tutorials undistracted and add notes to them.
C: Free and open-source. Would love for others to contribute. I built this to re-learn React, so the code is really messy at the moment! Website: [https://teachyourselfcode.io/](https://teachyourselfcode.io/) Repo: [https://github.com/jamesctucker/teach-yourself-code](https://github.com/jamesctucker/teach-yourself-code)
C: Well, that is really freakin clever actually. No need to pause every 2 secs. Well done!
C: that looks good ! good job dude :D
C: Funny, I literally just built a little thing that let you time sync notes to a YouTube video, but it was for writing lyrics to instrumentals. Good idea.
C: I ABSOLUTELY LOVE THIS IDEA!!
C: This is really cool. How do you filter the videos or get the right ones to show up?
C: I’d be happy to take a look and see what I could do to help!
C: Thanks! I'm really proud of the notes feature (if that was what you're referring to)! You can also click on the timestamp and it'll automatically take you to that point in the video so you can rewatch the clip for further reinforcement.
C: Awesome! Here's the repo: https://github.com/jamesctucker/teach-yourself-code. Sorry that the documentation is nearly non-existent. Will work on that this weekend.
C: That's what I meant. That you don't have to spent 10m. to watch a 5m. video just because to pause and resume every time the tutor says something you need to note! Bravo again!. Saved to lib for further use
P: SQL joins
C: This is what I look at when I need reminding : https://m.imgur.com/Hs9auHg
C: As someone who has been writing code for uh, a while. I still find myself sometimes just trying out left, right, outer join types until I get the result I was looking for. I mean, like 90% of the time it is just a left join but those edge cases can chew up a bit of time.
C: [A case against illustrating SQL operations using venn diagrams](https://blog.jooq.org/2016/07/05/say-no-to-venn-diagrams-when-explaining-joins/)
C: I just started learning SQL and the lesson explains SQL joins with these. Honestly I found it more confusing than just showing the output in the table.
C: INNER and OUTER keywords are a waste of characters IMO. there is no full inner join and there is no left inner join...
C: If you can understand and agree with this argument then you don't need these graphics.
C: [deleted]
C: From the top of the mountain looking down, that makes a solid case. From the bottom looking up, wtf? This is because venn diagrams and new learners naively assume the existence of a shared unique key between both sets. This is why my venn has US States in them. &#x200B; |Pacific States|Intersection|States w/ 10+ Representatives| |:-|:-|:-| |CA, WA, OR, AK, HI|WA, CA|WA, CA, IL, TX, OH, FL, GA, MI, PA, NY, NJ| Thinking about joins without such a key is a whole different animal.
C: Right? I'm perfectly fine with explanations that are good for beginners even while not being 100% correct, but these diagrams always made fuckall sense to me...
C: Also RIGHT is useless as you can just flip it around as a LEFT join. And cross join is rarely needed. So you end up with JOIN, LEFT JOIN and FULL OUTER JOIN and that's pretty much all you need 90% of the time.
P: Well boys, we did it. 30 resumes in. I am now a developer and not even in grade 12!
C: You could have custom devd a whole thing up for this, but instead you went fast, easy and custom looking in Excel? Sheets?. Your project manager is going to like you.
C: Wow congrats! Can you share how you prepped for the interviews?
C: Just wanna say thanks to the few people on here and elsewhere who helped me with the last interview here. This is one of the nicest subreddits I've found so far.
C: You did it, keep doing it, and when you can, return the favour for someone else like yourself, and the cycle of awesome will keep repeating!
C: Haha, I thought about making a system to visualize this but sheetsdoes it for you
C: Good idea, I'll make it it's own post!
C: Kid, if you think we are that nice, answer us this: tabs or spaces? Ha ha, just joking. But seriously, never answer this question on any programming sub. And congrats for the job!
C: I thought all the cool kids were doing this kind of thing in Airtable?
C: As a vet, this is the right mentality... you're going places my dude.
C: nah there's only like 3 of us, clinging to our adorable little relational database in a cold and unwavering Google Sheets world
P: TIL there's an HTTP error code that indicates that your server is actually a teapot
C: https://www.google.com/teapot
C: "420 - Enhance your calm" is also funny, was used by Twitter
C: The backstory is entertaining. Enjoy: https://en.wikipedia.org/wiki/Hyper_Text_Coffee_Pot_Control_Protocol
C: For those that like amusing codes, Twitter’s API returns a *420 Enhance Your Calm* error that is used when the requesting client is being rate limited.
C: It started as a joke, but in the day and age of IoT and smart everything it's now potentiality a response valid code!
C: Believe or not this is actually a April fools joke. But eventually they decided not to remove it.
C: OH SHIT YOU CAN POUR IT ON MOBILE
C: [deleted]
C: As a fun addition and for anyone who doesn't know, the very first webcam (or its precursor, anyway) was invented to watch a coffee pot, so people wouldn't have to trek all the way to it only to find it didn't have any coffee in it. [Wiki link](https://en.wikipedia.org/wiki/Trojan_Room_coffee_pot) The extent to which the internet runs on coffee is honestly probably understated even in memes.
C: > The editor Emacs includes a fully functional client side implementation of it Obviously
P: [Showoff Saturday] A generator for section separators with only css
C: My recent project I've finished this week: [https://wweb.dev/resources/css-separator-generator](https://wweb.dev/resources/css-separator-generator) Let me know what you think, or if you have some separator I should add to this ;) &#x200B; Edit: thanks for the gold and for all the kind replies <3
C: Nice man...How did you do the curve one ? Is it without SVG ?
C: Can you add a copy/save as button?
C: First, I'm guessing the settings part is not only CSS? Not to judge, simply out of curiosity. Well, I visited on my phone (using Chrome) and the browser consistently had an error rendering some parts, so you could kinda see what was going on. Rather interesting. [https://imgur.com/a/9kIqTiV](https://imgur.com/a/9kIqTiV)
C: Very cool project! Great job! Have you thought of the next step in this project? Maybe do the transitions next, with keyframes and cross browser compatibility. Just an idea.
C: Think it would be nice if you could see the code change real time as you move the sliders. Easier to comprehend the values that are changing that way. For me at least. Nice work.
C: yeah it's without SVG - you can check the code in the "CSS" tab :) It's actually only border radius &#x200B; Edit: or if you mean the wave it's two circles on the ::before and ::after elements with white and the other one background color (this was kinda tricky): [https://i.imgur.com/sjRoEpF.png](https://i.imgur.com/sjRoEpF.png)
C: There is a copy button on the HTML and the CSS tab for the code - was to lazy for saving, you could store your configuration on codepen :)
C: I thought of doing the same with generating svgs for fancier separators - but that's also a nice idea :)
P: Visiting Medium on a mobile browser. This is appalling.
C: I hate when websites push their app on you. I know you have an app. Can I just read the exact same content on your website without having to give you access to my device please?
C: [deleted]
C: This is just *the internet* 2019.
C: Nobody in power at medium has enough pants on to say "stop this" and so they will happily reduce their platform to obscurity. The effects of bad user experience will only be felt long term. Medium could have been the platform for earths most talented writers and everybody else. Not sure where they went wrong, but as of now they are a marketplace for promotional content, emotional-tale-tellers and marketing/tech-tutorials. At least medium can enjoy the neighbourhood of quora, which has become the best platform to receive relationship advice from indians in the milky way.
C: That's basically any website today. Tons and tons of overlays for: * GDPR * Cookie consent * Connect/log in with <InsertSocialMedia> * "Please please please install our app" * Newsletter subscription * Offer/promotion of the day * Live chat/Helpscout/Zendesk integration * Ad-blocker modal/overlay * "You have *n* articles left before you have to pay" modal/message * Quote of the day (fuck you Forbes)
C: [deleted]
C: Plus this is just a post, I do not see why the need of any native interaction
C: Like when you try to look at Reddit on the browser, but they force you to open their app. Then when you click open it takes you to the app-store even though you have the fucking app installed.
C: Yeah Medium had great potential and has now gone to crap. I had all my projects making parallel blogs there but have now completely abandoned it.
C: [deleted]
P: 10 Java Projects For Beginners
C: There was a time were I was always looking for what kind of project to do. and they are fun, but if you are a beginner, before projects on general, learn first how to TEST. Better, learn how to TDD. Think as testing as a way to ensure that you are actually providing a code that you can read later, others may look and understand you reasoning and most important, you will have to learn how to document your code and project. This will force you to learn how to build quality software (MIT 6.005 course is available in two modules @ edx - Software construction with java and advanced software construction with java) and consider your choices while developing your code. if you can stick to the testing first (TDD) approach, your projects will be more logical, will most likely be corrected and your code will look more professional without effort.
C: Thank you very much! I'm not very experienced in Java yet and such projects are exactly the kind of thing I need. Will definitively give them a go.
C: I will definitely check this one out... Thanks!
C: i was looking for something to do over the break! thank you
C: Sweet, I was just thinking about doing some simple games.
C: I was looking to find one like this just day before...TY
C: Im a complete newbie, what do you mean by test? Like add comments or actual testing someone elses codes?
C: What a goldmine. Thank you.
C: He means writing unit tests. If you write a function like “sum(x, y)” that returns them added together, you write a test to make sure when you pass it a random x and y, you get back the sum. Google unit testing for more info
P: A master list of project based tutorials for Java.
C: Hey thank you for this but if I do a project on that list is it good to put in my GitHub account ??
C: Great list. You should cross reference these with [https://github.com/danistefanovic/build-your-own-x](https://github.com/danistefanovic/build-your-own-x) if they aren’t all in there!
C: Thx ! Very interesting list !!
C: Some relatable example on reflection api would be cherry on cake
C: This is awesome! I’m only in the beginner stages in my coursework but seeing fun applications of the concepts makes me really excited to continue. Definitely saving for when my ability reaches the level where I can understand these.
C: Bookmark for later.
C: Thats a good question, I'm not sure. I put my homework on github. I would think that if you add a comment to the file saying which project these files are based on so that it's clear you're just working through someone elses project, that it would be okay.
C: I added stuff based on such projects to my GitHub. For example, the project may be something like a to-do list. Well I expand on it, add other functionality and then I can put it on GitHub, so that I can point to what I did on my own without following the initial project.
C: I'm no expert Im still learning, but I've heard that if you follow a tutorial to put your own twist on it and make it do something special other than just what is shown in the tutorial. Chances are that most other applicants would be following similar tutorials so employers would be seeing the same thing several times but if yours is different then it stands out! For example, instead of following the flashlight app and having it be able to turn on/off, maybe add the ability to make it flash in patterns or be able to change the brightness (if that's possible on whatever phone is using it?)
C: I give homework a pass because my implementation of the project specs is usually vastly different than my classmates. And we aren’t show how to do anything These YouTube tutorials usually shown you exactly the code to run the project
P: The definitive guide to java backend developer career path
C: Great roadmap! But I'm wondering.. if you mastered all 3 parts wouldn't that qualify you as a full blown java developer? I've got hired as a junior with only covering 2 bullet points from part 1.. this is just fuelling my imposter syndrome 😳
C: Thank you so much. It seems like I'm on the right path. I'm almost done with the stuff on part 1. Onward to Part 2 :)
C: What a good read thanks you’re a real G. I saved it for later, when I’m done with OCPJP exam
C: I appreciate your work. Will use this road map.
C: Thanks for the reading
C: Very good post. I made note of your blog and glad I came across this post just now. As you said, a lot of people learn basic Java and then jump right into a framework like Spring, which is exactly what I found myself doing. Now, I will spend some time going through some of the lower level stuff in part I to get an idea of what is going on behind the scenes before I jump into a framework.
C: 3 main paths you have Backend, mobile, Android. Then right after you have backend, Android, desktop. Which one is it? Also, Google uses kotlin does that mean it's the industry standard or will be?
C: I am curious, where are you finding jobs like this? Are the standards really that low in this industry? In my opinion, someone can learn basic Java (input/output, conditionals, loops, arrays, etc) in a weekend if they really wanted. Are there really junior positions that are willing to hire somebody with experience that you can gain in less than a week? Thanks.
C: After passing Associate, how long does it take to pass Professional exam if you study diligently?
C: I'm working for the german government. The standards here aren't that low and most private companies just ignored me. But to be fair, I was employed as a sysadmin for 5 years before switching into the public sector and having experience with powershell scripting/toolbuilding, databases and also some php sure helped. I also know how to sell myself and they thought I would be the perfect social fit for the team. Its not always your skill that counts but your passion and ability to socialise. Now I'm learning on the job and couldn't be happier. Better working hours, way more pay, work-life balance I couldn't have dreamed of and near zero responsibility.
P: Java cheatsheet
C: You rock
C: Great work! This is a great cheat sheet! You could add: - for each loop with Map.Entry - default: in switch-case
C: Few remarks: * You should 'program against the interface'. So `List<String> myList = new ArrayList<>();` * Stack and Queue are outdated deprecated collections, like Vector and HashTable. Both Stack and Queue functionality is in the [Deque](https://docs.oracle.com/javase/9/docs/api/java/util/Deque.html) interface (pronounced Deck), with for example the ArrayDeque as concrete implementation. * Having another try-catch block inside a finally is generally considered a bad practice. Avoid that. * Arrays.asList doesn't turn it into an "ArrayList", at least not java.util.ArrayList. I'd rephrase it to just List instead. You also seem to have based this cheatsheet on old pre-Java 8 information. So lambda's and default interface methods for example are missing. Not to mention all the things added between 9 and 15. I'd definitely recommend to, if you want this to be a 'complete' cheatsheet, add those too.
C: [deleted]
C: Oh, I like it! Great job.
C: Love it, good job man!
C: QA detected, please raise a bug :)
P: MOOC.FI has been updataed
C: FYI, I've stickied this at the top of the subreddit
C: Just looked at some of the future course material on github and noticed that they cover javafx, maven and various other things I didn't cover on my course. I'm very excited. It's amazing this exists and is free.
C: Looks good! However, I personally still recommend people to stick to the old version for now, since the new one won't be complete until May 5.
C: I am literally on the final assignment for the old course. Lol I wonder if it's worth going through this.
C: Yaay! thanks
C: I love that you just stickied a post with a typo in the title
C: I‘m probably going to do it again, just to refresh my memory, in my university break. I finished it 4 weeks ago.
C: I'm finishing up week 11 myself so I'm not too sure either. I reckon there's a lot of folks in a similar boat. If you decide to do it I'd love to hear how you get on!
C: Data is so important that we should do this more often: Accomodatae Validataion Dataing Candidataes Retardataion Sedataed Updatae Consolidatae Predataor
C: You do you, but that seems crazy to me. I'd use reference documents to refresh my memory.
P: Jetbrains Academy is offering a free 6month subscription. Great place to level up your skills
C: Totally agree. It’s an excellent place to start your journey into junior dev!
C: Can anyone say how much someone who has completed Mooc.fi would get out of it? Is it still worth doing it to learn something new or just for repetition?
C: [removed]
C: RemindMe! 8 hours
C: Thanks
C: Thank you !!
C: My impression is that that the intermediate/advanced content has a lot of topics that are industry skillset focused. JVM Internals, Networking, Logging, etc. I’ve done the first half of the MOOC (and looked over the second) and the MOOC is general more focused on programming concepts and language basics vs. coding in a professional setting.
C: Its project-based so you might find some things that are unique and some that are not.
C: It is project based, for each project there are lessons, if you have covered them you can skip them and try to solve the problem.
C: Thanks, I think I‘ll give it a look then!
P: Today I passed my Java certification exam!
C: That's awesome! How long have you been studying Java? What was the exam like?
C: Wow, huge congratulations! Were you new to programming in general or just Java? How long / how did you prepare for the exam?
C: Congratulations! :) Check out [https://www.redhat.com/en/services/training/ex183-red-hat-certified-enterprise-application-developer-exam](https://www.redhat.com/en/services/training/ex183-red-hat-certified-enterprise-application-developer-exam) for some serious performance-based testing. You can take a free mooc to get a feel for the exam - [https://www.edx.org/course/fundamentals-java-ee-development-red-hat-jb083x](https://www.edx.org/course/fundamentals-java-ee-development-red-hat-jb083x)
C: So can you tell us about how did you prepared for the certification exam? What was tougher than you expected. What will be your advice to others?
C: Congratulations!!!
C: Congrats HumpingAssholesOrgy
C: That's great!!!! Congratz!
C: Congrats
C: About a year or so, but not a lot as it was part of a class where the only grade was this certification. The exam is hard. It’s a lot of debugging and repetitive questions that ask you about data types, proper syntax, access modifiers, etc. To actually pass the test it took a lot more than the instruction I was given and I actually had to use my own experience.
C: I’ve been taking a java class for about a year, but it was a very laid back class. We got to take practice exams similar to the MTA, and once we felt we were ready, we could take it. Mostly I messed around the whole year and took the last 2 or so weeks to add to the few things I knew about java. Tutorialspoint.com was really helpful and I used it to make a study guide for the exam
P: Help to a desperate wife
C: public class HappyBirthday { public void printHappyBirthday(final int age) { if (age >= 30) { throw new OverTheHillException(); } System.out.println(“Happy Birthday!”); } }
C: [deleted]
C: If you will use candles on the cake, you can write 30 in binary using them. 30 in binary : 00011110 get 8 candles and only burn those that have value of 1.
C: if (age == 0b11110) { System.out.println("Happy Birthday, doofus!"); celebrate(); } The `0b11110` is the number 30 in base 2. Nobody would ever do that really in real life. It's just dorky, though. You could instead just say `age == 30`. You could also try something like a simple `ternary operator` which is the same control structure as a simple if/else block. return age == 0b11110 ? celebrate() : insertButtPlug(); Which is the same as saying in English, "If your age is equal to 30, then celebrate. Otherwise, get back to the grind.
C: "Sorry about my english" after the whole thing is written as well or better than most natives would write. I'm always so impressed by people who know multiple languages lol, im attempting to learn my 2nd 😂
C: Lol this one is good. Use this one
C: public void printHappyBirthday(final int age) throws OverTheHillException { }
C: Jut a heads up, but you might want to fix the formatting to avoid confusion.
C: Or leave out a closing brace. Or, write it in haskell and make fun of him for not understanding it.
C: Powered by Google XD
P: Willing to teach Java to new programmers for free!
C: This is cool. I joined the discord. I like the idea of real lectures and not pre-recorded things like Udemy (not bashing Udemy, they got me through college).
C: Tried to join but says the invite is expired...
C: This seems interesting. Do you also teach some CS? I want to join, but link expired
C: I am taking one of their classes and it was amazing! They give you live help in their text channels if you ever need it. All of the teachers are so willing to help.
C: Awesome! Hope you are able to learn something!
C: Ok, I think it is valid now!
C: [https://discord.gg/XEtpkQu](https://discord.gg/XEtpkQu) Here's another link, try it! If that doesn't work, shoot me a friend request on Discord @ aditya#0001 and I'll try to get it worked. Sorry!
C: Yep, we are actually working on creating a new class on Data Structures and Algo!
C: [https://discord.gg/XEtpkQu](https://discord.gg/XEtpkQu) Here's another link, try it! If that doesn't work, shoot me a friend request on Discord @ aditya#0001 and I'll try to get it worked. Sorry!
C: It is and I’m signed up. Looking forward to learning as much as I can, but focused on JavaScript/HTML/CSS and I’ve never even looked at or attempted to learn Python so maybe that too. Almost seems fortuitous, I recently decided on a career change and all these badass resources keep finding me.
P: Always use pen and paper when stuck with algorithm...
C: This. I also like to do debugging on paper XD
C: context?
C: When things aren't easy...replace the pen with pencil sharpener and eraser.
C: I am sure it can work well. I like walking away from the screen. Sitting in complete silence or with something like trance music etc mapping out the flow in my head.
C: Absolutely. Drawing structures really helps.
C: And don't forget to explain your probelm in detail to your rubberduck. Literally employee of the month
C: He wasted days trying to solve something easy as fuck because he didn't use a pen and paper.
C: I'm putting my bets on a dynamic programming algorithm
C: Feynman is proud.
C: Quality comment
P: Free course: Build 10 Java Beginner Projects from scratch Your progress
C: The straight up unabashed amount of bots in this thread is astounding.
C: big thanks
C: Am totally not bot. Much thanks human.
C: GREAT ! Thank you
C: The Java Masterclass is also reduced to 16€. I will give both a try.
C: 2EC5A6A9B48A31406313 Is the code for those of you who, like me, had the code removed before checkout. Might have been because I wasn't yet logged in, but still.
C: Thanks!
C: Thanks
C: Thanks a lot!!
C: Thanks a lott
P: For beginners: Don't start java from Udemy course "Masterclass Java" by Tim Buchalka.
C: That's exactly the reason why we don't have it in the recommended learning resources. The single best starter course is the MOOC [Object Oriented Programming with Java](http://mooc.fi/en) from the University of Helsinki.
C: > When it came to OOP, I was banging my head to the wall, trying to understand what he was saying. That's nearly everybody. It's a poorly explainable concept in general. It's always done non-practical examples and jargon-y terminology. I'm going on decades now of "learning to program" and I often time barely get the point of using OOP. Or rather some of the concepts I dont think I ever will or one can fully grasp utnil you need to make a complex program that involves *other people* outside yourself participating on your program(s). That being said I pretty much finished breezing thru the the "Java for Complete Beginners" by Cave of Programming recommended in the sidebar. It was very useful to me. I dont know if all beginner's still since I had an advantage of being familiar with various bits of programmimg from multi-decade failure lol. Also, I'm up this early because I've been reading selected Chapters of Head First Java 2nd Edition. That's been a really good help too. Surprisingly, well done from what I read. I actually appreciated a few of the extended non-essential sidebar explanations, ( although theyre definitely jargon-y too but theyre at a level that can be understood by potential CompSci students. and since it's in the non-essential portions you can probably skip over them)
C: fuck man, And i was here thinking i am just an idiot. I abandoned his course long ago, after trying multiple times to get thru. I learned better by creating projects and thru oracle's documentation.
C: Damn, thank you! I thought I was one of the few who was having this problem with learning this course. I spent months learning/trying to learn through that course, in the end I gave up. &#x200B; I was giving top priority to app dev at that time, now I'm in game dev and I even feel motivated with coding (although in another language). I felt like I've wasted so much time trying to learn through that course. And I even recommended that course because at the beginning it seemed so nice. Big mistake.
C: I had the same feeling when taking his course and expressed it one or two times in this sub. To me the explanation was so very confusing, hectic and sometimes irrelevant that I canceled the course and got a refund. There are better courses on Udemy about this topic or youtube.
C: I think understanding the concept of OOP requires lots and lots of practice by writing OOP code and then learn by improving it on each iteration. The code will probably be horrible from an initial perspective, but you'll slowly get better once you start churning out more and more applications written in OOP. If you can get a Book and learn the concept of OOP from there, and try to do the [MOOC.fi](http://mooc.fi/english.html) from the University of Helsinki (which is an excellent resource) btw, you'll get a good amount of practice. Also designing classes, and figuring it out which shoudl be the parent class, child class or what are the interfaces and abstract classes requires experience and intuition about the underlying system you're designing. You'll likely refactor your code several times and then arrive at a OOP design and take takes time to learn. Hope it helps!
C: Actually going through his course now, also had to do the same as you where I would find his explanation confusing. He often talks about a complex subject saying things in the most jargony, and roundabout fashion possible. Im not even at OOP section yet, and I've had to several times go and find another video which explained the subject better than he did. I also find it very annoying where he would start explain something and then say that actually we will learn about that in a later part, well why bring it up now?! While i'm trying to understand something else your just adding more things to the pile in a haphazard fashion. Some of the challenges he sets are confusing as well because he explains what he wants poorly. Its head banging against the wall frustrating, and based on what everyone here says I may just find a different source!
C: Speaking of which, the sidebars have not been updated yet for the new course
C: Wish I knew about MOOC (GREAT FOR BEGINNERS) before I started the Java Masterclass Program on Udemy. Tim Buchalka does a decent job explaining the basics, but OP is right on point when he says Tim starts getting extremely confusing when Object Oriented Program lessons start. His exercises for those are trash and WAY TOO VAGUE. There is absolutely no direction and you pretty much have to make a whole goddamn function from scratch
C: I ended up buying a book “Building Java Programs: A Back to Basics Approach (4th Edition)” by Stuart Reges. A golden book IMHO. Lots of easy to challenging exercises on every subject. The way they explain concepts and do a relatively major project at the end of evey chapter worth commending. Now I’m doing leetcode problems (although easy and medium ones).
P: [TUTORIAL] Building an application like Reddit using Springboot and Angular
C: Damn , i will definitely go through this tutorial , good job man!
C: Right on time. I was looking for SpringBoot and Angular tutorials. I hope it also covers JWT Authentication.
C: Thanks OP
C: Much needed one. Thank u very much. I will go through this toady.
C: Will try following this. Thanks
C: I have some knowledge about java, i mean I'm on my learning phase of java. I don't know about angular and spring boot. Can i follow this series??
C: This is exactly what I needed right now. Thank you.
C: Thank you :)
C: Yes it does 🙂
C: Just checked the Part 1, feeling good. Thanks
P: Advanced Java Programming course - free
C: Thanks heaps, I’m happy to give feedback once I sink my teeth into it.
C: exactly what I needed right now (JavaFx) .. WOW .. Many thanks. Ill go watch it right a way and give a feed back after.
C: Thank you very much! Can’t wait to get into it
C: Thank you! Cheers! r/HumansBeingBros
C: Honestly thank you!
C: Thank you Alex!
C: Thank you.
C: Thanks
C: It it provide certificate??
C: Yes
P: Started learning Java 7 years ago. Here's my progress as a coder/entrepreneur in 7 minutes (video).
C: [deleted]
C: Very good video, already subscribed. &#x200B; But, I feel like it was a bit clickbaity in the sense that you made it sound like you are going to talk about Java and your journey learning those things. Lovely video though, whoever shot and edited the video did a good job.
C: Loved this. Thank you for sharing and keep up the great work!
C: Awesome, very engaging! And of course you’re in MaRS
C: I like how you edit.
C: Why don't you get into DotA2?
C: What was the transition from Android development to having your game on iOS as well? Do the two go hand in hand, as in did you re-code the game on XCode, or did you create it on a cross-platform, or just port it? Enjoyed the video though, quite the journey.
C: You can do it too, it's not hard to fail many times!
C: Needed a nice techy backdrop to film in haha
C: I used Corona SDK when I started making games, and then later switched to Unity, so I never had to do much to port my games.
P: JetBrains Academy Java Track
C: I got downvoted for suggesting this like months ago when someone was asking for a learnjava resource lol Hyperskill is the best place to learn Java, and you get to build projects. I personally couldn’t get into Mooc at all.
C: I am at 12% of the course. Wish me luck. Yesterday , i wasted a day on stage 5/6 of coffee machine.
C: Give us the link you devil.
C: It is very good. I'm gonna try to get through as much as is reasonable before the paid service begins though, it's a little pricey for me.
C: As a js developer decide to give Java a shot to have better understanding for OOP and data structures, did one free udemy Java course and now going through this. Couldn't reccommend it enough. Generally learning Java boosted my programming skills since I'd say only learning Js was limiting my knowledge on some concepts and hell even knowong SOLID principes of oop helps in improving my front end skills in some way. I saw this jetbrains academy thing months ago and saved somewhere then tried to find it and couldn't, even asked on reddit, weeks ago i rediscovered it by accident again and I am very happy with it so far
C: I have completed about 60% of Java track at JetBrains Academy. This is my preferred site to learn computing. I highly recommend it. https://hyperskill.org/join/dee0c003
C: I’m only 15% through but I’m most proud of learning to use iterative arrays :) so handy to use
C: The coffee machine tests aren't perfect.
C: http://www.hyperskill.org
P: Learn Java in 500 Steps - Hands on Step by Step using JShell
C: thanks! i don't know how to use github but I'm gonna learn it.
C: This is useful to even brush up your java skills.
C: Ok i will use this today
C: Looks promising. Will try it out.
C: I'm a bit late to the party, but would it make more sense to keep a single set of steps? For example **Defining A Simple Method** could be Step 32. That way there is a sense of progression as you go from step 1 to step 150? Regardless, this is an amazing resource! The JVM definitely makes Java a bit trickier to dive into (compared to JS, Python, and Go in my personal experience) so starting with jshell was an inpired choice!
C: Just click the link and download the file
C: Github got their own tutorial kind of thing
C: Good Luck.
C: Link?
P: Some java interview questions and answers
C: Wow that was super helpfull.Do you have any familiar resources?Thanks.
C: \- May want to talk about how classes may implement as many interfaces as they want. \- May want to talk about why ThreadLocal makes thread-safety easier. Bottomline, it just allows to fetch back some variables without having to keep passing these variables (which may be seen as cumbersome) or keeping these variables in an accessible object (which may be cumbersome or not thread-safe). static also allows to fetch back variables from anywhere, but static variables are accessible from any thread which is therefore not thread-safe. A static ThreadLocal variable, on the other hand, allows to fetch that variable from anywhere, but each different thread works with its own dedicated variable without an access to the others'. One example would be DateFormat and how they change their own state when they do their work, thus making them not thread-safe. A statically built and accessible DateFormat will likely cause weird errors. The same DateFormat kept through a ThreadLocal and newly built for each new thread, won't have this problem. Of course, a better practice is to use newer java.time APIs, and before that, to just build a new DateFormat whenever you need one. It's cheap. Still, ThreadLocal helps in less trivial cases. \- Beware that singleton is an antipattern and some people will try and see if you notice that. If you only want one instance of an object, then don't make more than one. Duh. That wasn't complicated. The Singleton antipattern, on the other hand, gets in the way of integrating with other frameworks, and with mocking the singleton sanely enough. \- Note that the use for "native" methods isn't so much a matter of some functionalities being restricted to other *languages*, but rather to non-Java *libraries*. Other languages typically don't have better magical access to what needs to be done, and instead need to call some library code that was put there directly as machine code/assembly. In reality that will mostly amount to trigger a call to kernel routines, which is highly dependent on the system's architecture. And maaaybe to preparing the parameters for that routine and a pointer to it, which admittedly a language like C has its chances to do properly.
C: What always tripps me is that Java is supposed to be Pass by Value, but shouldn't it more correct to say it's Pass by Reference except for primitive objects? Because if I pass a method an argument and an change made to that argument is still there outside of the method it must be pass by Reference or?
C: I'm also looking for jobs as a senior gradating next spring and this was a really good read. Thank you
C: Thanks for sharing this. Are you applying for junior java developer position? Good luck!
C: Thanks! Very glad you liked it. Not really, I tried to add a few at the very end. But its been many more resources, I guess.
C: Thanks you! Really appreciate your feedback! These are good points. I'd like to add them as soon as I can. Yes, I am aware of these singleton antipattern discussions - In this case I'd try to be as neutral as possible since this is more about knowledge than opinions. I think its still worth to know the concept at least. In an interview situation I would share my opinion, although I have to admit that I didn't have too bad experiences with singletons so far.
C: I used to think this as well until I read Core Java Vol. 1. For example if Java was truly pass by reference: Object original = new Object(2); // outputs 2 changeObject(original); public static void changeObject(Object object) { object = new Object(4); // original is still 2 } The above code should change the original to 4, but if you run it, it'll still be 2. This is because Java copies the value of the reference of the object but does not exactly point to the exact address in memory like how pointers work in C++. If this worked exactly like in C++ where there is pass by reference, original should have changed to 4, but it does not. Idk if that makes sense or if I explained that right, but that's what I got from reading the book.
C: You're welcome! Thank you very much! I don't care too much about titles - more importantly, it fits me in terms of content and environment. Any specific reasons for asking? Is it somehow related to this post?
C: Of course it's worth knowing about it, more relevantly, it's true that you may be asked about them in an interview after all (and admittedly if you are, it's more likely that the interviewer uses it). It's just it is a pain in the ass to remove all the singleton antipatterns from a project when it needs to be merged with a new framework, or to find workarounds for when they'd better be mocked. That's unlikely to be discussed in an interview though. Now obviously, you wouldn't have bad experiences with singletons, as singletons are fine: they're object instances of classes of which you don't make other instances because you only need one. It's everywhere in application design. Services will usually be singletons. Singleton antipattern, though, even if one never found to have much problem with it, it's not like they brought anything of value either.
P: why do people hate java so much?
C: As simple as: > “There are only two kinds of languages: the ones people complain about and the ones nobody uses.” > Bjarne Stroustrup Every programming language has its haters. Java is no exception to that. Some of the haters were not capable of learning Java, some haven't even tried, some got used to working with "more convenient" languages, and others just jump on the hate train. Sorry for the following rude language, but it is best not to give a single fuck about the haters and to just ignore them. (In fact, quite a large number does not even know what they are talking about.) Yes, Java has its flaws. Yet, it is the #1 enterprise programming language for exactly the reasons you mention. Java is often considered a "boring" language - which is exactly what enterprise development needs. It is a rock solid language with a very mature, extremely huge ecosystem. Java is not moving as fast as other, more modern, more hyped languages, which is due to the fact that Java tries to maintain as much backward compatibility as feasible and also because it has to remain rock stable. Since Java is used in absolutely mission critical programs where the smallest instability could cause huge losses, the Java maintainers decided to move slower. Java is not flashy. It is just a silent, quite efficient work horse. Zero reasons to actually hate Java.
C: There are arguments for the "hate" Java gets but it's not a generalization, people hate C/C++/Python/.Net/JS for reasons as well because people are by nature haters 1. There are Linux devs that only like stuff in C, there are windows devs that only like stuff in .net etc. Refusal to accept that a language can do different things is one point 2. Java can be confusing, for example: what is the difference between JSP, JSF, JavaEE, JPA, Spring, SpringBoot etc. These frameworks / libraries / technologies can be confusing as hell for a beginner 3. Legacy code and xml hell. Before we had Annotations that simplify the work of configuring beans we had something like &#8203; <bean id="country" class="org.arpit.java2blog.model.Country"> <constructor-arg index="0" value="India"></constructor-arg> <constructor-arg index="1" value="20000"></constructor-arg> </bean> All cool and simple if you read a little about spring. Until you apps becomes 200 classes and your xml configuration is a sea of hopeless text 4) Too verbose Python: print "Hello" Java: public static void main(String[] args){ System.out.println("Already bored!"); } >is there still a future for java? Java won't go anywhere anytime soon so if you are asking if it's ok to learn Java the answer is yes. In 2020 we have better IDE (and I refer to Intellij, God help the ones with eclipse or netbeans) better frameworks and a lot of learning materials
C: I love java. I am in love with Java. Learnt a fuckton of languages over the years, but nothing comes close to being fun and useful to me personally as Java.
C: > why do people hate java? - many people use Java - Java is very verbose - null sucks > is java really dying? lol no and even if it were to die you'd still have newer languages like Kotlin that are very similar
C: >I personally really love java because of the OOP paradigm and it makes my codes cleaner. I'm a student who loves Java for the exact same reason. My first language was Python, because everyone says it's "easy to learn" and "a good first language." But OOP principles just didn't click until I learned Java.
C: As someone who started programming with Java a little over 5 years ago, and still loves and primarily uses Java. There are a couple of reasons to hate Java, that I don't mind seeing. I think my biggest issue with Java though, isn't about the language. It's about Oracle. Oracle just sucks. Also, Kotlin. I still love Java. But, with Kotlin existing, I do prefer to use that, by a lot.
C: Personally, I actually love Java
C: >(and I refer to Intellij, God help the ones with eclipse or netbeans) haha, totally agree with you! i tried eclipse once, and god i hate it. thanks for the answer, those make sense
C: Unglücklicherweise, Oracle sucks ass not only with java, but shows the same bad habits with the sql server.
C: Username checks out
P: Got accepted!
C: what is that?
C: congratulation!!
C: Awesome job! Congratulations! 🎉
C: [deleted]
C: Congratulations! Care to share your journey there?
C: Curious as well
C: Progmasters. Have you finished already?
C: Thanks! Long story short, I used to work abroad before covid, but then I couldnt, so I went after 2 friends of mine, who did this course and got a job instantly when finished.
C: lol
P: Best programming practice platform (HackerRank, LeetCode etc etc)
C: You can also take a look into hyperskill. Hyperskill allows you to choose a project and guides you into completion. You have four difficulties: easy, medium, hard and challenging. Good luck :)
C: whichever, I prefer leetcode but as long as you find challenging problems, its all good, you just need to keep your brain churning, also don't look too deep into this stuff, which framework is better than which one, which chair, which desk, which mechanical keyboard, which cherry switch, which whatever is better than the other one, they usually have their use cases and a 100 other things. if you know what i mean.
C: I find leetcode a little more user friendly because it's easier to create your own test cases in the ui but other than that they both (in part) use very well known problems from computer science. They're all good. Another tip: In Hackerrank you usually have to submit your solution along with the main method. To boost speed you can use BufferedReader instead of Scanner if it is used. There is a testcase in a problem (Dijkstra's Algorithm) where the time limit is exceeded if you use Scanner instead of BufferedReader
C: I quite like CodeWars, I wouldn't say it's much better or worse than LeetCode for problems but I prefer the aesthetic.
C: It might also be worth to check out the [community resource thread](https://www.reddit.com/r/learnjava/comments/md1loc/community_resources/).
C: * For when you are starting out- Codewars and Exercism. Exercism is CLI based and you can write code in your local machine and push it to the website directly from your CLI. And it has limited problems. * HackerRank for when you are at an intermediate and relatively advanced stage. I personally don't like HR, but people have benefitted from it. Same goes for CodeChef. * Leetcode for interview preparation related to DSA. * Cofeforces, Atcoder, SPOJ, UVAOJ, etc. for *hardcore* DSA feel. Take your pick based on where you are. I personally prefer Exercism, Codewars, and Codeforces.
C: I'm using hyper skill to learn java, and having zero experience programming I must say it's very intuitive and guided. I already completed an easy and medium project and just started 2 months ago.
C: Yeah I really found this to be true. What I recon lately is that there is too much discussion about the "best" and "optimal" approach to something, instead of just trying it. I think it's a comfortable distraction to avoid getting "your brain churning" without bad feelings, because "hey, I am thinking about it, okay?"
C: CodeWars is just fun. I like the community. It's always incredible to punch out something you think is pretty slick and solve a problem in 7 lines, only to find the guy who somehow condensed it into a single Powershell command.
C: amen brother! people don't realise that they usually won't have to worry about "performance" for a long time for most of their projects, twitter didn't switch to Scala after a year of being up, discord didn't rewrite their (something something i don't remember) to Rust replacing Go. just build and then scale, and optimise if your code or framework happens to be the bottleneck.
P: CaveOfProgramming is a damn good free resource
C: Cave Of Programming is awesome and beginners should use it along with the MOOC.
C: Derek Banas & The MOOC combined are a stupidly good resource that helped me pick up java really quickly
C: COP is da bomb. I also like Bucky. Lots of people don't like Bucky because he doesn't conform to programming standards but that in my opinion is where people go wrong. Because as a noob programmer, having him use the wrong spelling or writing stupid names at times can in fact (to me anyway) actually clarify what words have to be written in a particular way and what words are just any old word that you can make up. Which I felt sometimes watching other tutorials which were so complicated I'd be overwhelmed and then I'd watch a Bucky video and be like oh damn so that is just some random crap you wanna put in. Making it more understandable. Also I think initially just getting your head around things it helps to be able to just get the code to work instead of having to make sure all of your code is up to spec. Also like to give a shout out to Alex whom has recently received 100k followers. He is also a legend. Gives other advise, not just programming. So many youtubers giving their time for free (well at no cost to me anyway). Absolute legends.
C: Too bad he didnt cover Spring
C: Yeah hes not liked but overall i have him to thank for me learning how to code
C: I've been supplementing Mooc's JavaFX topics with his videos. Gotta say, albeit weird, they did clear up a lot of concepts.
C: Please, don't recommend/use thenewboston. They are a [discouraged resource](https://www.reddit.com/r/learnprogramming/wiki/index#wiki_discouraged_resources) as they teach questionable practice. They don't adhere to commonly accepted standards, such as the [Java Code Conventions](http://www.oracle.com/technetwork/java/javase/documentation/codeconvtoc-136057.html), use horrible variable naming ("bucky" is under no circumstances a proper variable name), and in general don't teach proper practices, plus their "just do it now, I'll explain why later" approach is really bad. [Derek Banas](https://www.youtube.com/playlist?list=PLE7E8B7F4856C9B19) covers about the same ground, but in much better quality. If you're looking for an in-depth, comprehensive, high quality, free Java course, use the MOOC [**Object Oriented Programming with Java**](http://mooc.fi/english.html) from the University of Helsinki and maybe [**Java for Complete Beginners**](https://www.udemy.com/java-tutorial) by John Purcell as secondary resource. I am a bot and this message was triggered by you mentioning *thenewboston*. Please do not respond to this comment as I will not be able to reply. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnjava) if you have any questions or concerns.*
C: Buckys isn't not liked for not confirming to the standards but rather not knowing how to teach. He teaches the things in a way for people to only memorize the things he is telling them rather than giving challenges for testing that knowledge of concepts and not blatant memorization.
C: See bot, that's where I disagree. Sometimes humans just know better.
C: Well, to be fair to the bot, he does recommend a different human.
P: Need to learn Java within a week
C: https://java-programming.mooc.fi
C: One of the best ways to learn a new language is to solve exercises and typical code interview questions with the new language. I highly recommend you just start solving problems at i.e., [https://leetcode.com/problemset/all/](https://leetcode.com/problemset/all/). If you are familiar with coding, basic math and some algorithms from college, you may have an idea how to solve the problems, and what remains then is googling how to do them in Java. This will also get you accustomed to typical programming tests. I might've suggested something else of you wanted to learn full stack Java development with typical project work, but in your case I think this is a really good approach. Either way, good luck!
C: Try https://hyperskill.org/ - it's platform from JetBrains that offers free courses with basic and project completion. Also I wish you best of luck and hope you manage to pass the test!
C: If it's a competitive programming test focusing on DSA and you're conversant with solving them through Python, I guess you could check out the [syntax](https://drive.google.com/file/d/1ao4ZA28zzBttDkuS6MLQI52gDs_CJZEm/view) and you're mostly good to go.
C: Exactly that. Was going to recommend the same.
C: I'll check this out. Thanks a lot!
C: This is solid advice! I agree solving exercises will get me accustomed to the kinds of things in Java that I'll need to use for the real thing. Thanks a lot for this!
C: Try this one: [https://www.udemy.com/course/java-the-complete-java-developer-course/](https://www.udemy.com/course/java-the-complete-java-developer-course/) It's very hands on.
C: The problem with this course is (although a Python dev should not worry) - while being very good - that it's absolutely massive and presented in semi-academic way. It also relies heavily on previous excercises instead of asking different solutions for similar tasks (different tasks improve actual understanding imo). That's why I put it aside at around 15% completion and started the Helsinki course, which I am really enjoying. Helsinki however makes it a tad bit harder to get feedback in case of being stuck.
C: Yeah, I noticed how massive the whole course was! This sub seems to have a lot of advocates for the Helsinki course, so finding someone to help us out if we get stuck shouldn't be a problem...I think!?
P: Junior java dev mistakes from real-world project
C: Nice post. One thing I've noticed though: @GetMapping("/user/{userId}/appointments") public List<Appointment> getAppointmentsForUser(@PathVariable("userId") int userId, @AuthenticationPrincipal CustomUserDetails currentUser) { if (currentUser.hasRole("ROLE_CUSTOMER")) { return appointmentService.getAppointmentByCustomerId(userId); } else if (currentUser.hasRole("ROLE_PROVIDER")) return appointmentService.getAppointmentByProviderId(userId); else if (currentUser.hasRole("ROLE_ADMIN")) return appointmentService.getAllAppointments(); else return Lists.newArrayList(); } Be consistent in your code style. In your first if, you're using curly braces, but in the subsequent ifs you're not. Always use curly braces even if they're one liners.
C: Thanks, good read. I’m a newbie and also preparing to write my OCA Cert Exam beginning of January. This was a bit advanced for me as I don’t yet understand maps and streams but I’ll save this and check it again when I become a pro.
C: Pure gold for newbies!!!
C: Thanks so much for compiling this! I am in the job for multiple years now and I'm still amazed how many people violate these. Especially returning null is very popular among many developers. As well as swallowing exceptions (e print stack trace). Both are absolutely horrible and will introduce a lot of errors downstream. Yet very seasoned developers constantly get this wrong!
C: On 2, I do absolutely love streams, but according to the articles I've read, you should still use regular loops if the loop solution is as readable and easy to understand as the stream solution, which it will sometimes be. Sometimes the for-version is even easier to read. When I was doing AoC day 17, my solution for both parts was taking about 40 seconds to run. I went ahead and replaced the streams with for loops, and the run time went down to only 3 seconds, without making it harder to read. That's still many times longer than my solutions for the other days, and there's probably a much more efficient algorithm I could use to cut down the complexity enough that using streams would still be fine, but I don't see any point in wasting performance if it doesn't improve readability, so personally I use for loops if they're at least as readable as streams. For example, this could be written in 3 ways: for (String line : indata) { ruleList.add(new Rule(line)); } ruleList = indata.stream() .map(Rule::new) .collect(Collectors.toList()); indata.forEach(line -> ruleList.add(new Rule(line))); Running 10 tests processing 136 lines, the average run times were (in milliseconds, in order): 2.55, 3.79, 3.01, and while that's not a big deal, I don't see any point in using the functional versions when they're slower and arguably harder to read. If I were to explain it to the duck, I'd say something along the lines of "for each line in indata, add it as a new Rule to the ruleList". The for-loop is the closest to matching that sentence. The .forEach is almost the same, but it moves "indata" up to the start, so it's not quite as good. https://blog.jooq.org/2015/12/08/3-reasons-why-you-shouldnt-replace-your-for-loops-by-stream-foreach/
C: > Always use curly braces even if they're one liners. Absolutely this.
C: I absolutely agree, probably I missed that because all I can see here is the lack of enum and switch statement:) I think I’ll create another post with things you guys spotted, before that I’ll of course create new PR and fix it.
C: Hi, thanks for this comment. You are right however I would add two things to that. 1. There is something like JIT ([https://aboullaite.me/understanding-jit-compiler-just-in-time-compiler/](https://aboullaite.me/understanding-jit-compiler-just-in-time-compiler/)) which optimizes your code in runtime over time and afaik it will probably optimize this stream to for loop 2. Sometimes you might use .paralell() with your stream which will give you even faster results than the for loop but the disadvantage is that they run in common fork-join thread pool, more details here [https://dzone.com/articles/think-twice-using-java-8](https://dzone.com/articles/think-twice-using-java-8) In software development there is always a tradeoff, here is a pretty nice example of readability and simplicity of code vs performance
C: Good point! Simplicity is important, and often doing things in the most direct and clear way is best.
C: That's fair, although based on the runtimes, this one does not get optimized. The difference is not huge, but it was clear and consistent. EDIT: Actually read the link now, I guess you might be right. I thought the JIT only ran once, I didn't realize that it kept optimizing over time. Thanks!
P: I'm ashamed about how bad I'm at programming...
C: It's just repetition. Build more projects, do more tutorials. The more you do the better you'll get.. no one is just born a talented programmer.
C: Things click slowly, practice it you got it! You'll learn lots of little behaviors, but you will also hit milestone breakthroughs in understanding. Your dad is explaining from a different perspective because he's hit those milestones so he views it different, trust me you'll get there.
C: You shouldn't be. Keep going! You got this!
C: i was in the same boat last year when i started learning software engineering at college literally for the first 2 months i did not know what i was learning then it just clicked just practice and repeat everything repeats untill you reach a point that you got everything also three more things that helped me compare the code to real stuff in real life like objects and methods, if you are not sure if you can do a project just start it and when you reach a wall you can watch a tutorial or a documentation on what is stopping you just start typing code for now and do the simple stuff first and lastly something that helped me a lot with arrays is draw the array and try to draw what happens each loop or what you are trying to accomplish this will make arrays 10x easier also good luck and dont worry and just go for it by time you will have your own ways
C: Every programmer feels that till they die.
C: Also, don’t feel bad if you have to review a lot of basics over and over again until it starts to make sense. I was in your same shoes until a few months ago. Also working on a Java program for school. I reviewed and worked on a lot of basic stuff and watched videos of other people building stuff out and talking out their thought process. My degree is online and self paced so I was able to kind of step back and focus on basics before moving forward. Maybe consider doing that on your free time as well.
C: That's true, I try to watch videos but it doesn't always stick (only for a short time)
C: Can attest. Though it is nice knowing other people are miserable with me.
C: Watching videos just to watch them generally isn't that useful. The thing that really helped me learn was finding a project that I was excited about, and asking "what's the next thing I can do to building this". One of the very first programs I wrote on my own was a simple guess the number game. The game would ask the player how many number to guess from. For each guess it would tell the player if they were too high or too low. It kept track of how many guesses the player took to win the game, and at the end if they took too many guesses it would insult them.
C: Looks like you’re in the stage where you like to talk about learning instead of learning. It’s good to vent. Then after continue reading, watching tutorials, and practice more. Because the former does not get you better.
P: A new series on completable Java projects for beginners. First up: finding duplicate files
C: Ooh, shiny. Thanks for the information. Unto the pile of neat project ideas you go.
C: Thanks for the information. :-)
C: Thank you, this looks awesome
C: Thank you so much for sharing this. Exactly what I needed right now
C: Thank you!! This seems amazing.
C: [removed]
C: Re-implementing the wheel is a great way to learn, that's the point of those projects.
C: That command does *nothing* like what the article describes.
C: [deleted]
P: Full Stack Java Development with Spring Boot and VueJS
C: I really enjoy programming with java so i might give this a go.
C: Thanks! Bookmarking this for when college semester is over
C: Nice! I also think this approach (single deployable packaging both frontend and backend) is pretty underrated. Especially for smaller / internal use apps, where you're not so worried about serving the static content super-efficiently, this is a really pragmatic way to do it.
C: Nice one, Dan - I've been tempted to give Vue a go & your enduring enthusiasm for the framework makes me think this would be a valuable skill to have.
C: I completely agree. Architecture choices are a combination of requirements and the makeup of your team.
P: Roadmap to learn Java in 6 months to be employable
C: To increase your chances of employability in your pursuit, you'd require skills in: Coding, Data Structure & Algorithms, Software Engineering and Software development life cycle. \- For coding in Java I find two sources that standout amidst the sheer volume of materials out there, do them both in that order: [MOOC FI: Java I & II](https://java-programming.mooc.fi/) [JetBrains Academy](https://hyperskill.org/curriculum) \- Data Structure and Algorithms there are plenty of good sources: [MIT: Intro to Algorithms](https://www.youtube.com/playlist?list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb) [freeCodeCamp](https://www.youtube.com/watch?v=RBSGKlAvoiM) [Coursera Specialization](https://www.coursera.org/specializations/data-structures-algorithms) [HackerRank](https://hackerrank.com) and [Leetcode](https://leetcode.com/) &#x200B; \- Software Engineering principles, SDLC, Design Patterns and Agile practices. [Software Design and Architecture Specialization](https://www.coursera.org/specializations/software-design-architecture) Also, [Georgia Tech's Software Development Process](https://www.udacity.com/course/software-development-process--ud805) &#x200B; You now know for sure this gonna take a while \~ 1 Year full-time. Just start somewhere and keep pushing. You really gotta put your heart into this from the beginning.
C: Get the book "crack the coding interview". There are free .pdf versions online. Learn enough Java to where you're comfortable solving several kinds of algorithms, and have a few projects that you've written on your own, preferably ones that take user input, store it in a database, and then retrieve it and show it to the user. At that point you should be ready for an entry level job.
C: From zero? It's extremely unlikely companies will hire you for Java development by just self-teaching for 6 months. Keep in mind that these kinds of companies generally work on rather complex software and are looking for software engineers, not 'programmers'.
C: Probably not something you want to hear, but I believe it going to be a little difficult to learn Java in 6 months and be job-ready.But I can offer you a little strategy to start. You haven't mentioned that if you have any prior coding experience, assuming you don't. I would suggest starting with a book, Cay Horstmann's is my favorite when you little ahead, start with an online program and follow along. While you feel you are confident navigating different aspects of that language start with data structures & algorithms, learn each of them with care, get comfortable with writing them, implementing them on your own. After that, I would suggest starting a little on design patterns too. I hope this helps and once you are confident enough to start solving leetcode / hackerrank problems, spend time with that along with your study.
C: Speaking as a beginner with maybe 8 months behind me (alongside work and school). The roadmap is having a shit ton of time within those six months. Incredible focus. Good discipline and good learning skills I like how I’ve progressed. In a way that I try to truly understand what I’m learning and not rushing to learn exactly the technologies I need for employment. I did mooc. Learned a little bit about programming and OOP. I read head first alongside. Then I started cs50. I’d say do this first, but at the same time I feel like I absorbed cs50 and c better with a little bit of java knowledge. On the flip side c knowledge will help you learn and appreciate java. So even though it’s a roundabout way. I like how higher level to lower level and back to higher level is panning out. I’m currently learning DS in C for an under the hood understanding, then I will get into the algorithms in java Again. This is from a beginner perspective. And I can confidently say I am no where near in a position where I would be or would like to be employed in this field.
C: Start here: [https://java-programming.mooc.fi](https://java-programming.mooc.fi)
C: I've been using JetBrains academy and an app called SoloLearn on android (also, free). They are both awesome, and I highly recommend. Jetbrains gets you into using the IDE, and I use SoloLearn to help reinforce things I learn through little quizzes. Thanks for the list of more resources, Hoxeon! Have you ever heard of exercism.io ? Seems pretty intimidating, but very interesting.
C: [deleted]
C: Yeah I’m with you on this. Learning a bit of code to automate something isn’t too hard but working on bigger projects takes knowledge of algorithms, data structures, some math, design, a lot of troubleshooting. You require a wide breadth of knowledge to truly be effective and all these online courses paint a rosy picture of “become an engineer this weekend while learning python” which is misleading and detrimental. Not trying to rain on their parade but you can’t reasonably learn this stuff in such a short period.
P: Everything a self-taught developer shouldn't do
C: I’m wondering how someone could learn programming for 4 months without knowing what object oriented programming is.
C: This is actually really helpful
C: interesting article! I figured out a lot of what this guy is saying....Im trying to make a career shift from Chemistry to Game and app development. What this guy says about learning the basics is very true. Really learning the basics will make attacking more advanced concepts like 10 times easier because you arent lost in simple definitions. Its definitely worth your while to take your time learning than rushing through the learning process. Ive personally found it fulfilling to take my time combing through core Java. Since taking my time, Ive noticed that a lot of things that completely went over my head while trying to dabble in Android now make complete sense. Patience is a virtue if you really want to be great as a developer. If you have a career that pays the bills already, use that as a foundation to work on being a good developer. Ive been working on really understanding java for about 3 months so far and im gonna give myself about 5 months more of learning and building before finding something more advanced to learn from then pursue my OCAJP.
C: Damn, curiosity should be the Main reason after all, to go into coding. I always struggled to get into development due to my laughable math skills. It seems that I was obsessed with math and what not but forgot the most important thing - the curiosity itself. Food for thoughts for sure.
C: This is good advice for someone struggling with even basic syntax
P: 10 Best Java Books in 2019
C: Java also have a free creative commons Java book Source: [https://twitter.com/java/status/1041540247111327744](https://twitter.com/java/status/1041540247111327744)
C: Dietals How to Program is really good and covers data structures a bit. It's not a rigorously deep text but the content comes across as caring about the student's learning. I will be purchasing his Android text next once I finish Java.
C: Mods should sticky this thread.
C: I personally would put Spring in Action way ahead of some other books on this list, for the following reasons: 1) The grand majority of Java jobs in the industry will be Spring based projects. Sure Spring is not Java, but I'd argue Kotlin also isn't, and Spring would be more useful than Kotlin as far as finding an entry level position. (Keeping in mind this subreddit is for beginners) 2) I can't think of another series of books that is as up to date and keeps up with the changing tech landscape as well as SiA. There are 5 versions of SiA. Every time Spring goes up a version, the books gets updated and a new edition is published. You get to avoid so many headaches that are so common to reading out of date tech books. 3) It's an absolute gem. Be you a beginner, or advanced Spring user, everyone can learn a great deal from this well maintained, up to date publication, and greatly written publication.
C: I would rule all these books out over Introduction to Java Programming and Data Structures by Y. Daniel Yang. It's a comprehensive version consist of basically everything what's out there in the java world.
C: Wow, thanks for the link. Upon first inspection this looks really amazing. Do you have any experience how well received this is? For me this looks awesome since I mostly would use it to reference to specific topics. But not sure about absolute new comers.
C: Thanks for your suggestion. That is the main reason why I posted it to reddit. I agree, for finding a job Spring is the way to go. I will update the article in a while and make sure to include SiA. Probably also add something like "Cloud Native Java".
C: >I would rule all these books out over Introduction to Java Programming and Data Structures by Y. Daniel Yang. It's a comprehensive version consist of basically everything what's out there in the java world. An issue I have is that I am not self-taught and therefore I never had to learn them on my own time. A lot of these Basics (as algorithms and data structures) were more or less just mandatory for my studies and thats why I never needed to pick up a book (outside of the lectures) . Like I stated, I want to improve this article over time, I will try to get my hands on it and see if I can recommend it. Thanks for your input. Much appreciated.
C: Most people are self-taught on this subreddit. Some are even absolute beginners, like you say, so absolutely should include books like this one. I'm starting off with Clean Code and, although I have a good foundation now, would like to read that Java Programming and Data Structures book. &#x200B; Thanks for the list OP!
P: Is there a site similar to CodeWars but to learn Java's API and other programming things rather than pure math algorithms?
C: [Codingbat](http://www.codingbat.com) has a lot of exercises that are more API-centric. The learning curve is pretty comfortable, but most of the problems don't have an "I give up, show me the answer" button.
C: https://exercism.io/tracks/java
C: Hackerank
C: Hackerrank perhaps
C: Wrong link, remove the %20
C: You can find an answer for any of them by Google ngl the premise
C: Bamboozled by my tiny phone keyboard. Thanks for letting me know.
P: Oops, suddenly Java dev
C: Oracle is offering a Java course for its 25th anniversary. You should check that out since it is a pretty good course and made-up of quizzes, video lectures, and associated material as a book. There is also a discounted Java exam associated with it. Link to course: https://education.oracle.com/java-25th-anniversary-discount-redemption Edit: Typo & Link to course
C: This is a good thing in disguise. More java experience is good and learning it as well. What you need to do is become comfortable with Java over the next 6 months to a year, do some interview prep and jump ship (or get an offer and use it to negotiate for more money at your current job). Also remember to push back on deadlines if they feel unrealistic. If you already have some programming knowledge I'd recommend you watch this video : https://www.youtube.com/watch?v=WPvGqX-TXP0&ab_channel=DerekBanas Also IDK what IDE you use, but if you want to use Eclipse for the purpose of the above video that's fine, but almost every company uses IntelliJ (just pointing this out as IntelliJ is way better than eclipse imho and more widely used).
C: In my honest opinion, you should tell your boss sooner rather than later. It's okay not to know something. You don't want it coming out any later than it needs to. Also, what is your background? Are you a dev and just haven't exactly worked with Java? Personally, I would not want someone working on a project that doesn't understand the language in use ... Imagine a strictly English speaker trying to run a negotiation in a foreign country. If you keep trying to "Frankenstein" it; you're likely gonna make a future dev's life a living hell.
C: I would inform the boss person about risks and upcoming studying you need to be working as java dev. And just in case maybe check existing java vacancies and check what is required. I bet there are things like git, gradle, springboot, jpa, rest and other spookie things. Depending on that learn things and negotiate the way to solve prod issues if you hit a limit of your knowledge. Like could you consult with the author person maybe in such case?
C: On Udemy there is Tim Buchalka's Java Masterclass, buy Udemy courses on sale because they're all like $200 but regularly on sale for $20 (seriously). There's also Pluralsight which I highly recommend, and they have a Java path. There's also the Helsinki MOOC which used to be the hotness and I think is free, but I never tried it. Good luck OP.
C: Thank you for the post. I wish I knew about this sooner. Currently a junior Java developer. Do you think it's possible to take this test with 1 month of prep? We are currently using Java 8 and the Spring framework for backend development at work.
C: Haven't touched java since JDK 1.4. Does the IDE matter a lot? I think I used jdeveloper then.
C: In my opinion, there is nothing wrong with trying. Even if you can't pass the exam, you would have learned a lot during the course. The total course content is about \~35 hours so 2 hours per day along with practice would be more than enough. The main point here is to learn since skills are the main determinate of your position in the software industry.
C: Plain and simple most people use IntelliJ so that's good enough reason for me to use it more. Other than that the dependency management is better, the plugin manager is better (for my case my company uses a custom plugin with IntelliJ), and I like the debugger more. I haven't used Eclipse in ages, but the last time I used it, it was for C++ which was pure garbage.
C: It matters that you use a modern IDE, but which one you choose is less important. Intellij is popular. Eclipse and NetBeans less popular but still functional. They help in big ways. You don't have to remember how to spell or remember what methods are available, because the ide will autocomplete and list available suggestions as you type. It will also search across the entire code base to do things like rename a variable (in all files where it is referenced) or find all usages of a method (in all files). It's still of course possible to write and compile and run Java without an IDE but the level of effort and time to get the same outcome in a large codebase would be much higher.
P: Spring Boot REST API Using JPA, Hibernate, MySQL Tutorial
C: Thank you for this! I notice you just started blogging about Spring. Keep up the good work bro!
C: Thanks for the tutorial. Is it possible for you add in how to handle the file upload with images and how it is stored in the database in the correct way? Tks
C: Wow thanks. This is exactly what I was studying nowadays except using Gradle instead of Maven. It'll be a good practice for me.
C: Good work bro ! Keep posting
C: Wow nice, keep great work!
C: Good one.
C: How can I make the STS show me more versions of Springboot? I want to create a project with Spring 2.3.2 but the closest one it shows available is 2.3.5
C: You guys gotta get into that reactive spring stuff it’s the real deal
C: Yeah, just trying to share my knowledge which gathered working with Spring for more than 5 years.
C: Im writing one with storing in database and AWS S3, will share soon,
P: Think more, write less
C: The other side of this is that it's possible to think too much and not make progress in getting some kind of code up and running to be able to test. I would argue that it's common for intermediate level programmers to think too much. Think, then write, then test, then think again. This is the eternal cycle of programing.
C: Someone watched Hamilton this weekend...
C: Think that should be: Write less, Think more, Don't worry about your code or what it's good for...
C: Haha i do the same! I usually like to take my dog for a walk and it really makes me super productive when I come back! Especially when I have a huge problem to tackle
C: Rich Hickey calls this [Hammock Driven Development](https://www.youtube.com/watch?v=f84n5oFoZBc).
C: This a typical example of Focused vs Diffused learning. When you have are Focused staring at your computer and trying to think it doesnt let your mind wander much. When you walk away from the computer just opening up your thoughts a bit more your creative juices start flowing and helps you think in more different ways.
C: I've been known to get stuck and unable to choose between multiple possible implementations so I walk away and argue it through (out loud) with the one who isn't there which doesn't take too long. I mostly work at home these days so it doesn't weird people out like it used to!
C: Pardon me, are you /u/awkreddit \-or, sir?
C: This is actually a widely used strategy. https://en.wikipedia.org/wiki/Rubber_duck_debugging The idea is that you talk out your thoughts with a rubber ducky, and in many cases it actually does help.
C: I don't always talk to myself, but when I do it is because I need an expert opinion.
P: 100% Free coupon for Practical Java Course: Zero to One
C: Thank you!
C: Do you cover OOP? I seem to have a lot of trouble with that.
C: Thanks. I'm currently using [this](https://www.coursera.org/learn/cs-programming-java/) course on coursera so it'll be interesting to compare the two
C: Thank you so much.
C: Thank you!
C: Thanks a lot :)
C: Thanks a lot, I will definitely provide you with some feedback as I progress in the course.
C: When will you add new levels?
C: Currently, the course has one level, but it'll be updated to 5 levels. OOP is not in the first level. In the next level, I'll add OOP and will be explained through practical examples. I know OOP is one of the most important part of Java, but I decided not to add too much content to the first level. I think dividing the content into levels can help a lot because it's easier to digest and see the progress.
C: That makes sense. The course looks awesome Btw!
P: MOOC saved my ass
C: This is a good story. I too am experiencing this; I recently got my first job as a junior developer working in Java. Every *single* day is a struggle because every day I have to do something new. So I sit there, go "How do I implement a regex into a Java application?" and then I read S.O. and the Java docs and Google pages for hours. Then I come up with a few answers and try them all out. Sometimes they work. Sometimes they don't. Then I present my successes/failures to my boss, and he helps me understand what went right/wrong, or shows me a better way to do it. It's a really amazing feeling to realize, you can learn *anything* if you put in the work and ignore the voice in your head that tells you "You can't do this."
C: It's a great feeling. Chase it to the ends of the Earth
C: I really needed to hear this! Thank you OP! I’m going to really try on MOOC now.
C: Which MOOC?
C: Wait for the second half, those easy first gains disappeared for me. I've been stuck on week 10's final exercise for days now, and finally at 5am today I think I have a pseudo code solution. Worth it though!
C: I feel totally the same way. I work as a front end dev and I am trying to learn java as my work uses it on the back end. I went through the MOOC courses before starting my CS masters program(business undergrad). They expect you to know how to code in java, I finished Helinski MOOC just in time!
C: I'm halfway through it, it's really good, you should.
C: [deleted]
C: Dude I’m looking forward to it. It can be so infuriating, but when it finally works.. Such a great fucking feeling.
C: Yeah thats the ones.
P: Can someone explain to me what constructors are?
C: Dumb questions are totally okay. Everyone has to start somewhere. A class is like a blueprint for an object, it tells you what fields and methods it should have. Once you have a class you can create multiple instances of it, and each instance can have different data. For example you might have a class Enemy that has a health pool and a damage value: public class Enemy { private int health; private int damage; //... } A constructor is a method that gets called once per instance and only when that object is being created. It lets you initialize values before the object is used. //this would go inside the Enemy class, just below the private fields //Unlike other methods, constructors have no return type public Enemy(int startingHeath, int startingDamage) { this.health = startingHealth; this.damage = startingDamage; } Now you can create Enemies using the constructor: Enemy goomba = new Enemy(1, 1); Enemy bowser = new Enemy(25, 3); goomba and bowser are instances of the Enemy class, and each have totally separate values for health and damage. Let me know if this makes sense or if you have more questions.
C: Some pretty thorough responses already posted but I'm going to chime in with a very basic explanation. Let's say you are writing a program to build a city. In the city you have "classes" which represent items you find in a city. For example there is a class for "buildings" which defines the characteristics of a building (address, windows, doors, stories, whatever), there is a class for parks that defines what a park has, a class for cars that represent all the features required for a car, etc etc. Now you have a class that defines what a building is, but you haven't built any buildings yet. So inside of your building class you write a constructor that creates new buildings, defining what the address for that specific building is, how many windows it has, how many stories tall, etc. So, anytime you need a new building, new car, new park, etc you call the appropriate constructor and give it the required specifications.
C: Constructor is the code that lets you create a class (an 'object') and will perform any setup that is needed before it can be used. Also known as initializing an object
C: I just took my first Java course so I’m not an expert, but my understanding is that a constructor creates the framework that allows you to create objects from that class. If your constructor has parameters, you can include those when you create your object in a different class. So a line of code like: `Class class = new Class (param1, param2);` Creates a new object “class” of class “Class” with parameters for your predefined values. Hopefully somebody more knowledgeable can expand on this, but that’s the gist of it.
C: I ramble quite a bit and this probably isn't the best example but, hope it helps you understand constructors a little better. Hopefully I didn't leave any typos! Say you're making a batch of sugar cookies and you have two batches of dough (one extra sweet and one regular sweetness). You have 2 cookie cutters, one is star shaped and one is circle shaped. A constructor for this scenario might look like: `Public class SugarCookie() {` `String sugar;` `int flour;` `string shape;` `public SugarCookie(int sugar, int flour, String shape) {` `this.sugar = sugar; this.flour = flour; this.shape = shape } }` (sorry idk how to indent properly in the reddit text box) To create a sugar cookie, you'd utilize the constructor I made `public SugarCookie(int sugar, int flour, String shape)`: `SugarCookie sugarCookie1 = new SugarCookie("extra sweet", 10, "star")` Now I've created an individual cookie (object) called cookie1 using the SugarCookie constructor because this cookie I'm creating is a sugar cookie. The "extra sweet" = how much sugar is in the cookie, 10 = flour, and star = shape. Now let's make another cookie using the SAME batch of dough using the other cookie cutter. `SugarCookie sugarCookie2 = new SugarCookie("extra sweet", 10, "circle")` Notice the only difference here is I'm inputting a different shape because we're using the same dough. BUT they're both using the same constructor because they're both SugarCookies. Last example...let's make a star shaped cookie with regular sweetness.: `SugarCookie sugarCookie3 = new SugarCookie("regular sweetness", 10, "star");` Actually, let's make two of those. `SugarCookie sugarCookie4 = new SugarCookie("regular sweetness", 10, "star");` I'm still using the SugarCookie constructor because what makes our cookies doesn't change from sugar cookie to sugar cookie; every cookie is defined by the sugar, flour, and the shape of the cookie. Now that you have 4 SugarCookies, you can reference each one individually. Even though sugarCookie3 and sugarCookie4 are functionally the same (they're made exactly the same) , they're still two individual cookies. This means you can reference each cookie individually. e.g you want to eat your extra sweet cookies first: eatingACookie(sugarCookie1); eatingACookie(sugarCookie2); &#x200B; I'm probably too new to programming to be able to put down the literal purpose of a constructor but hopefully this example helps.
C: A Java constructor is special method that is called when an object is instantiated. In other words, when you use the new keyword. The purpose of a Java constructor is to initializes the newly created object before it is used. Also I use the channel with quiz questions which helps me to practice similar questions https://t.me/topJavaQuizQuestions
C: This is a great, straight forward explanation.
C: This was perfect! Thank you so much.
C: Great explanation!
C: The best thing about this example is it really explains how to use classes I think. Classes actually used to really confuse me until I took a course in programming. Without explaining constructors alongside I always used to think it was pointless to make multiples of the same object with the same parameters. While I'm sure there's a use for that last scenario, it's a lot easier to understand that I'm making a thing that produces a lot of slightly different things to fit my purpose, and that's really hard to get without knowing what use the constructor has.
P: Website for practicing Java?
C: https://geeksforgeeks.com . https://hackerrank.com . https://hackerearth.com . https://codechef.com . https://codeforces.com . https://learnbyexample.com . https://dmoj.ca . https://codewars.com. These are some websites for practicing coding EDIT: including suggestions from the comments https://www.baeldung.com/java-tutorial
C: start here and then move on to the links in the other comments https://codingbat.com/java
C: Derec banas on YouTube is really good
C: [https://practiceit.cs.washington.edu](https://practiceit.cs.washington.edu) this website is useful for practicing
C: ## Competitive coding sites The `open problems` column is not accurate. What I mean by NO is that the site is mostly a contest site and it's hard to find the free, open problems. Don't make me click through 5 pages, register with your bad UI to find the problems. `stdin/stdout` is that most of the sites do not require you to read input and write to stdout. Leetcode just wants you to return an array. | website | open problems | stdin/stdout | # of langs | # problems | comment | | ---------- | :-----------: | :----------: | ----------------: | ---------: | ------------------------- | | Kattis [1] | yes | yes | 21 | 3000 | best stats, no editorials | | Codeforces | yes | yes | | 6000 | decent stats | | Leetcode | yes | no | 20 | tons | tons of plagiarism | | Atcoder | no | | | | contest site | | Codechef | no | | | | | | Codewars | yes | no | 31 | | nice editorials | | Hackerrank | | | | | | | topcoder | no | | | | confusing search | | Codesignal | yes | no | | 800 | great UI, has SQL | | usaco [2] | yes | | c++, java, python | | great resources [3] | I do kattis. I tried 2-3 of them, and what I do not like is the confusing environment on leetcode. I get confused on how they want the class or method setup. Or if I can use global static variables (it was buggy, sometimes it would accept it). Sites like kattis and codeforces you can just drag/drop 5 files if you wanted. [1] - https://open.kattis.com/problems?order=problem_difficulty [2] - https://usaco.guide/silver [3] - https://usaco.guide/general/resources-cp?lang=cpp
C: [W3Schools Online Web Tutorials](https://www.w3schools.com/) is good
C: I would suggest you pick up one website (and make sure you can find editorial for all the questions you do) and focus on completing it. And you can give competitions on multiple websites and make sure you solve each and every question of competition after the contest is ended. Some websites for competition are- 1. Codechef 2. Codeforces 3. Leetcode 4. Hackerearth
C: This should be on the about section of the sub
C: Codegym.cc
C: Codingbat is amazing!
P: Create a RESTful Movies API using Springboot and MongoDB
C: Pretty cool tutorial, I understood everything, even if I'm not Java developer (I know basic old Java, those annotations are new for me) Maybe you need to fix some typos (like "spceifically" and some others), but I really enjoyed the reading. Kudos
C: You should lower case you package name to avoid conflict with classes.
C: Cool A full series will be really helpful
C: Wow the article is simple and easy to follow, great work.
C: Please keep it up !!
C: Awesome thank you.
C: Great,thank you. Also I have just heard that useful lombok package which i didn’t know before.
C: Good work mate, thanks for sharing!
C: Its still just Java. Lombok is a library that creates some shortcuts that you would be used to making, like building getters and setters for an object. The remaining annotations is how Spring talks to itself, like @id tells spring that the variable under it is the primary key for a sql database.
C: Glad you liked it And thanks for pointing out about the typos
P: My first article for Oracle Java Magazine got published yesterday: "Getting started with JavaFX on Raspberry Pi"
C: Google News advised me of that article yesterday! It was a good read!
C: I read it yesterday. This step by step guide is really good and inspiring. Thank's for work you've done.
C: Awesome!
C: Oh maaaaan, I’m so hyped by this article. I want to give it a try ! I didn’t know we can actually combine Java and Raspberry pi . Most of the tutorial I’ve found are in C++. Thank you for your hard work on this tutorial.
C: In that case I have an other great tip for you :-) https://webtechie.be/books/
P: Jenkov's tutorial on java threading is really good.
C: There is a whole coursera specialization on java concurrency here: https://www.coursera.org/specializations/pcdp which is what I'm following.
C: Thank you for this. Literally working on a concurrency project for my object oriented programming class. Hopefully this helps!
C: I was struggling with so many concurrency issues with my @annotation parser/runner in our automation project. This certainly helps. Thanks
C: Thank you. He has much more info it seems. Looks promising.
C: Exactly what i was looking for
P: Would like to use the quarantine to learn Advanced Java
C: [deleted]
C: I think javabrain is good
C: Baeldung is a good website
C: Jetbrains academy
C: Pluralsight opened all the courses for april, and after that you can pay the membership, it worth the money, a month or two should be enough. The core spring path is well structured (around 13 courses where each one is about 2h). I recommend you to learn solid principles, unit and integration Testing (at least the basics). I'm trying to learn well this topic because in my company we use spring (old version) and lot of bad practices, so I'm trying to learn the good practices in my own time. This is my point of view, sadly I don't have knowledge of github projects with good structure to check, but I will check out too if someone post some links regarding this. Good luck
C: Well, I am trying to learn PHP + mySQL during this Quarantine time and I am still enable to put whole one day on it! I read want to be prepared for my Interview which is based on PHP. My brain is feeling very tired everytime! Well, I can spend hours watching phone but can't sit one hour straight for learning and don't even feel to learn. LIFE IS LITERALLY going from my hands and I'm seating seeing it going! *Depressed*
C: Dude like problem with me is different! I know where to find, how to practice, what should I do to make myself powerful in many languages but yet I'm just watching myself being trash day by day. ALL knowledge I got is from past when I was so curious about programming and all! Now I don't even react when I see something very interesting made by someone.
C: imho this deserves more votes.
C: [deleted]
C: >What is the meaning of "Dude like problem with me"? I think he meant "Dude like **the** problem with me is different"
P: Free courses on algorihtms by Princeton University
C: Honestly, there are better resources than these. Stanford's class on algorithms (also on coursera) is much better.
C: I have to disagree that Stanford's is better. I will say that Stanford's is more rigorous mathematically. He assumes you've taken discrete math, and probability, and he also throws in some calculus a few times. He also speaks very quickly and has handwriting that's hard to read. And the pseudocode presented is not enough to understand how to implement some of the data structures or algorithms if you haven't already done it before. It's just too vague and glosses over some of the most difficult edge cases you have to be aware of to get them to work. Princeton's course has real code examples in java so you can really see it, but you still get practice implementing things on your own. It's also less rigorous mathematically and in my opinion they did a better job explaining some of the required background knowledge instead of just assuming it. It's more practical and has less analysis. I can't say Stanford's course was bad, but it was just not for me. I found it very hard to follow. I'd recommend Princeton if you want to see some real code in Java, or MIT's OCW algorithms course in python, which has the side benefit that it's the first in a three part series on algorithms, so you can stick around and get into some of the more advanced stuff.
C: [deleted]
C: I haven't tried Stanford's class. I'll take your word for it 😁
C: Does the Stanford one provide problem sets to work through or are they just video lectures?
C: If this is the course I think of (Design and analysis of algorithms), it was also on Coursera long time ago, but I can't find it any more. If this is the one, I think it has different goals than these two. Stanford course focuses on theoretical part of algorithms, and is more math heavy. These two Princeton classes have more practical, hands-on approach to developing algorithms using theoretical foundation. In my opinion, it would be best to do both courses. You get both theoretical and practical knowledge.
C: Stanford was once free on the Stanford Lagunita website. Not anymore :(.
C: It has problem sets and some of them are pretty hard. Like, implement some recursive algorithm based on vague pseudocode and count how many times it recurses for a provided data set, then enter that number as the solution. If you handle the base case or edge cases differently you end up with a different number, so you're kind of left guessing to get it just right even if your algorithm works.
C: Yeah the Stanford course used to be called that but they updated it and made it into four courses with some new content and named it the algorithms specialization. It is much more theoretical. Kind of like a second course in algorithms instead of an introduction.
C: Does that mean in a real world situation your algorithm would still work but in this scenario they're looking for an exact solution that isn't provided so you can't even check your work? Still learning so forgive my ignorance.
P: 100% Free coupon for Practical Java Course: Zero to One AGAIN
C: In the future, will we have access to the 5 part course or the first part out of 5?
C: Thank you.
C: Thank you. I’m looking for Java Spring Framework..
C: Thank you kind person
C: Thanks!
C: Thanks!
C: Thanks !!
C: Thanks!
C: You'll gain access to all the five levels for free.
P: Is it normal to feel really stupid while learning Java because of constantly not realising what's the best way?
C: For the first few months, I struggled to even remember the syntax of for-loops and really couldn't wrap my head around the zero-based indexes. I stumbled over the most basic stuff and felt like I could never do any better. But the thing is, I thoroughly enjoyed it all. I was in constant awe when I got something to work (even if it was botched by the next line of code). For my first year of coding courses, I basically did all the exercises and then some coding of my own, trying out stuff and playing with the code. I knew it was my thing, right from the get-go. The code I wrote was atrocious for the first two years, and then I'd say I was rather mediocre for about five years after that and only started to learn proper ways of doing things about three years ago. I don't think I'm a genius and I still have a lot to learn all the time, but that's part of the fun for me. My advice is to just be stupid and feel stupid and play around with code.
C: You don't need to be a genius, you just need to plan, create, and implement an algorithm. The human mind is not great at dealing with huge complex problems so we create an algorithm and break one big complex problem down into small simple problems and solve each one and piece them back together. So we're only solving a whole bunch of simple problems. You don't need to be a genius for that. As for doing thing the best, most efficient way, well, I guess that comes with experience.
C: I didn't understand the very basics for a very long time. How the main method worked and instance variables were really confusing to me. Objects? The fuck knows what are those. Methods? Why is my static method call not compiling? Who knows. People mocked me as useless. But I persisted, and now I work as a Software Engineer and Java is my main language. I have a hunger to do what I do better. To learn more about Java and other languages and environments. Programming is for geniuses but also for people that don't give up.
C: It is normal to feel a little discouraged when you can't understand concepts in the beginning, but the learning builds upon simple steps. The steps have to be small initially, but the experience of learning Java gets fascinating after a little while. I cannot emphasize PRACTICE enough. Imagine a problem, and solve it with Java as much as possible. Also, make notes as you learn. Cram.com is a great (free) tool for making notes you can access from anywhere as long you have an Internet connection. When it comes to programming, it is imperative to think logically and critically. When you run into programming obstacles, remember to keep calm and approach how to solve the issue rationally. Like the others are saying, resources like Stack Overflow, Geeks for Geeks etc. are abound nowadays and there are excellent inputs from folks on these sites who know what they're doing. Lastly, feeling "stupid" can be a powerful friend in the end. The times I felt "stupid", I felt discouraged, but I also had a stronger resolve to keep pushing and I can honestly say when you break through the issues, the feeling of internal reward is something else...
C: All of the replies on here are SUPER encouraging. Can't wait to get home from work and practice
C: This guy gets it 💯
C: So, sucess is the ability to be and feel stupid? xD Do you earn money from this?
C: Yeah, the algorithm thing is what I'm starting to see it's the key to understand it... I'm reading "Data Structures and Algorithms" to see if I can learn how to think in that way...
C: >So programming is for geniuses but also for people that don't give up. That's a genius phrase.
C: I think the point is that the process of learning any language (and programming in general) involves a lot mistakes and misunderstandings and to be successful you'll have to enjoy the process enough to endure those failures for a while. This was my experience as well.
P: My brother made some Java coding practice videos for Java beginners
C: just some notes about his videos. \-He must zoom in because it's very hard to read what he is writing there. \-As a beginners videos he should talk more about he is using like IF else and the syntax before start implementing the algorithms \-finally with a voice like that he should be in national geographic not coding java xd. I wish he can keep up the great work.
C: Bro did he drink some monster before recording this? I can hear him gasp for air after finish every sentence.
C: Could he go through the coding bat challenges for string 2 and recursion? And possibly talk out how to solve the problem and explain why he does what he does? Thank you!
C: He says thank you for the constructive feedback
C: I loved the voice and he speaks clear. Thats good for ppl like me who dont speak englush as first language. Plus he speaks in a normal speed. A tutorial that you dont have to watch in 1,25 or 1,5x speed, great! But its not the kind of tutorial I'd watch tho :( I prefer short examples for specific topis. Title like 'How to iterate over a List' and then a short but well explained example of it. And yes, its super hard to read, zooming is a must. Plus I'd probably use a simple editor like Atom or sth...
C: He has GERD lol :'D
C: He says yes he will eventually do all of the coding bat challenges
C: I know should putted that in youtube comments but i don't like there xd
C: Awesome! Please tell him thank you!
C: We all make mistakes now and then, I would just like to tell you, in case you did not know, putted is only used for when someone played golf, like putting on the green. The pattern for put is: put, put and put. I don't mean to pick on you or anything like that. I just felt it could be good to know.
P: I surrender
C: I feel ya , but for me I found the solution ===> F\*\*\*\* books and tutorial series . I work only on a project and I search just for what I need ; so a lot of stackoverflow and I'm happy again. this is a way to learn called Goal-driven Learning.
C: You really sound like you need a good mentor to walk you through things in an understandable and relatable fashion.
C: Burn out. Take a break. Relax. Then go back. Welcome to the grind.
C: > After 9 months learning Java [...] I see no point on programming, it's not funny anymore What was the point/fun in programming for you 9 months ago?
C: Before you completely give up I think you should try out other programming languages because a lot of it will resemble Java. Don't know what you're building but chances are there is a much cleaner language you can build it in than Java. Java is really difficult to do things in without lots and lots of guidance. I had a developer with 20+ years experience in it teaching me Java Spring and I still wanted to quit.
C: This^ . Whenever people ask me how to learn this or that technology I always recommend them to start projects or mini projects on them.
C: Learn by doing method is the best method
C: Problem is that I go turtle mode while the rest of mankind works at light speed.
C: It's all good buddy. Don't compare yourself to anyone. This is your life. Work at your own pace. :)
P: Java Side projects for beginners
C: Word encryptor, units converter, baby names generator. Hyperskill has lots of projects from simple ones to supercomplex ones.
C: Calculator, hangman, snake (kinda), connect four, mainly games and small apps. All good to get your feet wet
C: [deleted]
C: I always like to recommend card and dice games to my students (with a console/text-based interface), or, if you're a board game player, implement a simple version of a favorite, ones with grids are best: anything from Battleship to Tiny Towns.
C: [Hyperskill](https://hyperskill.org/onboarding/project?track=7) has a decent selection for various skill levels. That link will take you to the "Easy" skill level. Hyperskill was recently added to the sidebar. I would recommend you set up a GitHub account, and add all side projects to it. You can then share your GitHub account on your resume. This is very useful for employers. I would even put simple projects on there. Those can show how well or poorly you comment your code (remember for comments: more is not always better). Be cautious about adding school projects. If you add them, make sure they are set to private. If you make the project publicly accessible, your school may consider it the same as giving answers to other students. My school warned us over and over about this. Their penalty is suspension and/or revocation of your degree. I added all of my projects, but set them to private. GitHub now allows for unlimited private repositories.
C: Never too early to start projects! My first Java project was Tic Tac Toe. I started with two player and moved on to playing against the PC. Then I made the PC unbeatable and created different difficulty leaves the user could choose from. It was a lot of fun and taught me a lot
C: I have a java textbook with little projects
C: Why the kinda fit snake?
C: Name of the book please
C: Game loop. Requires threads and listening for keyboard inputs in parallel. That is hard especially for a beginner. Making a 2d array that just waits until the player presses the keyboard to move is more feasible. Essentially you make the whole game (eat, traverse, grow, traverse from one side to the other through wall) but the actual game loop.
P: What is the meaning of String[] args in public static void main(String[] args)?
C: It is an array of String arguments that are passed into the main method from the input of the application, so for example you can run a program using: java [helloWorld.java](https://helloWorld.java) And you can also input arguments to be used by the main method using: java [helloWorld.java](https://helloWorld.java) {string1} {string2} and then in the main method you can access these values using args\[0\], args\[1\]
C: I asked my teacher to clarify this once since it was the 5th or 6th week of class and we never actually discussed it. He proceeded to respond with “that’s a good question, can anyone answer that?” The room stayed silent and as you may assume, not much learning took place lol
C: The other comment is correct but some background. The java compiler actually create an object of the Main class and calls its method, main. So args is the parameter being passed in. Those parameters come from the terminal when the program is run. You can use this as a means of passing info to the program at the very start.
C: It's a parameter for the main method, like if you write an `add` method like `public int add(int x, int y)`, this is called the method signature, and `x` and `y` are both parameters with the type `int` for the `add` method The `main` method of all java programs are the "entry point" of your code. basically the first method to ever run and they must always include the `args` parameter with the type `String[]` which means String array. The `args` parameter is meant to hold the values of each individual "argument" that was passed to the java program before it ran, basically this is one way to feed data to your program so you can write code that reads that data and does different things from it. If you are using an IDE like Eclipse then you can find the spot to enter your arguments in the run configuration menu. If you are running your java program from a command line terminal then the arguments are what you pass it in there like the other person commented.
C: Real programmers google anyway, who needs teachers? /s
C: My teacher explained it to me, I think it's like sth to do with passing arguments via the terminal! Idk I didn't really understand much!
C: It's pretty shocking if you're being taught that the teacher doesn't even know this.
C: > The java compiler actually create an object of the Main class and calls its method, main. The runtime actually if we're being pedantic ;) The java compiler (javac) doesn't call anything, it just compiles Java to bytecode. And the JIT compiler also doesn't call anything; it just compiles bytecode to machine code :)
C: > The java compiler actually create an object of the Main class and calls its method, main No instance of the Main class is created (unless you create one yourself in the `main` method). The `main` method is static and does not need to be called on an instance.
C: Sadly Google has taught me more at this point (it feels like)
P: Lessoned learned as a beginner programmer
C: I would advise anyone starting new to not spend too much time trying to learn various languages, please spend Time on learning concept like how to analysis an algorithm like calculating time complexity ,figuring how to use do-while - for loops then move on to learning Data structure and algorithms like stack , queue , linked list , graph, tree , recursion etc If you are good in DS and algorithms , a lot of company will be willing to hire you even if you don't know the language they work on.
C: I disagree a bit. Especially for people who want to be more well rounded. Concentrating solely on one language may not help you later on when you need to understand something else. Like someone said earlier about java: understanding an OOP language helped tremendously with using other OOP languages. So even though I started with java, I learned JavaScript and Python at the same time. I thought it was more beneficial. I think overloading is not good at all, but mixing 2-3 languages (especially if you’re learning one for back end and one for front end) helps tremendously later on.
C: I think you really need at least two languages, JavaScript and the one you concentrate on. Without JavaScript, you are lost in web UI and restricted to backend where Java is so great. As a beginner, you need to be able to do Full Stack or it will be too restrictive ... this will also bring in SQL. Sorry about that, we're up to three already.
C: It’s hard not to jump from language to language in college because that’s how the degree program is structured.
C: While I agree that you should not spend too much time learning various languages and rather focus on the things you listed, languages can teach you important concepts as well. Yeah, most languages are multi-paradigm languages. But I think it is easier to learn functional programming with something other than Java. I also would advise to learn a dynamically typed and a statically typed language so you get to know the differences. One of the important questions here is: what do we classify as a beginner programmer? First weeks? First months? First year? Because yes, during the first weeks you should just stick to one language and learn everything from loops and conditions to the data structures of your language. First months? You can (and should) pick up another language. (Second half of) First year? You should start caring about good code (patterns, SOLID, whatever). And all of this depends on how much time you can devote to learning - some can learn 5h per week, some can spend 40h per week... The first months of one can take another person years.
C: For people who don't have a programming background, it's not very efficient to learn multiple languages when you are just starting out. It's better to specialize so that you learn the fundamental programming principles, explore data structures, algorithms, frameworks, and etc without having to juggle between X languages, syntax, and etc. This way they can get a job quicker then decide to learn other languages if needed/want to.
C: And whats bad about beeing backend only? 🧐
C: 4 semesters, 6 languages (C, C++, Java, C#, JavaScript, Python). Tbh: I liked it.
C: Yeah a college degree is a little different because y’all don’t have a choice. I was more referring to people who aren’t in a CS degree program
C: I think that at least when starting out you should understand apps end to end. Any hole in your knowledge will gnaw at you. Later, we all specialize and the field is so enormous it will be even more so.
P: I think I better watch another tutorial before I get started
C: I used to run study groups on here. I could do that again -- I am writing a book about getting a job as a programmer ([https://ZeroToCode.today](https://zerotocode.today/)) and was thinking about dropping some chapters of here 2-3 days a week and running study groups based off of it. Would people be interested? Book is entirely free online.
C: Tutorials are over rated. Do one or two just to understand syntax and the main ideas. But other than that just start making something. Working through 1 project (even a small one) will teach you more than 100 tutorials would.
C: I am in this picture and I dont like it
C: Then you go watch the tutorial again, copy the code, hit npm run start, and it still doesn't work for some unknown reason.
C: I mean the only way to learn is to actually do projects
C: [deleted]
C: Honestly so true. Big caveat: I do like tutorials for brand-brand-new-stuff. Before I even knew what console.log was, I did Colt Steele’s Web Developer boot camp. Massively helpful. I didn’t learn very deeply (didn’t understand much) but I learned by imitation. After finishing the Udemy course I was asked by my dad to make a site for his company as a nice-to-have side project. Nothing critical, compensation possible, the perfect learning project (user feedback too)! I immediately fell on my face. Didn’t understand how to setup express, even after making our Udemy capstone project “YelpCamp”. So, I got started imitating everything from the Udemy course. It’s here when I started copying and adjusting code that what I was doing started to sink in. I first needed the exposure to express and bootstrap etc... from Udemy (you don’t know what you don’t know), but now that I had the exposure, my eyes were comfortable with what was on the screen so my brain was freed up to actually understand it, if that makes sense. Fast forward a month and I’ve got a functional app with my mongodb database, file storage via aws S3, magic link auth using jwt and session cookies (once authenticated via link). It’s funny because now I’m going back to Udemy to learn more (especially SPA stuff) and I was looking into a “nodejs api masterclass” course and realized that I had already learned and implemented basically all the stuff in the course. Session cookies, file upload/download, jwts for auth and your standard mongoose queries. So long story short, do the tutorial for something brand-brand new just to get a feel for the landscape and syntax, then imitate the shit out of it to build your own project. That’s when things start to click and you start to get curious and eventually end up learning a whole lot more. Aside: learning web development is like learning spoken language. Imitate, imitate, imitate (learn the sounds, the common phrases, get your mouth moving)... then go out and try to hold a conversation (understand what you’re actually saying and what you need to learn).
C: I kind of agree. When you follow tutorials you just repeat what it's done but you don't really understand why. One of the best way to understand why is to be confronted to the problem.
C: How do you start doing projects without knowing anything though? I'm in that weird spot where I'm almost done with a Udemy course, and I understand things when as the instructor is going through things. But when it comes to starting from scratch building something I wouldn't know the first thing.
C: The most motivational comment on reddit I have ever read today. Thank you from Japan 🥰
P: So true 😂
C: Incidentally, it's one of the things I love above programming, having come at it from another career (6 years in politics). You're always learning! it's awful being stuck in a job where you aren't learning.
C: It helps to go the other way around. I came from Java and C++ to PHP, and then made the jump to JS, and it’s been really pleasant.
C: I've been trying to learn JS for the last 18 months or so, and I still feel like a beginner
C: I've been employed as a Javascript developer for two and a half years, I'm still learning Javascript. But I'm also still learning Ruby and Clojure and Rust. The idea that you have to 'master' something to pick up something else is silly.
C: Yeah what other careers call "job training" we just call our job.
C: And hey, with a background in politics, if programming doesn't work out, you can become a Product Manager. It's like being a politician for code, but instead of re-elections you have sprints.
C: What if I've already learnt JavaScript? Should I try to forget what I know and start with Java?
C: I've written JS almost every day for the last 9 years. &#x200B; So do I.
C: Ah well, at least we're paid really well
C: I think it can help to switch to something different for a while. JS forced me to rethink a lot of practices I got used to in PHP. Then going back to PHP, I found I did things differently, and I think better. Programming languages are like natural languages. You can study the grammar and vocabulary all you want, but fluency comes from use.
P: map vs filter vs reduce
C: Nice. I prefer the original though: https://i.redd.it/yf7rw3pjiapx.jpg Edit, not sure if source but it is the earliest I've seen: https://twitter.com/steveluscher/status/741089564329054208
C: the best explanation in one picture ))
C: let me reduce you some fruits
C: I get quite annoyed that people make map, filter and reduce seem difficult. They are so simple and easy to uunderstand. A nested for loop is much harder to understand and I never see much info on it
C: Nice
C: The first time that reduce has made sense to me, cheers.
C: Who made this and where can I find more examples like these?
C: Learning is a subjective experience, people learn at different rates and understand concepts differently.
C: Im going to go have to go look up reduce because it’s the only one that doesn’t make sense to me :/
C: It's not the same thing but maybe you will like it [https://illustrated.dev/](https://illustrated.dev/)
P: To improve readability for numbers, you can use underscore as a separator!
C: today i learned
C: Black magic!
C: This is giving me PTSD from Codewars katas where you have to deal with huge numbers.
C: Yeah this one is awesome. It can help drastically when you have a bunch of config numbers for things like cache time. We actually enforce this code style for any numbers greater than 5 digits at my workplace, using [`eslint-plugin-unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn) and its [`numeric-separators-style` rule](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/ce6500a3aebfa327ae4cf7b5bf2376aae7c2aab0/docs/rules/numeric-separators-style.md).
C: This is practically witchcraft, but the good kind!
C: if irs a number like this one you can also write it like "1e9"
C: What app is that? Looks awesome!
C: In case anyone's wondering about browser compatibility: https://caniuse.com/mdn-javascript_grammar_numeric_separators tl;dr it's probably best to make sure your transpiler of choice covers this feature.
C: It looks like https://carbon.now.sh/
C: Exactly
P: Web development in a nutshell
C: cringe
C: Could someone explain the joke because this sounds like a joke a junior or inexperienced dev would make.
C: x64 assembly: rules don't even exist /s
C: That’s where TypeScript comes in to save the day
C: Php- rules are for suckers.
C: Js - doesn't follow it's rule
C: That's exactly what it is
C: You guys think you're pretty safe, aincha? > **`any`**
C: Oh god the PHP hate train left years ago. Time to get off.
C: That’s what I used to say before actually learning it
P: How I feel asking questions here. Thanks for the badass community and advice.
C: Meanwhile, on [Stack Overflow](https://i.imgur.com/a103p0g.png)...
C: Ah, the Meowbook Purr, finally a feline friendly alternative to Windogs!
C: I'm just glad the answers here aren't like Stack Overflow where *every fucking answer is* "just use jQuery"
C: aw this is cute
C: 🎶*Thunder thunder thunder Cats!*🎶
C: [deleted]
C: People on stack overflow need to realize that they aren’t just answering the OP, they are answering every programmer who Googles those keywords... for possibly decades. The amount of people who will forever be remembered as that one asshole on a SO thread is too damn high.
C: I see very many people complaining about unhelpful answers on StackOverflow, but at the end of the day very many questions are of the type "hey guys I'm trying to insert these two metal picks into someone's brain, how much force should I apply?". you *could* answer with what sort of hammer he should be using and what angle is recommended for a lobotomy, but a more responsible approach would be to question why exactly he's exploring lobotomy and inform him about anti-depressants. the big issue is that people can get pretty defensive about that. "my method *works* so can you just help me with that", and simply believe the answers are unhelpful. then of course there's the jerks that simply berate you for trying to do something that isn't Certified Cool™, but I feel those are pretty far and between, even on StackOverflow.
C: Or solving the person's particular problem without solving the text of the question, then becoming the only high ranking result on that question.
C: Personally, I find a lot of the "why the fuck are you trying to write JavaScript in Python? Use list comprehension you dumb fucking bitch" posts pretty helpful. I feel like the duplicate demarcation is less helpful. It's the absolute worst when you put in "I found X but couldn't understand the answer" and then someone is just like "HEY IDIOT IDIOT IDIOT YOU SHOULD HAVE SEARCHED FOR THE ANSWER AND FOUND X YOU IDIOT SHUT UP GET OFF THE SITE IF YOU'RE A BEGINNER GO BACK TO FREECODECAMP SO I CAN GET BACK TO BERATING UNITY USERS FOR NOT USING UNREAL AND UNREAL USERS FOR NOT CODING THEIR GAMES ENTIRELY IN ASSEMBLY CODE"
P: JavaScript can keep you safe
C: In my case, I use const. Y'all can use let. Edit: to clear up any misunderstanding, here ya go https://youtu.be/AuBC2cwVnG4
C: Now wearing one million masks and counting. Also snake_case & CapitalCase combined? Wtf
C: But... there's no exit condition. Is this the secret to immortality?
C: That won't pass any sane linting rulesets.
C: \- use of var \- snake case variable naming \- upper camel case method naming \- use of while loop Yikes man
C: Inconsistent variable naming conventions.
C: Using const is more optimistic about your chances of staying alive.
C: lmao as you get shot `Uncaught TypeError: invalid assignment to const 'still_alive'`
C: There's a seperate file where death waits ;)
C: Forever?
P: Build projects and your skills will skyrocket🚀
C: For anyone still struggling to get used to javascript, i suggest you guys try to hardcode the HTML entirely in javascript. create your website with javascript, with document.createElement, and set the styles in javascript as-well, and append it where you want it to go with document.append() though, you should never style your documents through javascript in real projects. This is what made me really get used to the javascript language and made me comfortable enough to break out off tutorial hell.
C: I'm a bootcamp instructor and today we are presenting our second projects - API calls with React. This post is great and I am going to send it to the class when the day is over, I love its message and I agree with it fully
C: This is so true. There IS an in between solution, however. Start a tutorial, and use it for the high-level guidance, but don't copy the code. Just implement your own designs, your own routing, etc, only using the tutorial for the app idea etc. This has worked for me, especially where I find a tutorial that is otherwise good except for the fact that the front end looks awful and lazily designed! EDIT: currently doing this with Grider's Full Stack React which is honestly a disappointing project in how it looks but also massively out of date, so the manual refresh is necessary. I'm building it with Material UI, modern Stripe API, and better routing (so far) with more changes to come.
C: I recently wanted to learn JS but I don’t learn with books or reading with no concrete purpose. So I just started writing my site and when I got to the point I needed JS, I just started googling. Hacking together a solution taught me the fundamentals and it was pure joy when I got my page to do what I wanted. It was nothing special, but I decided to create filtering buttons which would filter data on client side to save backend cpu work and db queries.
C: Also tell them that the bootcamp projects are the literal minimum for consideration. Im currently reviewing/vetting applicants for a jr role and 90% just have the *same* bootcamp projects listed. Literally anything puts you up a notch. Personal site, at a real url (and not just at herokuapp) takes you out of the discard pile. edit: looks like heroku wants you to at least pay for a hobby teir before giving you an ssl. you may be able to use cloudflare: https://support.cloudflare.com/hc/en-us/articles/205893698-Configure-Cloudflare-and-Heroku-over-HTTPS or another free/cheap ssl provider to serve heroku over ssl.
C: wow this is the best thing I heard today. I'm so glad you're doing this, wish your students best of luck in their careers
C: Honestly even if you keep the project functionally the same but just changing topic also does a great job (this advice is more geared to someone earlier in learning process, the above comment I agree with when you’re a little further along in the process). Example: tutorial topic is building a CRUD application for a musician booking program. I would recommend simply changing your project to be a hotel booking or catering booking program. Functionally these projects would match verrrry closely to the one in the tutorial. But just needing to rename and tweak some functions will FORCE you to pay attention to the code you’re writing. When you do the same project as the tutorial, a lot of people simply copy the code and don’t really force themselves to understand it. After you get a good grasp, then I would recommend moving on to following tutorials as a general guide or for reference material as u/not_a_gummy said. Next progression after tutorials is build your own projects using your previous projects you worked on as references and relying on reading the docs and googling for SPECIFIC parts your stuck on (I.e. don’t google how do I make a crud application, but maybe how do implement authentication using JWT or how do I implement route guards). As you learn your questions should be getting more and more targeted.
C: Yes, I recommend the Modern Javascript from the beginning course because you can find good project ideas in this course
C: Your thoughts of applicants that went to a bootcamp? I'm considering going to one but it's a big investment. I'm thinking the structure and the connections would be well worth it. I've applied for jobs and have been close twice, but I'm missing something for sure. I probably need more full-fledged/bigger projects and apps; as well as working with more frameworks. Going down the web development path btw.
C: **tl;dr**: depends. **long version**: my opinion is that they are highly variable. like, if you put in the work, you'll probably get something out of it - but its not a guarantee of a job either. if you have a background in dev, a bootcamp can definitely get you up to speed on a framework/technology you dont know. as a complete noob - i think it may be less useful. i think that like an army bootcamp, it can weed out those that are completely unfit, and prepare them for the next phase of their training. i also think there are a lot of scams out there preying on people desperate for a job. so vet carefully before you put down cash you can't afford. its also going to depend on your local market. if there are no python jobs in the area, don't take a python based bootcamp. we do a lot of react, but we also do a lot of node/express, and a lot of wordpress, so i'm not going to care a ton about your entry level java or ruby knowledge. but again, anything beyond small scale demo apps is going to be a plus. if you got close, it may just be that the shop uses something specific, and another applicant had that specific domain knowledge. knowing something about devops or cloud infrastructure is going to help. knowing actual css and not just how to slather bootstrap over everything will help. like first thing i do is look in a github for something personal, or something that wasnt just a tutorial project. i'm looking for something that is running out there in the wild - i dont have time to clone your project and hope it runs. like, i have 10min for initial screen, show me that there is a reason to look further or ask to talk to you.
P: When logging several variables, you can wrap them in curly braces to better see which value belongs to which variable
C: This is because you're actually creating a new object using the names of the variables as fields within the object, and then printing that object to the console. I forget the term for this, but it's really useful even outside of the console!
C: Even better, instead of calling `console.log`, which will print the object literal, call `console.table` to print out the object in a nicely formatted table. ([reference](https://developer.mozilla.org/en-US/docs/Web/API/Console/table))
C: MDN refers to this as [shorthand property names](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#New_notations_in_ECMAScript_2015).
C: Destructuring?
C: For those working with an environment that doesn’t support `console.table()` or even directly logging objects to console like the original tip, this is still helpful. ``console.log(JSON.stringify({width, length, height}, null, 2));``
C: That's what I thought it was, but didn't want to be wrong. Thanks for doing the due diligence I should have!
C: Nah. Similar syntax, but it's almost opposite of destructuring.
C: My go to when building JSON files in node. so handy
C: Structuring
P: JavaScript Cheat Sheet.
C: Behold the commandments!
C: I'm going to get this sucker printed and laminated, damn.
C: I really like this. Because God do I hate looking up functions, and often prefer to write looping constructs which would be less succinct. I know there are other resources, and know this will be unpopular, but I really blame the MDN/Mozilla here, though I really do want to like them. Their resources are just terrible. You can be both formal/technical and good pedagogically (or informal and bad pedagogically) but MDN resources are ~~horrible at both~~. (Well, originally meant to say they come across as technically formal, but they don't use formality in the right way. Eg talking about the thisValue parameter for .apply, they reference two synonymous terms for "calling object," and it's just superfluous when you're not actually having issues with those terms in the first place. Most of their formality is fluff or pretension frankly.) I Looked up .apply the other day responding to a post here and MDN was nearly objectively terrible at explaining the role of this function, particularly regarding the relevance of the "thisValue" argument. (Eg their examples, save one where they focused the discussion on something else entirely which is much simpler and didn't really warrant the discussion, all used trivial thisValue parameters; they didn't go into how "this" can be just like "null" or "undefined" as thisValue; didn't do anything too actually explain why you might want thisValue to be something non-trivial, ie what role thisValue actually serves as a parameter for .apply, etc) I was able to figure it out, mainly through testing things on my own, but yeah, I don't think there's been a single time I've felt I learned or better understood concepts after reading MDN's stuff, whereas there have been so many times when I've used another resource, thought back to MDN'S info on the matter, and reflected on how terrible it was, while trying to view MDN charitably.
C: nice list, though i never used nor heard of Number.EPSILON... Also, maybe I am wrong but for a cheatsheet titled "language for the web" this should really include the [most commonly used DOM methods](https://fundamentals.generalassemb.ly/11_unit/dom-cheatsheet.html)
C: I'm gonna tattoo this onto myself
C: Think I’ve found a slightly higher res version here. There appears to be a second page of them as well. https://alansimpson.me/javascript/infographics/codemio/codemio01.png https://alansimpson.me/javascript/infographics/codemio/codemio02.png
C: Just wanted to say, that they missed the most important JS stuff - Object. But it turns out they wrote it down on the second page :)
C: Oh, captain, thank you, captain. kudos
C: Oh yeah I didn’t notice that! It looks like there’s also some HTML and CSS guides made by the same creator if you’re interested (or anyone else is).
C: https://www.codemio.com/2016/09/html5-css3-javascript-cheat-sheets.html
P: Something has changed
C: Sometimes it takes me a whole day to write 10 lines of working code
C: And yet we made no money back then, and are paid well now
C: A few hours at the machine in the a.m. then off to the gym, cause that's when all the solutions are really created.
C: I imagine that you have more freedom as a student. You typically have a choice in what to build or how to build it. Likely to not be the case in a paid position.
C: [deleted]
C: It be like that.
C: Oh just wait till you become a manager. 1 line a week, tops.
C: It's so crazy. I get more coding done when not at a computer.
C: Mine is when in a hot shower, when driving long distances, or when washing some dishes. I think it has something to do with doing mundane, everyday tasks.
C: There is actually a scientific explanation to why that happens. Some chessmasters use this method.
P: Javascript objects in nutshell
C: setter with 2 t's just trolling. this is helpful
C: I was struggling with objects and this really helps.
C: Thanks! Do you guys know if there's a compilation of those somewhere? I've seen a few in this forum and it would be cool to have them all together
C: The last example is incorrect. Using `this` in `hi` would be unwise, as it would seemingly work unless you passed a reference to function `hi` to something else to be called later (for instance, as a callback). Once called from that other place, the value of `this` will NOT be the `twit` object. Functions in JS by default take their context from where they are called NOT from where they are defined. This can definitely seem weird and annoying, but it is why we bind functions. Binding a function means forcing `this` to be a certain thing that doesn't change when the function is passed around by reference and called externally. `hi` is unbound. Conversely, arrow functions, as seen in `hello`, are bound to the scope they had when they were defined. So `this` will be unchangeable. But, arrow functions are also instance properties, not prototype methods, but that's a different story for a different time.
C: Really good stuff. This should be very helpful to a lot of people. If you edit this one at some point, I'd love to see `const person = Object.create()` added as a way to make an empty object as well. No way a little cheat sheet like this would want to add all of the things that `Object.create()` implies (prototypes, property descriptors, etc.), but it *is* a way to make an empty object and maybe it would cause people who hadn't seen it before to look it up and learn about those things on their own. Fantastic job!
C: This makes me happy
C: Is adding get and set more of a semantic thing for readability of code?
C: Check out the Fireship YouTube channel. He has a ton of JavaScript introductory videos with tips and tricks like these.
C: While you're not wrong technically I don't see anything wrong with the example. Most people would write it like the example and then bind the function at the time of passing the function reference somewhere. Do you bind every function you write upfront? That seems rude to consumers of your code because bound functions cannot be bound to something else later. It also seems like it'd make the code style weird. I've never seen any js written that way.
C: Yeah it was a game-changer for me when I first learned of empty objects and such too. Might not sound important, but in terms of understanding really what objects are, it's very useful. Far too few resources really go into depth on the basics.
P: when I am learning JavaScript.
C: You’ve GOT THIS!!
C: And then every once in awhile, you’ll be like, “ohmygod, it works! ...but why does it work?” I always think of Faith No More’s Epic when I see “what is this.” It’s this. What is this? It’s this.
C: I'm learning React and this was me yesterday :(
C: Basically me everyday
C: I don't know, it seems unrealistic, there is not enough crying and existential dread.
C: Coming from an experienced programmer, this feeling never goes away completely, it just comes less and less often as you level up. I think the difference between the above average and the below average is how you react to it
C: Totally relatable, but you got this! Just keep Googling xD Are you following a course or just by yourself?
C: Why is javascript more confusing than other languages? :(
C: Not in an arrow function I don’t!
C: I'm learning React and this is me virtually everyday :(
P: Are you building your portfolio/website from scratch or using WordPress?
C: Friends don't let friends use Wordpress.
C: Gatsby
C: ghost
C: I created my own website from scratch using Wix
C: I would definitely choose Ghost, Jekyll, Hugo, Hexo, Gatsby, Jekyll, etc. over WordPress. IMO it is easier to create a website from any of the above. Additionally, you get more control and (with the static site generators) you can find free hosting from a ton of providers.
C: Wordpress is the most widely used cms system by a large margin. With over 60% market share, with its closest competitor coming in at roughly 5%. Don't let others discourage you from learning how to program for it. Tons of jobs hiring WordPress developers. My advise to anyone interested, get familiar with php, learn about Advanced Custom Fields, and create themes with twig using Timber. Add a sprinkle of Javascript and you've got all the tools to be a formidable WordPress Master.
C: Nice 😊. Why did you make that choice over next.js for example?
C: Wix is worse than anything. I shudder just at the thought.
C: Mainly wanted an excuse to learn React. I figured the cross pollination of skills and concepts
C: 😂 That sounds good. I wanted to test but found graphql not obvious!
P: I made an app to simultaneously watch tutorials and code
C: A dual monitor setup avoids needing this, but still, congrats for creating a tool that you yourself use. This is what real software engineers do.
C: I wanted an easier way to just watch along a tutorial and code something lightweight without needing a whole desktop/vs code/browser setup so I made this app. Feel free to leave any feedback or report any bugs! Link: www.devlecture.com If any of you want to keep up with the project, I started a [subscribe list](https://devlecture.us17.list-manage.com/subscribe?u=c1941282fe209100009b673c8&id=e63d3e93d8)
C: Spotted this on webdev when you initially posted it, just want to say it's a great idea and thanks for sharing!
C: Very cool man, I love the use of screen real estate 👍
C: This is a really cool concept! Awesome dev work dude 💯 was this strictly using JS or ?
C: [deleted]
C: Lol guess I’m just a fake software engineer because I only do what people pay me to do 🤷🏾‍♂️
C: Also, not everyone can just get a dual setup. Some people are just using what that have, and that's probably just a single laptop screen. Especially beginners. This is great!
C: You got it :) please let me know if you use it and have any feedback!
C: You don't create tools to assist in your workflow for your day job? That doesn't mean that you aren't a real software engineer, it just means that you aren't optimizing, and that's not a bad thing or a judgement. It just is what it is. The statement was more geared toward encouragement for a job well done, rather than assuming that all people who are to be considered real must do this.
P: Node.js is now 11 years old
C: I still remember when it was the new kid in town, damn I'm getting old lol
C: Who invited this Deno kid to the party?
C: Hopefully it goes easy on the cake, it's bloated enough already
C: little brother deno coming...
C: Can we say deno is premature baby of node? Release date wise may be.
C: It's like my 11 years old nephew: annoying, difficult but sometimes very cute
C: I wonder how old deno is?
C: Roughly 11 years after is a long time from a technological standpoint, IMO.
C: i deno mate
C: Makes sense that way. 😀
P: 8 lines of code to achieve a simple typing effect
C: [deleted]
C: Ok. I am new in JS and i dont understand shit. Is this normal?
C: Its a shame the interval wil never stop.
C: There is another question, the variable 'cursor' is not used
C: >typespace does this code actually work?
C: Yes.
C: Totally but dont use this code.
C: Yes and this will continue for the rest of your goddamn life. Now a days I write thousands of lines of code and still feel like I don't understand shit.
C: Yeah and also if you change the string you want to print, the statement with ternary operator will not work. And the code shown also doesn't use the cursor variable anywhere lol.
P: Why can't my teachers be like this?
C: This would actually be helpful if it was also accompanied by a technical explanation
C: If a teacher taught programming like that, I'd murder them pretty fast
C: Is that response supposed to be helpful?
C: Are JS callbacks the same as C++ callbacks? The way this is describing it, it sounds more like an RxJS Observable than a JS callback.
C: many teachers in my opinion don't even really know about what they teach, thats why they are teacher
C: Reasonable response
C: They're pretty much the same thing: a function (delegates in C#) that is passed as a parameter with the expectation that it will be invoked at a certain event. RxJS observables are just a more specific implementation of a callback pattern.
C: Takes a special kinda stupid to post that
C: That's a stupid fucking opinion
C: Ok cool, thanks for the clarification.
P: Just ran into a very wise noob, thought Id share his technique.
C: As an instructional designer I can verify he’s using a very battle tested technique called “behaviorism”. Basically repeating something over and over until it becomes muscle memory. It isn’t sexy but it works really well.
C: I did something like that when I was still in school. However I was managing multiple languages and I caught myself getting confused when doing projects by using the wrong language. This helped me remember what went with what language. I'm 25 so I guess this made sense to me as well. But that's very cool. I'm new to JS and applying for a front end job but we will see how that works. Been using alot of references in this forum.
C: Total noob here trying to teach myself Python(and hopefully more languages in the future), so excuse my ignorance, but what does it mean to add directives?: "For the next set, I took the scaffolded project and added several directives".
C: As someone who's got no background of React or Angular and keen to learning Vue at the moment, this is very interesting to me! Thanks kid! Fun story: I'm several years in the tech industry and we had a college student teach us Vue basics once in a meetup we attended. We can learn so much from people regardless of how young or old they are :)
C: As someone who has ripped apart and re-written the same set of React hooks about three times now in the past few days, I feel like I've tripped into accidentally applying this technique.
C: > It isn’t sexy but it works really well. I have to ask, what are your sexy learning methods?
C: No substitute for hard work.
C: Only tangentially related, but I caught myself twice this week messing up my Javascript, because I'd spent too long concatenating strings in PHP with a '.' instead of a '+'
C: I generally start by taking my shirt off and putting on some slow jazz.
P: Javascript array functions cheat sheet (as asked)
C: Awesome! Thanks a lot!
C: What's wrong with array.sort()?
C: Wow. Brilliant! Thank you!!
C: Sweet, thank you!
C: Awesome stuff, gave you a follow as should everyone because you post some pretty helpful stuff... cheers!
C: Love these things for quick reference and practical examples! Great work!
C: Can someone explain to me why the unshift(9) has x=4 ? I don’t understand why
C: You're welcome!
C: Others are commenting on the common practice of using a sort function for handling numerical sorts. In large arrays this will be poor performing. In those cases, use a TypedArray https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray
C: Here's the documentation for unshift https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift It returns the length of the new array. If you're wondering why it returns the length of the new array, the answer is because someone decided it should do that (and they may have had no reason or a good reason for doing so)
P: JavaScript Roadmap for Beginners, Intermediate and Experts
C: I prefer this one https://github.com/kamranahmedse/developer-roadmap
C: Is there a way to navigate the chart? Seems scattered even for beginner section.
C: This map makes JavaScript seem more confusing than it actually is.
C: Bit of a strange roadmap, in my view. Purescript, Typescript and Elm are sort of tucked away in the corner, but they're *vastly* larger and more complex topics than, say, the Singleton or Module patterns. And besides, I'd say only Typescript is by far the more important one of those three. Same for Jest. Testing is important and it's something you should start with early, but it's a whole roadmap by itself.
C: Woah I only know c++ but I can’t read this at all.
C: This looks so overwhelming to a newbie tbh
C: That’s because it’s not a beginner friendly language. NaN, undefined, and null - lol ... let, var, and const? E - Know anyone reading this may ask what language to start with. The answer is Python version 3 and higher. A similar graph or flow chart for python would be a lot easier to understand than this one for JS.
C: I work professionally with react as a frontend dev and would say I’m maybe 60% through the frontend roadmap so don’t sweat.
C: You seem to be downvoted but there is some truth here. I’m not a developer as a full time job but I have a CS background and am proficient in a couple languages, passable in a handful. Javascript just seems to be a mess.
C: What is a better beginner language?
P: Learn Javascript in one Picture (2015) 🤯
C: Tips: &#x200B; &#x200B; None
C: Saved this. Very cool and way more informative then I thought at first glance.
C: Looks really cool. However it seems to be missing a lot of the asynchronous abilities that JS has.
C: LOLOL if you’re new to JavaScript, just ignore this and keep learning. You’ll be fine.
C: There is no Pepe Silvia
C: Gonna get this tattoo'd on my back.
C: Lots of async stuff came after 2015.
C: This is terrifying
C: Get it tatto’d backwards so you can see it straight in a mirror and it will make sense only to you.... YOUR PRECIOUSSSSSSSSSSSsssssssss.
C: This guy is the dude at work that says "YOU'RE SUPPOSED TO KNOW THIS STUFF" on people's pull requests.
P: JavaScript Date Cheatsheet
C: Just to be clear, speaking from experience here: if you do ever go on a date, this cheatsheet will not actually help you, and might actually prevent you from experiencing a second date.
C: I love these, keep 'em coming!
C: do you have a website or some account to follow?
C: typo in "return" in top right corner. says "reurn"
C: where's the code to import Moment.js?
C: today.getYear() is 120 because getYear returns the year minus 1900
C: Will note this!
C: No, I am posting only here.
C: Would you make a file where we can find all of the cheat sheets you’ve made?
C: I second this.
P: Frontend developer roadmap
C: For CSS I would add box model and positioning. I've seen many dev's get into trouble not understanding how position relative and absolute work.
C: One thing I didn’t see on there but I feel like is important is Bash. Bash and/or windows command line.
C: And this here folks , is how you get into the black hole of tutorial-itus.
C: start with hosting and DNS? oh gawd no - you don't need to know how that stuff works to get started! You only need to know that to deploy stuff. Deffo put that Internet category after Javascript and before Version Control
C: This format is trash.
C: Maybe it's just me, but in my experience, being able to learn on the job, getting dumped blind into a project, and learning the project's requirements is more valuable than following a road map and checking boxes.
C: Oh my God yes, a roadmap is just what I've desired. What should I study first, then next, or after and with this or that? Thank you!
C: [check the original one](https://roadmap.sh/frontend) . It has that things you mention .
C: Agreed. I don’t really like this roadmaps in beginner subs, they probably scare a lot people off. I used to see them and think oh man I have to learn all of that before I can make any thing. Just learn what you need to build something, you’ll learn way more from projects than checking boxes and tutorials off the list.
C: True. But learning on the job is easier if you already have some experience. And for getting that experience this roadmap is rather decent.
P: Swap two variables
C: But why
C: Compiles to var _ref = [y, x]; x = _ref[0]; y = _ref[1]; _ref; because breaks on some browsers.
C: `let x = 'Hello', y = 55;` `//Longhand` `const temp = x;` `x = y;` `y = temp;` `//Shorthand` `[x, y] = [y, x];`
C: Making me use a semi-colon, somewhere.... let x = 'xerox' let y = 'yellow' ;[x, y] = [y, x]
C: I have been asked to swap variables with no intermediate variable in basic JS before. a=a+b; b=a-b; a=a-b; This will do it 😃
C: I think he means why would you swap a variable.
C: what's the last `_ref;` for?
C: Only works for numbers though.
C: In sorting algorithms you need to swap a lot. Tons of uses for swap
C: I used online compiler for babel - since the code has no side effects it would be optimized to empty code withtout that. Long version is that it's a statement, not an expression: [https://2ality.com/2012/09/expressions-vs-statements.html](https://2ality.com/2012/09/expressions-vs-statements.html)
P: Unix timestamps will begin with 16 starting in 3 hours!
C: Shit, I forgot to buy birthday candles.
C: WHO WERE YOU u/denvercoder1. WHAT DID YOU SEE?!
C: A milestone to remember for the rest of our lives.
C: When does it go to 17
C: Not sure, if this one is worthy of remember for the rest of our lives, but at least for a few years. 100,000,000 seconds takes just over a few years to pass and we'll be at 1.7 billion. 2 billion seconds (`18 May 2033 03:33:20 GMT`) will be a more significant one, since a billion seconds is about 31.7 years. Also `MAX_INT` seconds is coming up (`19 Jan 2038 03:14:07 GMT`). That's going to be like the next Y2K.
C: Tue, 14 Nov 2023 22:13:20 GMT
C: Yeah I'm all in for MAX_INT day.
C: Wtf is MAX_INT. 🤔
C: [deleted]
C: MAX_INT means "maximum integer." It is the maximum positive number that can be stored with 32 bits in signed binary and it is a very common way computers store numbers. It is equal to 2^31 - 1 = 2,147,483,647 Programs that store the time as a 32-bit signed integer will no longer work when the Unix timestamp overflows. Hopefully we will all be fully switched over to unsigned 32-bit integers or 64 bit integers by then.
P: What do you guys think about this menu animation, too much?
C: Quite a lot of down votes. Didn't realise this one would be so controversial. Any feedback on what to improve please?
C: Looks cool! One potential issue I see is if you hover over the right side of a menu item, the item will slide out from under your cursor and cause a janky animation loop where it’s now just moving back and forth. Maybe use a pseudo element to ensure that a hit area remains even when the link slides away.
C: This would fit really well on a Website of a plumber or such.
C: Agree the design maybe needs some work, but the animation itself is fine. It's not too intrusive, and the effect is genuinely neat. I wouldn't on a website I visited every day, but makes sense for a one-off show-off site.
C: Forget about the haters, I think it’s really neat! Can you explain a little about how this effect is achieved? Thx
C: Downvotes are supposed to be used when the post or reply doesn't contribute to the discussion or subreddit. I don't see how this is not relevant to Javascript.
C: It's really great as a demonstration of what you can do, but it's really awful from a user perspective because it's distracting.
C: The main thing that sticks out to me is that giant paragraph of text, probably make it bigger, choose a prettier font, and separate/chunk it out so it's easier to read, maybe use bullet points if applicable. I like the animation though, not sure how that would look on mobile. edit: though I think it's a Lorem Ipsum type deal
C: Yes, what you're describing is the best technique to deal with this issue I think. I will implement is and release source code on here once it's polished. Pseudo elements are so useful for UI work.
C: Have a poop slip by every so often, making the user wonder if they actually saw what they saw.
P: This JS game is open-source, have a look at the code on Github
C: [deleted]
C: You can play online and see the code [here on Github](https://github.com/felixmariotto/Edelweiss)
C: Wow. Very well executed. I've played a ton of indie games, and they fail to hook you in, or have other glaring problems with them. well done!
C: You're a genius.
C: Wow! That looks incredibly nice. There's always something that appals me, what one can create, using JavaScript. You've done a good job!
C: Thanks, that was intentional, my preferred game ever is Zelda the Wind Waker.
C: Thank you ! I see what you mean by 'they fail to hook you in', and to be honest I think I've failed at that a bit too 😅 But I've definitely learned a lot for the next projects.
C: Thanks ! Yes you can do anything with JS, it's much more powerful than what people think. I'm even releasing a VR game playable in Oculus Browser in a few days.
C: Quick question (hopefully). Maybe I'm asking the wrong question. I've worked with OpenGL and threeJS, I've built nice shapes (like fire) and shaders to go with them, my question is not specific to any library, but more a general computer science concept. But how are maps in computer programs generated? (i.e. the universe that governs the position of each object)
C: That's not a quick question ! But I'm glad to answer. There is two maps : the physical one, and the visual one. The physical map, sometimes called 'navmesh' is a dumbed-down version of the visual one, and is used by the physics engine to compute collisions. The moving objects, like the player, have a 'hitbox' which is used for collision with the navmesh. After stepping one frame in the physical simulation, you then update the visual assets position according to their physical counterpart. In my case I made the physics engine myself, which entirely rely on axis-aligned-bounding-box, which means everything in my game is a box oriented along the x,y and z axis, including the player. You can have a look at how it works, look into 'public/js/atlas.js', which holds the physical map, and 'public/js/controler.js' which compute the player's moves according to the map.
P: Javascript destructuring
C: Very cool! Did you create this?
C: It might be worth adding that array destructuring works for more than just arrays; it will destructure anything iterable. This includes generators, String, Array, TypedArray, Map, and Set; function* generator() { yield "foo"; yield 123; } const [first, second] = generator(); const [third, fourth] = new Set(["bar", 456]); console.log([first, second, third, fourth]); // [ 'foo', 123, 'bar', 456 ] and any custom user-defined iterables; class Counter { [Symbol.iterator]() { return { value: 0, next() { return { value: ++this.value }; }, }; } } const counter = new Counter(); const [one, two, three] = counter; const [four, five, six] = counter; console.log([one, two, three, four, five, six]); // [1, 2, 3, 1, 2, 3]
C: Informative and elegant. Good stuff.
C: One day I’ll understand this
C: Nit, but the bottom example is a given since, as you said: > it will destructure anything iterable One can also achieve the same thing with a generator function if you, like me, always forget what the return object for an iterable is supposed to look like. class Counter { [Symbol.iterator] = function*() { let value = 0; while (true) { yield ++value; } } }
C: What you need to do is write some of this out and make changes to it. Try adding stuff to it and moving things around and console log everything. You’ll figure it out that way. Saying you’ll understand it one day is giving up before you even start.
C: I think of this is as *selecting* particular contents out of a container. I'm picking what I want. If I'm selecting (destructuring) using square brackets, then I'm selecting items according to their order. The first item, most often. If I'm selecting (destructuring) using curly braces, then I'm selecting items according to their property name. When I've selected something, it gets defined as its own variable. So think of what it is doing as a two-step process: (1) it selects an item out of the container object and (2) defines a variable. Destructuring *pulls out* a property value by order or name and assigns that value to a variable.
C: What part do you not understand?
C: Love this, thanks mate
P: Wired way to learn javascript :D
C: [deleted]
C: This is a JS dad joke
C: bananaa?
C: Reminiscent of the [Wat](https://www.destroyallsoftware.com/talks/wat) talk (a little over a minute for the good Javascript parts)
C: But why two a's after it? I'm not too savvy with JS but according to my bad logic there's one a too much.
C: part `+ + 'a' + 'a'` equals to `+ Number('a') + 'a'` so double `a` are just to obfuscate the example
C: `('b'+'a'+ +'anything'+'a').toLowerCase()` works too part `+'anything'` is equivalent of `Number('anything')` and returns NaN ` + ''` gives 0 as it's `Number('')`
C: I just tried this out, the picture is indeed correct. That's because the string token after two consecutive symbol tokens will be considered as NaN by the lexer. Correct me if I'm wrong.
C: Oh now i got it thanks
C: That makes sense. But why does it log "banana" and not "bananaa" in the screenshot?
P: 2 years ago I started learning JavaScript so I could automate my Google Sheets docs. 15 months ago I left my sales job and started an internship in front end development, today, I got to do this!
C: Are you doing the internship remotely? Btw congrats!
C: Would love to hear more about the start of that journey : "using js for Google sheets automation" is something I'm just starting to feel a need for. Did you write anything about this, or can you recommend any sources?
C: Congratulations!
C: Congrats!! Keep up the great work!!!
C: Awesome! I started out learning JavaScript to automate my Google Sheets, letter writing, emails and filing as a Front Desk Admin/receptionist. Got caught by our DevOps guy and head of IT as I started diving deeper into scripting and automation and dragged into their department! Didn't make the jump into programing but into IT, automation, and have been moved to the team that handles our website. It is WILD how open the point of entry into tech is in that little scripting box is
C: Hey! How long was your internship?
C: Nah it was in person last year back when that was possible :) but have been working remote since March.
C: Yeah for sure, I wrote a post in this subreddit about my journey when I first got the job. I think I posted it here already, otherwise you can look thru my post history! I also made a little course on YouTube for learning how to do JavaScript on google sheets, that might be helpful for you https://www.youtube.com/playlist?list=PLsPxAE4jwXDKnEjMnAiXNc1b92f5voUzu
C: if nodejs is an option, i recommend this: https://github.com/theoephraim/node-google-spreadsheet
C: found the post, [https://www.reddit.com/r/learnjavascript/comments/cd5jud/9\_months\_ago\_i\_started\_learning\_front\_end/](https://www.reddit.com/r/learnjavascript/comments/cd5jud/9_months_ago_i_started_learning_front_end/?utm_source=share&utm_medium=web2x&context=3)
P: Web Application Security Checklist ✔
C: * Use `rel="noopener noreferrer"` for `target="_blank"` links [https://www.jitbit.com/alexblog/256-targetblank---the-most-underestimated-vulnerability-ever/](https://www.jitbit.com/alexblog/256-targetblank---the-most-underestimated-vulnerability-ever/) [https://web.dev/external-anchors-use-rel-noopener/](https://web.dev/external-anchors-use-rel-noopener/)
C: I don't understand how the https thing is still considered by some to be optional. I just leave sites that connect over http. But what's wrong with inline scripts?
C: Hey, this is a nice list, any idea where I could learn these topics? Youtubere/courses?
C: Hey how to work around the acces control allow origin:* ...if I don't include it I get the CORS error everytime
C: Potential vector for XSS attack. See CSP to help secure.
C: google them one by one. there are tons of blogs videos repos out there to demonstrate
C: You can sign up for my weekly WebSecurity tips at [https://tuesday.websecurity-academy.com](https://tuesday.websecurity-academy.com) 😊
C: If you’re talking about CORS issues in development you can use a browser extension to apply the headers.
C: You need to make changes on your server side code. Let's say you have a `ListOfAlllowedDomains` that you want to allow access under cors policy. For each incoming request, if origin is one of the item in `ListOfAlllowedDomains`, add acce-control-allow-origin:theOriginDomain or block the request otherwise. Now almost all web frameworks have an easy way to do this with one single configuration so you need to explore the web framework's cors configurations.
C: Or make changes in /etc/hosts 127.0.0.1 myServerDomain
P: One thing that gave me a huge skill boost with JavaScript was understanding Higher-Order Functions. A Higher-Order Function can take functions as arguments and/or return a function.
C: Side note, I love that color scheme Edit: If anyone wondering it is [Neon Glow Theme](https://marketplace.visualstudio.com/items?itemName=NickScialli.neon-glow-theme)
C: The best use cases are with map and filter
C: What happend if you use a promise as argument? Everything becomes a Promise, just dumb question, I dont have a computer close right now
C: Isn't HoC more like function(data) { return function (user) } Use by function(data)(user)
C: It is "Neon Glow" in VS Code
C: Any specific examples or links to uses of this? I’m a JS noob, but working with arrays is my main need. I’ve been watching some tutorials or filter/find/map, etc... but my usage of them is pretty basic so far. Thanks for an examples :)
C: So a Promise is technically an Object containing multiple functions, so by definition if you pass an Object into a function as an argument it’s still just a normal function. This is a weird edge case though tbh since at that point we’re talking about asynchronicity.
C: [deleted]
C: .map and .filter functions accept a function as a parameter and then call it. const arr = [1, 2, 3, 4, 5]; const newArr = arr.map((x) => x * 2); console.log(arr); // Because .map accepts function you can take it out like this const doubleValues = (num) => { return num * 2; }; const newArr1 = arr.map(doubleValues); console.log(newArr1) Now we can create more complex mapping functionality and easily unit test it after, because the `doubleValues` function is outside of map. There are tons of articles out there, about filter and map.
C: Not true. The function passed into a HoF is itself a Callback. The HoF may or may not return a func, but a Callback never does. A callback that is a first-class function is never called manually. HoF’s *should* by the book only have first class funcs passed into them them. This example technically checks out if this is the whole program. The issue here is that without reusage of the first-class function / callback, the example doesn’t really get to the bottom of why we have a name for this and therefore doesn’t really make sense. It’s for functional programming reasons. Don’t repeat yourself. Reuse the first class func over and over again, but never call it manually. So this whole example misses the point of HoFs.
P: I made a highly customizable Audio Visualizer!
C: Hi guys! I made this audio visualizer using HTML5 canvas and Web Audio API. Please try out the visualizer at least once and let me know what you think: [Audio Visualizer](https://roy-05.github.io/audio-visualizer). It uses the device microphone to steam audio to the visualizer. I built it so that when I am chilling with my Spotify, Youtube playlist, I have some cool visuals instead of a boring plain view. So just turn on a song and let the visualizer run! You can find the source of the project [here](https://github.com/Roy-05/audio-visualizer). Feel free to fork the repo and make pull requests if you want something changed, I would love the feedback and any suggestions on how to improve my code! Thanks guys, I hope you like it!
C: Loved your project! I'm on my way into learning js. Could you please share how you initialy started this project? Where did you begin?
C: Matilda Mother!
C: This is dope! I built [something similar ](https://compozer.netlify.app) a while back but with manipulating the audio midi files to change the visualizer. I love this kinda stuff. Great work!
C: Tried to use while listening to something on YouTube. Dont seem to work. What I am doing wrong :s
C: yeah, of course, I'm glad you like it! It essentially was an iterative proccess. Initially, I wanted to build an audio visualizer but there were so many variables so I simplified the problem - instead of using the microphone i downloaded a song and tried to visualize just that. MDN is your best friend when it comes to web dev and I eventually stumbled upon the WebAudio API. So, I had my building blocks - a song, and WebAudi API, I just had to visualize it. First i made a simple rectangular canvas and visualized the audio as a series of rectangular audio bars. Once I did that I kept adding features till I reached a point I felt satisfied to stop at. So, I guess the gist is, establish the core aspects of your project and start there. You can then build off it. Good luck with JS, it's a really fun journey!!
C: An underrated album!
C: Wow, I just checked it out and that's really well built! I love the animations you've made for your visualization. Do you have any plans to make updates in the future? Anyway, great job man, starred it on github!
C: Thanks man! Yeah if I get some time, my next goal is to create a MIDI uploader so you’re not limited to Beethoven or Tetris. The mobile experience is garbage, so I wanna build knobs that work on mobile too. If you haven’t heard of it, check out Pts.js, it’s a library that makes canvas manipulation and animation a breeze. I used it in React which had its challenges, but their vanilla documentation is great.
C: well I checked it out on mobile and the UI looked pretty good, so good job on responsiveness! Yeah, that's a good idea, it'd be great if you could upload your own files to visualize too! Okay, thanks I'll look into it. I like making canvas visualizations so looks like it will a very useful library!
P: amazing GitHub repository contains modern JavaScript tips, tricks, best practices and code snippets.
C: es6-cheatsheet [https://github.com/DrkSephy/es6-cheatsheet](https://github.com/DrkSephy/es6-cheatsheet)
C: Cool thank you soooooo much
C: [deleted]
C: This is a good cheatsheet but who was it written by? A few things look like they could be improved. For example in the getter/setter part: get name() { if(this._name) { return 'Mr. ' + this._name.toUpperCase(); } else { return undefined; } } It seems to me you should not needlessly add "else": get name() { if(this._name) { return 'Mr. ' + this._name.toUpperCase(); } return undefined; } or you could simply use a ternary operator: get name() { return this._name ? 'Mr. ' + this._name.toUpperCase() : undefined; }
C: I really liked Big Java by Horstmann textbook. It’s very well organized, has lots of practical examples and explains common mistakes. I have the pdf version and use it as a reference constantly when I’ve been away from Java for too long. I wish every language had a book that well put together I’m actually looking for a JavaScript version of the same book if anyone knows one
C: Or omit the second return entirely. Javascript returns implicitly `undefined` when there is no return statement while exiting the function.
C: There's no canonical "correct" form here and I've seen codebases with style guides that specify all three. My own personal opinion is that the first form is actually the clearest (just barely beating out the second) and should be preferred, but ironically I'm pretty sure my linters at work are set up to prefer the second - set up by ME! Many people dislike ternaries entirely, and some people find #1 to be too verbose, while some find #2 to be "tricky" because there is effectively a bit of "fall-through logic". I think the best answer is they're all close enough that you can choose one, make it the standard, and not think much about it EXCEPT to ensure you're consistent in applying it. Consistency usually trump any particular style choice in my experience.
C: Make a PR if you feel so passionately about it.
C: just trying to figure out how reliable the whole thing is
P: Gatekeeping programming
C: Companies want passionate employees because they will work longer hours for less money, no other reason.
C: Ye game companies are widely known to exploit their employees, so they just filter for those susceptive to it.
C: Lol. I lost passion for programming 10 years ago, yet here I am. Still programming because it pays the bills.
C: Ah, so you want to be a welder? What do you weld at home?
C: That is toxic hustling right there
C: how bout I have other hobbies different than what I do already 40-50 hours per week
C: This is why game developers want to start a union. Shit like this. Patriot Act had a good video about this industry and it aligns with stories I've heard from people: https://www.youtube.com/watch?v=pLAi_cmly6Q
C: This is it, the game industry wants young people passionate about games and programming because they know those people will work long hours for below average pay just to work on games.
C: Also learning for your job on your own time is unpaid labor
C: About your application for surgeon...
P: Free Full-Stack (HTML/CSS/JS, Node/Express/MongoDB) Web Dev Course
C: Great stuff. I'm very interested in the back-end of JS so definitely checking your videos out!
C: Thank you so much! Have you considered doing a fullstack deno course too?
C: thanks a lot. i really appreciate this :)
C: Thank you for sharing!
C: Thank you soo much dude!
C: Awesome, hope it helps!
C: Happy to help. I have never used Deno, so I don't feel qualified to teach it. It looks fun, so I may tinker around a bit when I have more time. Thanks for sharing.
C: Happy to help!
C: Very welcome. Hope you find it helpful.
C: You're soo welcome, dude :-D
P: I Love MDN ♥️ Share your appreciation for MDN
C: As a student, having MDN was really useful. It made it a lot easier to learn and understand programming. If the books didn't cover a certain topic that well, I could just look it up on MDN. It is sad to see the MDN team go.
C: I love MDN. Their documentation is very solid!
C: Same here. I hope it will never be out dated since this cut in MDN team
C: MDN you been my main resource from the start!
C: MDN is great but equally as great is javascript.info! At times MDN explanations/ examples have been inferior. Both are exceptional references!
C: This is what money and greed gets you. Fuck Mozilla for this, really.
C: What do you mean “see them go”?
C: The whole team responsible for MDN got fired. Or, at least the technical writers did.
C: What the?? Who'll maintain the DOCS then??
C: The "community" (= suckers like us) while the Mozilla CEO keeps her 2.5 million yearly salary.
P: If Frasier was a JS dev instead of a Psychiatrist
C: Spelled ECMA wrong
C: I don't get it
C: IAmDeveloper did it better, and did it first * https://i.redd.it/pnyp3ajb8zc31.jpg
C: Frasier, or [Benjamin from Wayne's World?](https://www.youtube.com/watch?v=YE4NyXL5JAQ)
C: Isn't ECMA based out of Switzerland tho? Also, Tweeting at 3:40AM. Love those early morning tweets.
C: Carbonated Coffee. Yuck.
C: That was bugging me.
C: It's a play on how champagne isn't really champagne unless it's made in champagne France. As Javascript is technically made by ECMA and used to be called ECMAscript. The joke being that like champagne that's not made in France is sparkling wine, in JS case its sparkling Java.
C: ECMAScript is the official spec for JS. JS was never called ECMAScript.
P: Remove duplicates from an array!
C: If you want one line shorter const cities = ['London', 'New York', 'Sofia', 'Sofia']; const uniqueCities = [...new Set(cities)];
C: The correct alternative is to yell at the backend guys and ask them why TF they're sending you duplicate data. /s
C: Can we do more of these things? Post a tip-card, and we'll find quicker or better ways to implement in the comments section
C: Be careful about using this at an interview that cares about efficiency. It's a lot easier to type than going through an array and removing the duplicate elements, but it uses more memory. It creates a set and then a brand new array. It also needs to convert the array to a set and then back to an array.
C: You can easily remove duplicates from an array by converting it to a set and back to an array.
C: If you want another line shorter const uniqueCities = ['London', 'New York', 'Sofia']; ^^^\s
C: hey, we backend devs do that on purpose. Everybody looks at GUIs, but we need attention, too!
C: What is a good alternative?
C: Fails to implement the core business logic since the COO refuses to not add duplicate cities.
C: I like this solution.
P: My first eclipse using CSS :)
C: Post it on codepen so we don’t have to see it as a recording and we can see it in true color and we can see the code. Also, try making it a perfect loop so that the background color is the same in beginning and end.
C: I can't directly edit the post, so here my code :) : [https://codepen.io/anon/pen/byGpPG](https://codepen.io/anon/pen/byGpPG)
C: I had no idea that that was/is possible using CSS dayum Keep up the good work!
C: Wow. Impressive! 👏
C: It's beautiful, congratz :)
C: Shouldn't this be in a CSS subreddit? Nice anime though.
C: Not sure why you got downvoted. This is a sub meant for learning. Post the code OP.
C: @All: yeah, sorry my bad. This is my first post and I didn’t know how to make a proper pose, didn’t find any rule when posting either, so I just gave it a try. I’m learning JS, but this is the beginning of the course, and it’s just purely about HLTM and CSS. I’ll edit my post to make it at least appropriate to the way of posting in this sub. Thanks for reminding.
C: You can find several on google: * https://codepen.io/akirchmyer/pen/IivGC * https://codepen.io/youhe_/pres/XjAvyQ * https://codepen.io/raubaca/pen/YxYOBL >This is a sub mean for learning. for learning JavaScript, not CSS - this post is in the wrong sub ...
C: I agree. Not even the right sub, but in the very least the code should be posted.
P: Six months after I started learning Javascript, I made my first React app!
C: Looks great! I'd suggest adding some transitions to really take this to the next level.
C: Six months (to the day) since I started learning Javascript, I've made my first React app. I'm a filmmaking teacher, and I'll be using this app with my students to help them find out what age rating their film would be given by the BBFC (the film classifiers). I've not deployed it yet, but I'm pretty proud of it! Thanks for all the help from this sub! [The repo can be found here.](https://github.com/djcranney/bbfc-film-age-certification-app)
C: wow. can i ask how much js did you learn before you went into react? i havent made a project in regular js yet so idk if i should try it but this looks really cool
C: Nice work mate! Wondering how you did those shapes in the background?
C: Thanks so much for the feedback, I'm actually doing that as we speak! Learning transitions has been on my to-do list for a few weeks, and I knew this would be a perfect project to use them. Will be sure to post updates when I've added some transitions and extra features. Thanks so much!
C: You should look into netlify for easy, free deployment
C: Thanks a lot! I did about 4 months of JS, at least two hours a day, and made sure I had a really solid understanding of all of the basics (variables, arrays, objects, loops, etc). I actually built a basic version of this in Vanilla JS first, then decided to go and learn React and rebuild it. Make sure you’re really comfortable with JS first because all of the logic involved in this is JS, React just handles the states etc.
C: Try react-spring
C: Thanks mate! I’ve been looking at that this evening, and this (along with learning how to use React spring) are my to-dos for tomorrow. Thanks for the tip!
C: I’ve just had a quick look at it, and I LOVE it! I’m going to learn how to use it tomorrow. Thanks for the pointer, I’m excited!
P: Async vs. Sync
C: This is only one specific perspective that could be misleading. You can have the same graph using only asynchronous calls. On the left you could have synchronous asynchronous (one promise after another) and on the right you could have asynchronous asynchronous (Promise.all). What I’m trying to say is that just because your calls are asynchronous doesn’t mean they are happening at the same time. You have to do that purposefully.
C: Except that’s not necessarly true for javascript. JavaScript is not multi-threaded. So if your task 1 a for loop that last 20 seconds, tasks 2-3-4 are not ran concurently. So really what happens is that each function calls are queued one after another and the execution of the response of async functions are only added when the promise is completed or the callback is called. Which allows the program to keep executing other functions while it “waits” for the async function. And this is why I love NodeJs for a server. It is very easy to write async code in JavaScript.
C: Unfortunately, all the saved time was wasted on how long it took me to figure out asynchronous programming.
C: If you had each task dependent on the previous task's results/outcome, can you still run it in Asynchronous mode?
C: Somewhere in this diagram I am hearing whispers of, "Concurrency is not parallelism, but it enables parallelism". It's a subtlety that's being missed. https://medium.com/@k.wahome/concurrency-is-not-parallelism-a5451d1cde8d https://www.youtube.com/watch?v=cN_DpYBzKso
C: I think they are mixing up "asynchronous" and "parallel." You can wrap normal code in a setTimeout or Promise and it will become asynchronous. It still won't run at the same time, though. You need separate threads to run async code at the same time In Javascript, you could do this with Web Workers In the browser, stuff like network IO is handled by a thread pool under the hood. That stuff truly runs at the same time. But if you make 3 requests, and then each fetch takes a callback that maps over some data, those callbacks will not execute at the same time despite being "asynchronous." They will be popped off the message queue and processed synchronously, one by one. I think this article gives a better understanding of what "asynchronous" means within the context of JS: [https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop](https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop)
C: Thank you for this simple but very clear representation of asynchronous programming. Sadly some resources explain asynchronicity unclearly (in particular eloquent javascript), and this image is a confirmation that I understood the concept right
C: JavaScript is also not typically multithreaded. The only time you'll see behavior this clean is when you are waiting on something like a network request. Wrapping synchronous code in a Promise won't make it run in parallel.
C: Thats why I was so confused about the async/await. Like the name is async but you wait for it to finish so it didnt make sense to me
C: Yes because you are describing one task. Most tasks are made up of smaller tasks.
P: Master Flexbox 2021🔥- Build 5 Responsive Layouts🎖️(Link in 1st Comment)
C: Tutorial - [https://youtu.be/m8BSEUUB5so](https://youtu.be/m8BSEUUB5so)
C: This is super dope man! Love the way you explain things
C: great content thanks for sharing.
C: Dude this is awesome!
C: Thank you! It's very useful for me 🤍
C: I'm weak af at flex box. Thanks for this!
C: This is really neat
C: Thanks!
C: You're welcome :")
C: Most welcome :"D
P: I started a tutorial on how to make a pseudo 3d racing game in Javascript (link in comments)
C: That's great!! I'm still too much of a newbie to make something like that, but I am loving it. Reminds me of the arcade game Pole Position.
C: Nice work! This reminds me of Outrun. Loved that game!
C: **Hi, You can watch the full video episode 1 on:** [**https://youtu.be/6td\_zpQC1U4**](https://youtu.be/6td_zpQC1U4)
C: Reminds me of RadRacer on the NES. Nice work.
C: Is that Denver in the background???
C: Uses Doom 1 style raytracing?
C: Reminds me of Pitstop and Pitstop II for the Commodore 64 -- cool.
C: This is really cool, just curious what did you do to organise the timed or delayed functions? I'm working on a JavaScript game myself. Great work! :)
C: Thank you. I'm glad to hear you're interested in this.
C: Yes, you are right. Thanks.
P: 8 useful Javascript console methods🔥
C: I'm going to make use of console.time() and console.timeEnd() for sure. Thanks!
C: Good list. console.trace() is also a good way to avoid debugging headaches.
C: console.table() is great
C: I think it would be useful to the student to know what the output actually is.
C: Nah, Google and SO can take it from here.
P: #sketchnotes - 'this' in Javascript
C: Still did not get it.
C: i understand less now
C: ~~Why does the new case say 'undefined'?~~ Edit: NVM, I see now. Its trying to access the `ctx` property and from a new, empty object so its resulting in `undefined`
C: Don’t forget the special rules for “Fat Arrow” functions! Inside the body of a a fat arrow function ( functions written like this: ‘() => consoled.log(this);’ ) the ‘this’ keyword permanently represents whatever ‘this’ was equal to inside the scope in which the function was declared.
C: That's one of three things that are completely different when going from C/C++/C# to Javascript and will cause the most mistakes. (lack of true arrays, and local variables allocated on the heap are the other two)
C: I think the easier way to explain it is: `this` is set to whatever is to the left of the dot (`.`) when you call the function: obj.fn(); // `obj` is before the `.`, so `this` is `obj` obj1.obj2.fn(); // `obj1.obj2` is before the `.`, so `this` is `obj1.obj2` fn(); // Nothing before the `.`, so instead uses the global context (i.e. `window` in browsers, `global` in NodeJS) fn.call(myThis); // Can also set the `this` value explicitly if we want, "overriding" what is left of the dot new fn(); // Or, we can use `new` and `this` will be a new, empty object
C: this
C: Same
C: How does JavaScript have a lack of true arrays? Is it that under the hood it’s allocated as noncontiguous memory or?
C: That's a good way of putting it! One except is that when when using arrow functions, the `this` value is not bound, therefore it is lexically scoped. Whatever the `this` value is when you define the arrow function, it will remain that way anywhere you call the function. This is great for use in Vue where you use `this` like crazy.
P: JS: Assigning values to multiple variables
C: Nothing wrong with let a = 5; let b = 8; let c = 12;
C: That's called destructuring assignment.
C: The longhand example is a bit odd. I really don’t think you should be declaring and assigning separately for no reason. Regardless if the shorthand is appropriate another way is ``` let a = 5, b = 8, c = 12 ``` Which makes for a better comparison, and in this case is imo clearer for assigning just a few simple values
C: Yeah, array destructure assignment
C: Eh. Not a fan. If I reviewed a PR with this, I would probably ask whoever it was to rewrite it like a normal person. I am as susceptible to writing overly clever code as anyone, but if literally the only benefit of whatever you did is that you “saved” two lines of code? It’s probably not worth the confusion. Save it for a code golf competition.
C: Yeah, way easier to find back and git diff.
C: Simple, clean and easy to read.
C: I prefer this way too.
C: Your example is both shorter and (significantly) more memory efficient than the shorthand example. Edit: after actually testing this I discovered that I was in fact wrong about memory efficiency. Somehow, at least in whatever version of Node I’m running, destructuring actually used less heap and RSS than this example.
C: Hey, this is interesting. Could you explain why the longhand version is more memory efficient. I am thinking something along the lines of allocation of some array and then its garbage collection. I am not even sure if something with some array is going on, if at all. or if it's just a special language construct. I have heard of destructing in rhe past but can't quite exactly recall how it's a different topic and how it fits in the picture with array. Also, I'm just a beginner. So this maybe a dumb question :)
P: If you are not enough confused today explain this!
C: As /u/senocular already pointed out, the tricky thing here is that `{}` is an ambiguous bit of syntax that depending on the context can either be an empty object or an empty code block. You see the same ambiguity more commonly with arrow functions: const getEmptyObject = () => {}; console.log(getEmptyObject()); // undefined Instead of returning an empty object, we accidentally wrote a function with an empty code block, which implicitly returns `undefined`. We typically resolve the ambiguity with parentheses: const getEmptyObjectForReal = () => ({}); console.log(getEmptyObjectForReal()); // {} An empty code block is not valid inside parentheses, but an object literal is, so we get the object we wanted. Similarly, in the examples you posted an empty code block is only valid when it is the first syntax in the line. An empty code block cannot follow a `+` or a `===`. So for the first line, the first pair of curlies is read as an empty code block and is evaluated then disappears. Step by step, the first line evaluates like this: {} + [] === [] + {} + [] === [] + {} + "" === [] + {} 0 === [] + {} 0 === "" + {} 0 === "" + "[object Object]" 0 === "[object Object]" false We can test this out by evaluating one side of these at a time: {} + [] === 0; // true "[object Object]" === [] + {}; // true [] + {} === "[object Object]"; // true "[object Object]" === {} + []; // true Just like an arrow function, we can force an empty object with parentheses too: ({}) + [] === 0; // false And beware! A console.log has the same effect! console.log({} + []); // [object Object]
C: ({}) + [] === [] + {} // true `{}` isn't an object in the first line, its an empty block. Parens will ensure its seen as an object as it is in the lower example
C: i am now glad python tells you you cannot concat numbers and string
C: you are a god
C: This is so clearly explained! Thank you!
C: Kudos for an impressive explanation. I've been doing JS for 3 years now, and engineering for 6, and I couldn't have explained these low-level nuances of JS anywhere near this well!
C: Funny enough in Chromes v86.0 REPL, the first statement evaluates to `true`, even without the parentheses. * `> {}` evaluates to an empty object, unlike Firefox where it is treated as an empty block which evaluates to `undefined`. * `> {} + []` evaluates to `0`, which means it is treating the curly braces as an empty block now, just like Firefox. * `> {} + [] === [] + {}` evaluates to `true`, which means it is treating the curly braces as an object again? --- node.js v14.13.1 REPLs at least makes sense, it always treats an `{}` at the beginning of a line as an empty object.
C: > `{}` isn't an object in the first line, its an empty block. Depends on the interpreter, so not always true. I checked Node back to v12, and ``` > {} + [] '[object Object]' > {} + [] === 0 false > {} + [] === [] + {} true > [] + {} === {} + [] true ``` It seems browser consoles deviate from Node's expression interpretation, but not in a consistent manner. Chrome 86 ``` > {} + [] 0 > {} + [] === 0 true > {} + [] === [] + {} true > [] + {} === {} + [] true ``` Firefox 81 ``` > {} + [] 0 > {} + [] === 0 true > {} + [] === [] + {} false > [] + {} === {} + [] true ```
C: Why is it an object in the second line?
C: From the context of its usage. You can't add a code block to other things, so it has to be an object. With the first one, it can be either a code block or an object, but JavaScript chooses to default to a code block (`+[]` alone is valid code using [unary plus](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Unary_plus)).
P: My small JS books collection
C: After donating a bunch of old programming books to the library (which will likely end up just going to the recycle bin), I'm not getting any more physical books on tech. I'm still keeping my classic C and C++ books but the web stuff in particular just don't age well...unless JSP is making a comeback.
C: go [javascript.info](https://javascript.info) yourself , it will become even smaller .
C: What did pikachu teach you? :)
C: Is this of any use? https://github.com/getify/You-Dont-Know-JS
C: With these books, have you seen improvements with your coding quality?
C: 😍😍😍
C: I am a newbie just started with programming 2 weeks ago, can books like this help me ? Is it better than following a course online ?
C: Which ones are your favorite? Have you also given Eloquent JS a read?
C: Oh man, hell lot of things. Friendship and loyalty being few of them. Pikachu was my childhood idol .♥️♥️
C: Oh yes.. JavaScript the good parts helped me in getting fundamentals. And high performance JS, made me make better and effective use of prototype and scope chain. Etc etc . I find these books to be very useful than videos or other form of learning.
P: The online course for "Automate the Boring Stuff with Python" is free to sign up this week.
C: Thank you. Eagerly looking forward to automate ..
C: Purchased the course a while ago (on sale) and purchased a hard copy of the book because I wanted to support more like this (and I like real books for some applications dammit). Both are excellent so far :)
C: I’ve heard so many good things about this course so thank you so much!
C: Thankyou Ive been looking for something to keep me busy this summer but was having a hard time finding inspiration.
C: Just getting started with python on another udemy course. But from what I have heard you are a legend man. Thank you! I signed up.
C: Thank you i love you
C: Al.. You are a giant amongst men!
C: :D
C: Thanks!
C: I love you too, stranger on the internet. EDIT: Can I borrow some money? Just make the check out to "cash".
P: I'm 100% self taught, landed my first job! My experience!
C: I was just wondering, 1 year ago, what were you doing and did you have IT experience before this ?
C: Hey this is a great write-up. Thanks for sharing what you have learned along the way.
C: This is very inspiring. I am like you were in the beginning and need a way out of this pit! How many of these interviews did you do till it worked out? Is there a lot of demand for junior level django / python? What are these kinds of jobs paying? How did you manage in your first week there? Did you feel overwhelmed or were you very confident?
C: Zero IT experience, was working as a manual laborer and delivery driver
C: About 40 applications. 5-6 responses. 4 Face to face interviews (including technical tests) 2 offers! *edited Is there a lot of demand for junior level django / python? Im in the UK. I have found the answer is usually no, you will find some junior adverts occasionally, however roles that I have seen that require 1-2 years experience I have still applied for with a good cover letter as I have had some companies get back to me saying they would be prepared to interview for a junior role. Tell recruiters you are also looking for a junior role, as I have found they may call the company managers directly and find out if they are prepared to proceed with a junior level role. I have found junior roles range immensely, from 23k-50k. I have been told many times what you get offered depends on how well you come across and how well you do in the technical test. I am due to start soon. Only just accepted my offer but will definitely update!
C: Fucking epic.
C: [deleted]
C: Holy fucking shit, that's fucking epic. Wow that's what I call motivation. I have absolutely no reason to sit here thinking I can't do it. Sir, madame, or other thank you for taking the time to inspire us all by sharing your story. This is truly an inspiration to continue my path to python. Thanks.
C: That’s awesome! Good on you, man!
C: Thanks a lot!
P: As a Gift to the Community, I'm Making my Python Book Free for 72 hours!
C: This is awesome, thank you so much for doing so! Especially appreciated in a time like this with the pandemic going on and many people unemployed or stuck at home. Will be sure to check it out and support your book!
C: That's really rad, dude! I'm a beginner and I was thinking of getting books, but I couldn't pay for $20 atm. You're doing great things :)
C: Thank you, I look forward to going through the course.
C: \> I've always felt that a beginner's book should teach more than syntax. Thank you. This has been my greatest frustration with trying to pursue python: just that all the beginning instruction materials I've seen have such inane/trivial example applications. Speaking for myself, I've always needed to have some sense of how the code fits into the bigger picture of tasks I might conceivably want to accomplish in the real world.
C: I have done python in a long time I wanna learn more about it thank you!
C: Thank you man, will be a great help to me as a beginner. Have a nice day.
C: Thanks for checking it out. I hope you enjoy it. Let me know if you have any questions!
C: Thanks! I hope you like it!
C: Thanks for checking it out. I appreciate it!
C: One of my goals is to do a project oriented book where you learn Python while building little applications. Python 101 has some aspects of that in that, but it's not quite what I had in mind. I do build applications in my wxPython book. And I'm also building mini-applications in my Pillow book though.
P: "Automate the Boring Stuff with Python" Udemy course free to sign up until May 7th.
C: You the best, Al. Thanks for removing barriers to help people learn Python.
C: Probably the best python crash course in the planet, especially useful for office workers. I’ve automated so much shit in my job that I’ve made my coworkers lives easier.
C: Thank you so much!
C: wow, i am in middle of going through the book. this seriously helps so much! are you really the author of the book? did not expect to find you here, thank you. today is my first day actually using reddit, i think i made a great decision
C: Al SWAGart back at it again
C: Al, haven’t had the time to get started on the course but I am very excited. I’m a college professor, losing my job in two weeks so I hope this will be the stepping stone to stepping OUT of academia. You are such a great person for helping us out especially in these uncertain times.
C: [deleted]
C: He also has a twitch channel twitch.tv/alsweigart where he live programs and answers questions
C: I work in a school and I handle all of the student data and testing. So anything from graduation requirements, scheduling classes, contact information, parent teacher conferences, etc. My most recent python script saved my team a whole week. Every year around this time, we have to audit transcripts by eye to check which students are on track to graduate on time by looking at the amount of credits per subject they have (which means literally looking at each kids’ transcript, determining which classes belong in which subject, adding the credits up and putting it into google sheet document we share). This is over 500 kids and typically takes 5 of us to complete over the span of a week while we all do other things and even then humans make errors. So back to Python. I wrote a script that reads the entire PDF file of transcripts, pulls all of the classes and their credits for the class they took for each kid, puts it into a pre-existing excel sheet that already has formulas to categorize each class by subject and then tallies the total credits and uses conditional formatting to highlight the classes for which students are behind on credit. So we went from a 1-week task requiring the entire team to a one day task requiring only me. My boss and coworkers all gifted me a shit ton of gift cards and praised me. I can probably automate enough to the point where we don’t need one my more useless coworkers.
C: Didn't know! Thanks
P: After 5 years of learning Python as a hobby, yesterday I did my first contribution to an open source project!
C: Congrats! As a newbie this inspires me.
C: And for those who don’t feel comfortable enough or can’t find a reason to do a PR - you can still contribute to open source software, too. Creating issues for new features, bugs you’ve noticed, writing/editing documentation, etc are all very useful contributions.
C: Happy for you! Thanks for sharing, this is very encouraging!
C: I've been learning for 4 months and am now making a user interface for a little hacking project as my first contribution. Just a cli nothing too advanced.
C: Walking up to a project that's done well is such a pleasant experience. You start to think "maybe I am good at reading code, and I've just been reading bad code this whole time"
C: Congratulations!
C: you're hired
C: [deleted]
C: Mind sharing which hacking project?
C: of course! I'm just finishing the cli, decided on trying to make it closely resemble metasploit.
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code JUN2020FREE
C: I want to share that i have finished your online course some months before. I had already done some python tutorials, but your course helped me feel more confident and i figured out that i can do everything with all these available libraries. As an office employee i coded many scripts which helped me "automate the boring stuff". I had to put more than 200 stamps and signatures on pdf files. So i made a script turning them to jpg and then copy the sign and stamp jpg file and paste them. I made some web scrapers as well and i gather data. Now im exploring data science and going to start a new project soon with the data im gathering. Also i was accepted for a msc in data science. You have my deepest thanks.
C: Alright, no excuses. Skip the netflix and pints each night and let's see what the story is with Python.
C: Thanks very much Al! I started watching the first 15 episodes on YT around a week ago and they were absolutely phenomenal. Dropped by on this subreddit and noticed last month's giveaway already ended, but then I noticed you have been doing this for quite some time. Finally got to claim it!
C: Can someone automate taking this course for me?
C: I'm a little over halfway through the course and I'm really surprised at how much I have learned in such a short period of time. Both the book and the course are worth every penny and I'm so glad I found them. I started learning python from scratch using a little free android app, but I ended up just migrating over to ATBS because the concepts are explained way more thoroughly in your course. For anyone starting out with python, I 100% recommend this course.
C: Thanks so much, got the No Starch Press Humble Bundle mostly for Automate the Boring Stuff and Cracking Codes. Have a great day!
C: The python community is one of the best i have ever seen. Everyone is here to help each other and grow.
C: Just finished it! I highly recommend it. Be prepared to watch some sections multiple times. And look for questions asked by other students to help you understand concepts.
C: Thanks so much, this is really great
C: Honestly you don't really have to skip the pint lol.
P: Automate the Boring Stuff with Python Udemy course free to sign up until April 7th.
C: You are the best! I just finished it last week and I was wondering how Zophie is doing?
C: Very cool, and thanks Al. Hope you are doing well.
C: Thanks, Al. This course was the only thing that got through to me and I managed to learn enough python in two months (from no programming experience) to succeed in my position. About a year later I started a new career involving ML research! I can't thank you enough. Programming is my favourite hobby now.
C: THANKS SO MUCH AL!!!!!!!!!!!!!!!!!!!!
C: Wow. This is actually very excellent of you.
C: [deleted]
C: Thanks!!
C: Wow, this looks great. Thank you!
C: Thank you so much! I did this course 3 years ago. Great resource.
C: [Ring ring ring ring ring ring ring banana phone.](https://imgur.com/vs0sXSO) I've been inside too long.
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code
C: Can someone give this man a gold
C: I recently finished your course and find myself overwhelmed with options of how to proceed. I have a very vague understanding of python at the surface level, but I'm still very interested in moving forward with learning. Any advice or how to proceed? Projects? Enrolling in other classes, revisiting old concepts till they're concrete? Thank you.
C: I have so many great things to say about this man and his work. I used the Udemy course and also read the book because it goes more in depth. Once you complete the course, you will ask yourself why in the hell would he give this book away for free on his website? It’s because he cares. You person who is reading this now, go to Udemy and buy his course. Even if it was $50, it is worth it. The most useful items for me have been web scraping, regular expression, working with Excel and combining PDFs. Support this man on Patreon: https://www.patreon.com/AlSweigart. Because of his work, I feel more confident than ever about my Python skills and now I am working on projects that I’ve been looking forward to for years. 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
C: Thanks. Huge fan of your work, Al.
C: Thanks alot mate. Really appreciate it.
C: Thanks man, I really appreciate this. Times are tough and you're helping to pull us out of it.
C: Is it only me who noticed the Coupon Code text? Thanks for this again, I signed up a few months and now I am gonna make my friends sign up as well.
C: Bitcoin lol
C: So a lot of people say 1) work on projects and 2) look at the source code of open source projects. These are sorta bad pieces of advice. "Work on projects" *is* good, but the advice doesn't help you decide what to work on. And a lot of open source projects aren't very friendly to outsiders. It takes a lot of onboarding to get started, even for experienced devs. I've created a bunch of small, simple, text-based programs (mostly games and animations) for people to use. My idea is that you copy the code directly, run it, make adjustments, and then try to recreate them yourself. You don't need to memorize the code, just the make your own version of it. It's stuff like Blackjack, Tic-Tac-Toe, mad libs, etc. https://github.com/asweigart/pythonstdiogames There's a time after you learn the basic syntax, but still don't "know how to make a real program", and this is called *tutorial hell* or *the desert of despair*. Just keep working through it. For concrete advice, I'd encourage you to learn regular expressions and learn how to use git. But yeah, keep doing projects and classes and books too. If you want to learn computer science stuff in particular, the thing to google is "data structures and algorithms". [Coursera has a good free course called "Algorithmic Toolbox"](https://www.coursera.org/learn/algorithmic-toolbox/) that you can do. It's basically a freshmen CS course.
C: Explanation here: https://twitter.com/AlSweigart/status/1288969172337057792
P: Second edition of Automate the Boring Stuff with Python is now free online.
C: /u/AlSweigart should I continue with the first edition which I have in udemy, or I should just go straight with this? . Thank you!
C: Happy new year to you Al!!! From Japan with love!
C: Hey guys, I thought I might share something cool with you all! As some of you may know, the walrus operator (`:=`) was recently added to python in 3.8. Well, one of the great things this operator allows us to do now is parse user input very nicely now, and we no longer have to break from while loops to do this! Here is an example based on the Rock Paper Scissors script from AtBS2! ``` While user_choice := input("(r)ock, (p)aper, or (s)cissors? ") not in "rpsq": ... ``` Happy New Years everyone! Edit: sorry for the poor formatting! I'm on mobile right now.
C: Al you are the content creator that really drive people to start programming! Keep up the good work!
C: Hi Al, I’m super stoked that the professor for our Python class has chosen to teach us with your book at our university this semester. I will be sure to message him about the update on the second edition in case he does not know. I love going through your book and your videos. You explain everything perfectly. Thank you so much for creating such a wonderful resource for learning Python. You are an amazing human being. Happy new year!!!
C: Really, either. I'd say continue with the 1st edition since you're working through the udemy course, which covers the 1st edition right now (I'll update it later in 2020). You can then just browse the new sections listed in that blog post to find the new content.
C: The best new year gift one could have.
C: You're awesome Al, thanks for the 2nd edition. You know you're like a celebrity on this sub, don't you?
C: Heh, it's weird but cool. I get the best of both worlds: I go to pycons and meetups and people ask me to sign books and take selfies, but then I leave and no one cares about me and I'm nice and anonymous again. It's an ego boost for sure, but I try to keep grounded. There's a quote about humility that goes something like, "being humble isn't being self-deprecating, but acknowledging that the things that make you special don't entitle you to special treatment."
C: "Being humble is not thinking less of yourself. Being humble is thinking of yourself less." Another quote about humility I wanted to share :)
P: Beginner's Python Cheat Sheets (updated)
C: Thank you so much for this! It's extremely helpful. I'd love one with pandas added ;)
C: Thank You So Much :)
C: Thank you!
C: Thank you so much man! You are a true legend! Thank you so much for making this free and yet still putting so much work into it!
C: I found a typo. "mall sprograms" Page two, bottom middle collumn.
C: Thanks!
C: You're quite welcome, and I'm glad to hear they're useful. I won't be adding another sheet too soon, but one of the reasons for updating to a proper graphic design format is so I can continue adding new sheets over time, and update them on a more regular basis. Fun story: I like Indesign because it has scripting capabilities. I wanted to create one long document with all the cheat sheets, and then write a script that dumps out the whole document in color, then dumps each individual sheet, then does the same thing again with the b&w styles applied. That way I can update once, and easily regenerate all of the sheets in both styles. But like many desktop apps with proprietary scripting capabilities, the language is...not entirely fun to work with. Indesign uses a language called ExtendScript, which is based on JavaScript from the mid 2000s. It hasn't been updated in a very long time. I found myself wanting to write code like `if current_style in styles_to_change`, but found that the language doesn't really have that kind of test. So I came up with a convoluted approach that examines the string name of the current style against the string names of the styles I want to change, and then followed a strict naming convention for the styles I was developing in Indesign. It was like doing an overly ambitious pattern-matching exercise using only strings and arrays. I was very happy to return to Python when this work was finished. :)
C: I have two whole cheat sheets just for pandas, respond to this comment so I can send them to you when I go on my computer EDIT: [This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf) [This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
C: Responding!!
C: [This one straight from the pandas github](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf) [This one links to my personal drive because I couldn't find a quick link to get it from](https://drive.google.com/file/d/1IvauF_zIrgT_WMlbwmAU3J4dOIscoTnv/view?usp=sharing)
P: I programmed someone out of a job and now I feel bad
C: everything aside, I think it's time for you to ask for a raise given you cut significant cost for your firm.
C: I was talking to a coworker one day and they were copying things from one excel file to another and scrolling and pasting it in the correct position. I asked "how long does this usually take?" She responded "about 8 hours a week". I was astonished and it was a simple task. I set up a quick VLOOKUP script in excel which auto did the task (albeit more accurately since it was hundreds of items). Took less than a second to do what took her 8 hours. She told me she was finally able to the rest of her work done on time. This wasn't anything complex and a simple fix. I cannot imagine how many other things could be fixed or sped up by basic tasks like that. I dont get how people dont try to search for a better option. She didn't lose her job luckily, but its concerning.
C: .
C: The t-shirt "I can replace you with a shell script" is meant as a joke.. a joke... :-)
C: I programmed myself out of a job and then after they fired me the script broke and the company lost their whole contract.
C: You didn't automate her *out of* a job, you automated her main task. That the management have no better use for a trustworthy, known quantity employee with experience of the company and customers, other than firing her is their failing, not yours. She could have been moved to another team, retrained on another system faster than a new hire who doesn't know your company, doing something higher level with the imaging docs, or working with documents less amenable to automation like work on sales enquiries, minutes of meetings, audit or compliance reports or whatever seems appropriate. Unless she doesn't want to do anything else, the idea that people can only do exactly one task they were hired for and if that task is gone, they have to go too, is really short-sighted. She'll have to adapt to another job. There's probably *some* way a human can add value to your company other than that data entry.
C: I've been doing this here and there, revising systems and automating otherwise highly manual tasks. This is the first time it had actual budget impacts.... It's time for a negotiation. I'm probably leaving soon anyway. I've had some "irons in the fire" with other projects and one of them is taking off. My partner in that project has been asking me to quit and focus full time for a while. I'm hoping to do that soon.
C: Empathetic, honest response. The role of software should be to automate the tedious, rote processes that humans can do but usually don't like doing. Humans are great at a lot of things that machines simply aren't. If you have a strong employee who all of a sudden has a lot more free time, this is a huge win for you as a company. Every company has a huge pile of "I wish we could work on this if only we had the time..." projects and they decided to cut head count instead of utilizing her in a new -- perhaps better -- way.
C: Reminds me of a meme I saw recently: >No immigrant has taken a job from a "real" american. You were laid off by a capitalist who took advantage of that immigrant to increase his profits, and nothing makes him happier than to hear that you're a fucking idiot who's actually mad at the immigrant and not him. OP didn't automate her Job away. As you say, OP automated her task away, her bosses trying to make more money took the job away.
C: As others have said, you're in a very strong position to negotiate and I definitely would do that. However, I'd come with a plan of how you can improve things yet further. Think about it this way - at the moment you've given them a lot of value and they've saved a lot of money. However, they've already got all that now - would it be just easier to let you go/call your bluff and hire in someone else? It might not \*logically\* but they may feel that they've already got what they needed and prefer to just keep the money. They've just been celebrating saving money...and now you're asking for it back. Come in with ideas to save more money/do things even better, with a proven track record and they're bound to give you that raise.
P: [Update/Final Product] My dad is a programmer and I want to hand-sew a simple program as a gift to him.
C: My dad, mechanical/electrical engineer and app developer, passed away two weeks ago and I have been trying to think of something to memorialize him by. This hits hard and it’s just so perfect. Thank you so much for posting.
C: Wow that's awesome. Love that you included the syntax highlighting. FYI you'll get geek points if you refer to the front and back side as "frontend" and "backend". Edit: (tagging /u/hydroscopick): Building on /u/kronik85's idea: You could add a small plastic fly to the back side, and if he asks about it tell him "it's a bug in the backend". He'll love that.
C: I hope I one day have a child who loves me as much as you love your father.
C: Everyone loves your dad!
C: I'm so sorry to hear. Sending major hugs to you and your family.
C: This joke makes the gift 10x better
C: And backend is spaghetti code.
C: Hey dad it’s me, your son. I love you so much.
C: I'll pass it on :)
C: This...this raises a large number of questions.
P: Holy heck I'm addicted.
C: I wish all workplaces were as appreciative of one's work as yours definitely is. Great work!
C: If you're running into memory problems you might be able to fix it by using lazily-evaluated generators rather than lists. Basically they're like lists except they compute the values one at a time rather than storing every value at once in memory. They're kind of like an in-progress loop that you can pass around as a variable. https://www.youtube.com/watch?v=EnSu9hHGq5o (Python 2 but still relevant) https://www.youtube.com/watch?v=ixiRkUwPI2A
C: Great, thanks for sharing, good news stories these days are appreciated.
C: I don’t know you but I am bloody proud of you.
C: You showed your value to your employer and you are being rewarded for it. Good job!
C: It's awesome. He's a great guy, but this kinda went above and beyond. Most of management is older folks. So they aren't always super fans of depending on technology. But we've spent about 40 hours between three people going through these, and we were about 25% done. So we probably save 120 hours? Programming is so fascinating how you spend x amount of hours to automate something and once it works it just takes a few seconds or minutes (for this simple stuff) to actually do the task.
C: I’m in Desktop and wrote a PowerShell tool to replace our main Data Transfer / Setup tool. When I presented it to a director I was reamed for doing work “Out of Scope of my Job” despite creating a tool that will save hundreds of hours of labor over the next few years. I’m now afraid to innovate openly I write my code for myself and use it for myself. I want to make things better for everyone, my leadership doesn’t through.
C: Me too. I once worked for a company where my role included finding potentially interesting medicines to import to China. My colleagues had a list of ~120 biotech/pharma companies and split it between the 4 of us to find interesting products by looking at their websites one at a time. I instead used a list of >10,000 medicines in development or already on the market, developed a list of my CEOs preferences (scores of 0-10), and then filtered the thousands of individual products through these preferences. Before they finished going through their lists, I had a comprehensive rank-order list that could be immediately updated to match a change in preferences, and could also be updated every quarter when our vendor updated the drug list. Some of the top contenders were products we had already licensed, which validated both my process and the history of the organization. Feeling like I had conquered the world and was about to get recognition, I showed my team of peers, including my boss who was roughly my age. They were not at all excited; in fact they questioned the use of my time and asked me to catch up to them using their format. Later I created another tool that allowed us to type in the name of any drug sold in China and it would print out a report including graphs, etc. showing recent sales trends, competing companies, and even competing drugs in the same space. It was idiot-proof since all you had to do was type in the name and hit enter. Again, they questioned the use of my time rather than adopting my tool that would have hastened their work. So disappointing.
C: This is the key for me. It takes longer for me to set up the initial scripting but it's s great time investment because of how quick it is to reproduce each time. When you send out 20 weekly/monthly reports and doing them manually takes 30 mins compared to 5 mins with a script doing the donkey work I literally get 2 days a week back. Well done on your effort and it seems to have paid off!!
C: You've saved 120 hours across three people who are being paid, combined, a lot of money. Your automation effort just saved the company a ton of money, improved workflow and *reduced employee stress massively.* Yeah, damn right your boss is beaming. He just found a diamond in the rough, and an opportunity to streamline a lot of capabilities in his company and he realized that he just needs to offer you some incentive to remain *and* remove overhead that could impede your ability to deliver, while directing more of this kind of improvement workload your way. Your boss is genuinely amazing. You are basically getting a *carté blanché* my friend, to grow to new heights. Excellent work!
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code FEB2021FREE
C: the man himself
C: [removed]
C: This is one of the good ones. If you haven't checked this course out and Python is on your list, take the course. Heck, if Python hasn't crossed your mind, but you're looking for something different, easy, and powerful, take this course. The author is a top-notch source of information and it is delivered using practical project sets rather than random projects that may or may not be relevant. He also has a few books on games programming in Python (and one on cryptography) as well on his website offered for free.
C: Thanks.
C: Words can't describe how beautiful this book is. This was my gateway to world of programming❣❣. Thanyou AL
C: Al, the real MVP
C: I'm really thankful to op for sharing his course for free in January, it's been really helpful to me as a student. And I hope op continues to make courses like this.
C: Same! I learned how to program in Python 5 years ago using Al's book. 2 years ago I switched industries and have been working as a data scientist since. This book literally helped change my life.
C: :D
C: This man here using python 5....
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code JAN2021FREE
C: You're honestly a boss. A really appreciate everything you do for this community.
C: You offer them for free? Wow
C: This posts show up so much in this sub. I believe they are automated. I guess the course works.
C: You're the real MVP Al. I got it last year, but I just get a smile glued to my face whenever I see this post.
C: Thanks Al!
C: I upvote this Everytime I see it. Your book changed my life.
C: I think it's wholesome of you for ***consistently*** offering your book for free. Your passion for programming and the drive to inspire others are truly appreciated, I assure you.
C: >This promo code works until the 4th (I can't extend it past that). Al you forgot to change the dates again...
C: Nah, I just copy paste them. If they were automated, I wouldn't have forgotten to post them until today. :)
C: Ironically they aren't. Al had previously said that he [copy pastes the message each month.](https://www.reddit.com/r/learnprogramming/comments/jmaj4c/z/gauls7h)
P: I'm super annoyed and taking it out on learnpython
C: The world needs more people like you man. Thats kinda just how people on the internet are and in my experience especially on reddit a lot. I go out of my way to try and help people and constantly get downvoted and shit talked by dumb a holes. Dont let it get to you, i may take you up on that help tommorow too.
C: How do I learn the Object orientated approach in Python? I always find writing classes really confusing. How do you decide which class to write and what to write?
C: If you were interviewing someone that only knew Python (bits of some other languages), works in a shop, is 39 years old and working to change careers, what traits would you value enough to accept that beginner to your team as a good long term investment.
C: I love that you're doing this. My question, I'm currently pursuing a bachelors in CS. We start out with python and move on. I actually start a class Monday going over recursion, nested lists, etc. The question is... side projects. I know that gets asked a million times on this sub and others. But, what are some specifics that you as a senior dev would look for? Actual areas that in a project, you want to see utilized. What kind of projects matter? Should I keep making calculators, or should I try to do some AI tutorial project off Udemy. Essentially, what specific areas (and since you're going to be answering questions for 12 hours I'm gonna be a punk and ask this) would you expect to see someone be proficient in as a beginner, intermediate, and expert in python (or programming in general)? What are some "Wow, this dude knows his shit" projects that you've seen? I hope this makes sense, but as a slightly more than beginner, beginner, I get so frustrated when people say "make something you'd use". Ok, well, there's a million possibilities. It's part of the problem of having so many options you dont have any options scenario. Thank you for your time and doing this. I look forward to reading through all the comments tomorrow.
C: Just don't read hackernews and never go to stackoverflow :) But yeah, op is the best and we should all follow in this example. Cure our online shitholes somehow
C: I'm going to answer this in full tomorrow. It's a legit hard question. Everyone on the internet wants to pretend it's easy. But it's not. I'll do my best in the morning.
C: This is a question close to my heart. I'm 39. I didn't start even thinking about technology in any way until I was in my late 20s. &#x200B; The only important thing for a junior hire--in my opinion--is whether or not you can think your way around the problems my team needs to solve. I \*almost\* don't care if you can write any code at all. It's all about how you approach problems. I also know this is pretty much useless as advice. But it's the truth. That's all I care about. &#x200B; If you have some code skills and can write some control flow, that's fine. I don't care. Anyone can learn to do that in a few days. Don't waste your time on coding exercises. I don't care. Do logic exercises. Learn to think more effectively about problems in general. Learn to map problems to existing solutions. Learn to generalize. If you're 39 and have been working most of your adult life, figure out a way to map your existing experience to a coding job! &#x200B; The most important thing about almost any job you can get that involves python is not python! It's whether or not you can sell yourself to the interviewer as someone who can solve problems. &#x200B; I will and have hired juniors with no experience whatsoever because they can think their way around the kinds of problems. I am not the only one who does this. I was hired into my first job this way. As a total clown who knew nothing. &#x200B; The only thing that matters is whether you can solve problems. So maximize that trait.
C: When I'm hiring, I'm not looking for a "blow-me-away" or "dude-knows-his-shit" example. I don't hire for a specific language or a specific set of skills. I'm looking for a person who can think, in a specific way, about the kinds of problems my team needs to solve. My code exercises are fizzbuzz-ish type things, and they are never live. You take them home and turn them in when you're ready. Real problem solving doesn't happen at a whiteboard or in real time. Do you know basic control flow in *any* language? That's great. You've passed the test. After that in the live interview I give general logic tests, not code tests. Can you reason your way around a convoluted business problem? I use real examples from my current and past product teams. We need product X to do Y or Z depending on some combination of AFDP and Q. AF and Q are in direct conflict with each other. Are you picking up on that? Are you able to communicate it well? Congrats. You got an offer. In other cases like when I'm hiring QA people, I'll do a pure logic challenge. In my experience, QA people have to be the absolute best at pure logic or else they are shit, and I can't stand having QA people falsely attribute causal effects. So I use this test for the real-time interview: here's the incidence of a disease. Here's the sample size. Here's the test and its accuracy for both false and true positives. If I hand you a test that's positive, what is the likelihood of you actually having the disease. I know it sounds like a stats problem, but it's approachable through pure reason without any math besides basic arithmetic. I need my QA people to be able to think like that. I don't look at social profiles, github, or anything else. I look at the person who is applying and try to figure out if that person can help me solve real problems on my team. The game changes a little when you're talking about hiring senior people or architects, but it changes less than you think it might. It's never about how well you know X language. It's always about how you approach solving problems. Senior positions are *always* about architecture. My current role uses only C# and sql server. I don't know jack dick about C#. I mean, I read a book when I started the job and learned how to make it do what I want. The bottom line is that the vast majority of jobs out there in the real world are not silicon valley-based jobs where the tech is the product. Most jobs are at companies where the tech is *not* the product, and your language skills don't matter. What matters is if you can work the problems the product team needs to solve. None of what I'm saying is going to help you get hired at a FAANG company. They are totally different. I've never worked at one before, but I am interviewing for one of those, so I guess we'll see how that goes.
C: I’m looking forward to this one!
C: I'm going to 2nd this because I think this is a really accurate reply in general. I am NOT a Python Dev, but I am an IT hiring manager. For an entry position, I want raw material - aptitude. It doesn't matter if you have worked with our systems, I need to know you can think your way out of a conceptual cardboard box, I need to know you know where your limits are (but aren't bound by them) and that you are honest. Im going to invest in you. I want to know that will pay dividends to you, which will ultimately pay me too. Show me that you're already working on being the person I want to hire, and I'll bridge the gap. I can teach DNS and LDAP and IP. What I can't teach at even the most junior position is basic problem solving skills and the ability to integrate the answer to a problem in a person's future work. One more thing I will give you - nobody asks enough questions in interviews. Everyone wants to be the guy (or gal) with the answers. Be the person with the questions.
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code OCT2020REALFREE
C: Thank you u/AISweigart. Appreciated. The books and course both are edutaining engaging resources to learn python. Thank you.
C: Instead of giving the post worthless awards, consider donating to the author.
C: Hey Al! I'm currently reading your book and I missed out on this offer last month cause I found out about it a bit too late. By the way your book is absolutely fantastic! I've learned lots of things from it!
C: Just finished this course and as someone who started with zero knowledge I would highly recommend this as a welcome to the basics of python. Great book.
C: Thanks for the generous offer, Al! I'm sure lots of people will benefit from this. :)
C: Hey Al, &#x200B; This book has helped me a ton in my career and I just wanted to say how much I appreciate the work you put into it. I have your next book "Beyond the Basic Stuff with Python" on pre order. Thanks for helping make learning python accessible to many of us. All the best
C: Do this people. Thanks, Al, hope you're surviving.
C: Exactly. Awards are for paying reddit money for emoji. Guys pls donate to content creators, artists, non-profits instead! Edit:also open source projects. I paid for Ubuntu
C: Thanks! Yeah, I sometimes get worried that I'm spamming subs with this each month, but at the same time it always results in 20,000+ sign ups, so I figure I should keep doing it. Thanks!
C: Please keep doing it, I missed out a few months ago and bought your book, hard to focus during these times but now this has gotten me excited again!
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code JUL2020FREE
C: For anybody that's thinking about whether this course is worth it- it absolutely is. I'm a broke high school student who can barely spare money for a course so 2 months ago, I eagerly waited for this course to be free and copped it. Best decision! It definitely helped me kickstart learning python, it's well structured and easy to understand. Al is extremely generous in giving this away and I hope everyone has a good time! Thank you Al, you really did change my life (as dramatic as that sounds.)
C: u/AlSweigart, why are you always trying so hard to give away your valuable product for free?
C: :D
C: When I was a teenager in the late 90s, I'd often bike over to Barnes and Nobles after school, pull those giant $50 or $60 or $100 tech books off the shelf, spend about 3 or 4 hours reading and making notes, put it back on the shelf, and then go home. This was before cell phones, and it got to the point where if my friends called the house and I wasn't there, they'd call Barnes and Nobles and the employee would go on the PA saying, "Would customer Al Sweigart come to the front desk? You have a phone call." Which is pretty cringe now that I think about it. Oh yeah, I'd also grab the entire stack of "Free 100 hours of AOL" floppy disks they left out for folks from time to time, before they switched to CDs. The neighborhood and school library had "computer" books but not necessarily "programming" books. I didn't have an allowance so the way I "made money" was asking mom for a few bucks for lunch and then pocketing most of it. A pack of six white powdered donuts was the most filling thing you could get for 50 cents. (I'm not sure how I'm alive and healthy.) It took me three months to save up $60 for a black trench coat from the army surplus store this way. It complimented my goth/punk/weirdo look, but became rather unpopular with school admins after Columbine. Anyway, the usual $16 for the online course may not seem like a lot but for many people, it is. I get thank you emails from teenagers and college students and just regular adults who thank me, and I really cherish those emails. The internet makes sending out information so absurdly cheap. It took me a few months to make that course but once that's done, sending it out to literally hundreds of thousands of folks costs basically nothing. Now we as a society could use this amazing level of productivity to invest in our citizens and a social safety net so that we could become even wealthier and more productive, but instead we just give billions of dollars to assholes who switched from "innovating" to "consolidating my monopoly" the second they bought their Palo Alto mansion. I don't know what it is about my brain or upbringing or what, but I have a comfortable lifestyle and don't really feel the need to try to *maximize* wealth. No offense to people who like sports cars and staying at fancy hotels when they travel, but all that stuff strikes me as fucking stupid. As John Mulaney put it, "Trump putting his name on buildings, like that's gonna keep him from dying." Anyway, that's why.
C: You’re the best Al! On part 13!
C: Now if anyone has ideas for how I can get more people to *complete* the course, I'm all ears. Only about 8% of people finish most of the videos, which is about average for online courses. I've heard from Phil Guo's research that having videos be as short as 7 minutes is key to keeping their interest. Or maybe some sort of buddy-system or something. https://freeCodeCamp.org probably has a lot of these nifty tricks that I should look into.
C: This guy omg ❤️
C: I'm one of those 92% but the reason is that I already knew the content. I wonder how many people skip only to the content they need.
C: I am in the 92% and I don’t know if it was me or not. But as a new person to coding and python, I found it easy at first and then it just took off and I couldn’t follow. I than jumped to Corey’s stuff on YT and seemed to have the same issue. I get the strings, variables, dict. etc, but when it comes to going deeper I seem to hit a wall. I honestly don’t know what to do about it. I only spend an hour or so a day due to work, so it’s more of a hobby and maybe that is the problem.
C: It's a skill to sift through tons information to find out exactly what you need, or how to modify it to your exact requirements. Basically learning programming is programming.
P: I made a Python script that tracks Elon Musk's tweets and if he tweets about Doge coin it buys $20 of $DOGE on Robinhood
C: Elon: fuck Doge, I would never promote that shit again Bot: I have good news!! Nice bot tho
C: Maybe follow this porn star as well: https://finance.yahoo.com/news/dogecoin-sees-125-increase-trading-195309825.html https://www.coindesk.com/doges-gone-wild-meme-coin-soars-after-adult-star-says-shes-a-hodler I bet you never knew that porn stars are financial wizards.
C: Elon: EVERYONE SELL DOGE NOW! <Doge plummets> Bot: I’ve purchased more for you, sir!
C: r/wallstreetbets wants to know your location
C: Hello my name is Elon Musk and I'm excited to share my 34-tweet series about the chief magistrate and leader of the Republic of Venice between 726 and 1797.
C: No such thing as bad press
C: Yea I guess I didn’t account for negative news 😳
C: Child sex trafficking ring discovered via Doge coin transactions
C: NLP sub module?
C: So you're saying that the billionaires have started investing in doge coin?
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code MAR2021FREE
C: I highly recommend this course for any Python beginners! I've been learning Python for about 1month now, and this course is by far the best resource I'm come across so far! I've already gotten to the point where I am able to write Python scripts for automating a few things in my job. It teaches at a reasonable pace - nothing is dragged out. You learn important concepts that often catch beginners out (speaking from experience!). The content is presented in a fun and upbeat manner, and each lesson has a re-cap of everything covered at the end of the videos. I'm still very much a beginner, but this course has been superb for learning the basics and foundational Python skills you'll be using all throughout your coding journey! If you want to nail the basics of Python, and you want to hear the word 'spam' over and over again, then this course is perfect for you! 😁 Edit: typo
C: [u/AlSweigart](https://www.reddit.com/user/AlSweigart/) thanks for keep posting your course! I highly recommend this course, it help me learn a lot about Python and programming languages! You're the best! Best wishes from Portugal
C: The MVP of Python learning delivers again!
C: Sorry for not posting this at the start of the month. I lost track of the days until someone messaged me asking if I was going to post the free codes this month.
C: Thank you very much My Good Sir. I’ll start asap
C: I'm at lesson 18 and I can't recomend it enough! I had previously done half of other course and lost some interest...this one is very engaging!
C: Thank you so much for posting this. I'm having a bad at math day, so it's comforting seeing "**You don't need to be "good at math" to be good at coding."** fingers crossed this helps me.
C: Seriously, that one sentence brought me a huge amount of peace. The self-doubt can be so heavy for those of us who have a bad relationship with math :(
C: Chances are you were/are not bad at math. You may have difficulties with school math, how it's taught and tested, but real math is a lot like coding. You have a problem to solve, a set of tools to work with and some rules to follow in writing your solution. I'm sorry math was difficult for you, but do look it up once more if you're up for it. At your own rhythm and for the fun of it.
P: I finally did it!
C: Congrats. Your coworkers might not care, but management would most likely be happy to hear you've created savings.
C: I think the problem is that for so many people, everything that happens in the computer box is just magic. All of it is magic. You happened to know a spell they don't know. Thanks wizard man. They don't realise that a lot of learning and knowledge and work go into doing these sorts of tasks. But you know what you did, you python wizard you.
C: One day you don't know how to do it. You fight to learn how to do it. Then that one day, you're realizing your picking up a new skill and understanding it.
C: Nice. Don’t worry about other’s appreciation for it. Just know that you’re working for yourself and leveling up on that python skill
C: I’m definitely hoping so. I’m up for a raise this month and would love to amplify my value
C: For me, the hardest thing has always been coming up with projects. Okay, I have a data frame, sow what?? This is the first time where the project just came so naturally.
C: You also save them 2h per time * number of times per week* 52 * estimated hourly wage. Give them that number to justify asking for more.
C: When people come up to you or you hear a conversation of a possible project. Just say yes I can do it or yes I can do that project for you. As long it's in your skill level and you're interesting in seeing if you can complete the project. I always say I'm just one Google away of becoming a genius. What I don't know today, I'll know by tomorrow.
C: This. Times number of involved employees... so 2h * employees involved * number of times per week * 52 * hourly wage So for example 3 employees, weekly at 25$/hour 2h * 3 * 1 * 52 * 25 = 7800$ per year
C: Also show that you have potential to do similar things in the future, and that you can look at problems creativity and even identify processes that they didn't even realise are an issue. That is where the real value is. I did a similar thing a few years back and I know how it feels when it seems like no one cares. They will start to care when your team can afford to cut members as you are more efficient as a whole.
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code NOV2020FREE
C: Highly recommended! You are a great guy Al!
C: If you are thinking “I want to start coding, I don’t where to start” this is all you need!
C: [deleted]
C: Great course, keeps me motivated!
C: It's so kind of you to do this, thank you very much.
C: thank you so much! I found your post from last month, but it was too late, now I'm on time!
C: Mr. Al, I’d like to one day shake your hand! I started your ATBS about three weeks ago (no power at my house due to a massive ice storm in OK this last week.) and I’ve learned so much from what I’ve completed so far! I like your style and teaching method. Thank you for what you do! I’ve not looked but do you have an advanced Python course? I’d snap that up in a heartbeat! PS: I hope you get as many cats as you want! Say hi to them from me!
C: Ahh shit and I just bought it from Amazon 3 days ago
C: Thank you for giving out for free :) great course!
C: The book does cover a few more concepts than this course does, and also the book is now in the second edition. This course will be updated probably around mid 2021.
P: Learning Python? Keep at it! It could change your life
C: A similar thing happened to me too. Seven month ago I took this front office job in which we had to wait for the first 2 months for the project to come in the country. Instead of spending those 2 months slacking off, because we literally had nothing to do, I started watching python tutorials. Fast forward 2 months, the project came. I quickly noticed the fact that in order to handle most of the tasks we had to cross check with a lot of excels with a lot of sheets. I used tkinter and openpyxl to create just one graphical interface for all the files. I have also used pyautogui to make some tasks handle themselves. Fast forward one month, I am in the books for a promotion for Service Matter Expert on automation amd I've been given automation related tasks. This happened only because I decided solve problems in a different way than the rest, even when no one asked me to. And just as a note, I graduated with a degree in Advertising, no connection to the IT field, no previous experience. My current job is filled with 70% to 80% people that either graduated or are in the course of studying computer science. The rest of 30 to 20% of people is composed by people that actually speak the language that we work in, since it is not our native language or English. I had neither of those, only motivation to work and learn. Don't let yourself get scared by your lack of background or the level of the people that you are amongst. Enough hard work, curiosity and willingness to learn will get you far.
C: Just be careful not to make management too comfortable with these lightening quick turn arounds from you. They'll get used to it and in the long run it may prove detrimental to you. Double edged sword. Edit: spelling
C: A small tip for you on your new coding journey. Now that you’ve proven your capability, and you have, no need to keep undershooting deadlines at that level. If something is estimated to be 3 weeks deadline, if you know you can do it in 1 day, don’t turn it in that fast. The bottom line is that if you turn in work 20x faster than expected, they won’t suddenly pay you 20x more. They’ll identify you as a person with a character flaw who will overly sacrifice themself to win the approval of everyone else and they’ll pivot to begin abusing that as much as possible. Knowing this as fact, you gain a lot by really thinking a project through, making it as ideal as possible, taking company time to hone and learn all methods necessary for the project, no rush, be happy to know you’re well within deadline and keep that information to yourself.
C: Now you’ll have to blow their freakin minds by putting this all in a database and building a web enabled dashboard... or don’t because you’ll automate yourself outta a job.
C: Python is magic. Well done.
C: I learned python in a van, down by the river.
C: Congratulations. I find programming a useful skill even when not programming. There's a skill to seeing where the natural breaks are in a project which enable you to slice it into manageable modules. For your new role, if your company has moved into using Office365, look at PowerApps, PowerAutomate and SharePoint (maybe Power BI too). These provide pre-built modules you can stick together to automate things. It is advertised as low code/no code, but that isn't really true because you always end up having to write something to solve your problem. The syntax is a bit ugly, it's like if Excel and Python had a shameful one night stand, but at the end of the day, you can create attractive looking apps very quickly and give access to anyone else in your company. You'll certainly lean on the logic you've built up from learning Python. All in all, it's an easy string to add to your bow and can sometimes be simpler to implement than Python. Perhaps it's different in your organisation, but generally the SME stands for "Subject Matter Expert". That might help you avoid a boneappletea moment. Anyway, best wishes for your promotion and new role, it should be a blast. edit: I should probably say that I'd see the Microsoft automation stuff as automating processes, rather than tasks. By that I mean it's good for getting someone to do something, passing it on to the next person to do something or approve it and so on, while triggering off emails and other events as necessary. Perhaps "Orchestration" might be a better term than Automation. Python scripting may well be essential to actually assist with the processing of some of those tasks.
C: Yeah, I'd prob have just sat on the solution for 1 - 2 weeks before submitting it.
C: The human condition is eager to please and eager to exploit.
C: There's always a dilemma involved in this isn't there? You cut down the work load which means theoretically you will have less work to do and less money.
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code DEC2020FREE
C: Lol, figures, I just bought the udemy course yesterday. Although, given everything that you give to the community, I am happy to pay for the course. Keep up the great work!
C: OP, I actually owe you a beer for the Udemy course that got me a job and took me out of depression. I have seen you post the code for free course multiple time. Is it possible to learn this level of kindness from you?
C: Hi Al, thanks again for all you've done for making Python accessible to everyone. It seems that when you click either of the first two links, Udemy is adding the CYBERWEEK discount code and forcing it to show 9.99, once I entered DEC2020FREE it switched to free. Just trying to update yourself and others in this thread. Also just put your Cracking Codes with Python on order saw it was in the humblebundle but I'll pick it up full freight. Thanks again.
C: Awesome. Just signed up. Thank you much! For the people who’ve used this resource, what sort of work have you used these tools/lessons on?
C: >https://inventwithpython.com/automateudemy You can ask for money back and then buy for free
C: At the same time though, if you paid money for it, you're more likely to actually complete the course. :)
C: Good to see this course at least puts you on the right path to a career. I’m going to start this course soon.
C: Web-scrapping and excel integration is incredibly useful for research
C: Thanks, but, nah, I'm good with the money going to Al.
C: Web scraping helped me snag a $299 Nintendo Switch from periodic releases on Amazon last night instead of having to pay $440-500 after Wal-Mart and Newegg who sold out in seconds. All from stuff I learned in this course I paid like $11 for last year.
P: HOW HAVE I BEEN SO BLIND!!!!
C: print(isinstance(object, type)) # True print(isinstance(type, object)) # True print(isinstance(object, object)) # True print(isinstance(type, type)) # True now you are ready for metaclasses
C: Always has been 🌎🧑‍🚀🔫🧑‍🚀
C: Welcome to Python. https://img.ifunny.co/images/6eef1accf975ba0d7b894911f634aa8cc9afeb2249c82607df6290eaaaf0bfd4_1.jpg
C: For me it's different: I get that object oriented programming, like python. I don't get how not oop programming languages work 😄
C: im new so i dont know what this means
C: I’ve done quite a bit with Python, but what is a meta-class?
C: The OP, has come to the realization that everything in python is an object. If you have not come to the realization yourself, you don't get it. but one day you will get it too.
C: > im new so i dont know what this means Programming has a concept, starting many decades ago with a language called "Smalltalk" of objects. Objects have a state, which is the current settings for its attributes, and usually methods that let you change its state or perform actions using its attributes. If you play RPGs, your character is an object, and their strength might be set to 13 or something. Your character is an instance of a class called "RPG characters", and there's a method (function) that you an run on this object called level up, and maybe you can increase their strength when you level up. You microwave is an object, and its default state is off, and it's got buttons you can press that tell it how long to microwave for, and it's got built-in behavior to count down to 0 from whatever you put in. You could declare a "class Macrowave", and give it a default setting of "running = False" and then make another method that says "def run(how_many_seconds), which sets "running = True" and then sleeps for 1 second until how_many_seconds is set to 0 again, and then sets "running = False" again. Even as a beginner you should be able to find out how to do something like this if you haven't already. The op is talking about the fact that in Python, everything you interact with is actually an instance of a class. This includes really super basic types in python, like numbers. You are really limited in what you can do with them, but if I say "a = 1" this is actually an instance of the int class, with an attribute for its value, which is 1, and there are actually methods inside that object, like __str__() which tells other things how you represent the integer as a string. This is actually why you can just say "print(a)". You could compare this with another programming language like C, where you have to tell the print function what kind of object a is, because in C, a itself doesn't know how to represent itself as a string. The actual implications of this are that you can redefine certain things in Python somewhat easily. I had a program where I needed really particular behavior from a number when exiting my program, so I create a class that inherited (used as a base to build upon) from the int class. It also means you can do something more powerful, which is composition: You can make a class that holds lots of other objects, all of which do custom stuff.
C: https://realpython.com/python-metaclasses/ In short: A class is an object that, when called, produces an instance. A metaclass is an object that, when called, produces a class. `type(type(anything))` will always be a metaclass. The "default" metaclass is `type`, and you can see this with the rare `type` constructor. Suppose you have a class like this: class Square: def __init__(self, w): self.w = w @property def area(self): return self.w ** 2 s = Square(5) print(s.area) Under-the-hood, what's happening with that `class Square:` syntax is something more like this, using the `type` constructor. (except that I've changed the methods to lambdas so I can define them in-line) Square = type('Square', (), { '__init__': lambda self, w: setattr(self, 'w', w), 'area': property(lambda self: self.w ** 2) }) s = Square(5) print(s.area) A metaclass allows you to use something other than `type` here. `class Foo(metaclass=Meta):` uses something like `Foo = Meta('Foo', ...)` under the hood.
C: I was just dreaming about this last night and was like, “surely people have done this before.” Then I wake up and I’m like, “oh yea people do this all the time.” Still freaks me out.
P: Would anyone be interested in watching me create a Django app from scratch on a live stream?
C: OK since I can see that I would at least have a couple of people watching, I went ahead and scheduled a stream on Youtube. Here's the link for it - [https://www.youtube.com/watch?v=gMNTaEcXP5U](https://www.youtube.com/watch?v=gMNTaEcXP5U&t=33s) It's in about 14 hours from now. But yeah I can reschedule if you guys want. Youtube should record it anyways for later viewing &#x200B; EDIT - updated the link
C: Sure, just dont get discouraged if no once tunes in
C: A suggestion for the future: Take someone else's code and do a code review and show how it could be better. There are a million How To videos that show how to make a basic site. There are far fewer to show you how to improve your code or how to find and fix bugs. Thanks!
C: Thanks, everyone who joined the stream! you guys were really nice and encouraging, which is a rarity when it comes to people on the internet. I hope to see you guys in future streams as well. P.S. - here's the link to the video - [https://www.youtube.com/watch?v=gMNTaEcXP5U](https://www.youtube.com/watch?v=gMNTaEcXP5U&t=33s) I think the stream starts at about the 5 min mark
C: Sure, sounds interesting.
C: How long do you think you will be streaming? I'll already be sleeping by the time the stream starts so I'd love to know whether i can wake up early to catch up to your stream.
C: Btw I watched a youtuber cover django web app in 1 hour and 25 minutes over 3 parts. Heh it's literally the top result on youtube if you search "django python" There's other parts that I'm not adding up, and I gotta say django takes a long time on its own, so a live stream without edits is probably going to take up way more time
C: This is a great suggestion! I'll see if I can do something like that.
C: I think it wouldn't be more than 2 hours. It's my first attempt at it so I don't want to go on any longer. If things go well though i'll take in ur suggestions and come up with a better timing for future streams.
C: Super interested! Can you upload the recordings so I can catch up? It will be the middle of the night for me.
P: I automated my girlfriend's meal selection after 2 days of Automate the Boring Stuff with Python.
C: You could do an infinite loop and randomize the answer. But, man, this is genius! Almost AI-like in accuracy.
C: Are you seeing my girlfriend?
C: i would suggest you to use f strings, like f`'{food}, we had that last week, anything else you would like?'`
C: Lol this is great and scarily accurate
C: I love this. My wife is pregnant and this would work very well for her. She would even find it funny depending on the level of hunger. I made a little addition :) print('How hungry are you on a scale of 0-5?') hunger = int(input()) print('What would you like for dinner tonight?') food = input() if hunger <= 4: print(food + ', we had that last week, anything else you would like?') input() print('nah, don\'t fancy that - what else can we have?') input() print('that\'s boring. What do we have in the fridge or cupboards?') input() print('we could have that tomorrow. What shall we have tonight?') input() print('veto. Ask me what I want') input() print('not bothered') else: print('Whatever you say, dear.')
C: Have you done the debugging with your girlfriend? I'm curious to know the docstrings.
C: I'm aware of loops and random, but no idea how to use them. I'm only 2 days in to learning python and coding in general so I'm sure I'll be able to improve this code over time :).
C: 😅😅😅
C: There should be a f string suggestion bot. This comes up every time anyone uses a string here.
C: Have a look at lists, random.choice and while loops and you'll get there.
P: "Automate the Boring Stuff with Python" online course is free to sign up for the next few days with code SEP2020FREE
C: Your contribution to the Python community is invaluable. Much appreciated!
C: Awesome! Can't wait to try it
C: I bought this course recently and it is outstanding. If you're on the fence about trying this I highly suggest you take Al up on his generosity.
C: Picked this up back on March 1st and have to say you are amazing! I've seen you do this (at least) like 3 or 4 times since, who knows how many times you did it before I noticed. Thank you for sharing your knowledge for free! I'll try my best to pass this good will on however I can.
C: "You purchased this course in July 2019".
C: Thank you so much!
C: That’s so amazing and generous, thank you so much! Signed up and will definitely enjoy this course. Was about to buy the book after I’m done with Crash Course. Thank you!
C: Oh my, this is a godsend. I recently started to learn python with [https://inventwithpython.com/invent4thed/](https://inventwithpython.com/invent4thed/) by the same author. Really, super excited to give this course a go once I'm through that! Thank you so much. E: Oh wow. Only just now realized OP is said author, haha. Thank you so much for all the free, high quality content you put out. Do you have a PayPal or something, so I can at least send you some cash I can spare?
C: Thanks Al! Looking forward to part 2.
C: Happy cake day!
P: Data Analysis Resources for Python
C: I'd caution that people not fall into the trap of undervaluing statistics, even though it's a scary word. Too many data scientists I know have many disconnected islands of knowledge. "Anomaly detection methods" here, "survival analysis" there, "clustering" somewhere over there, etc. with no mental framework to embed them in. This severely limits their flexibility in tackling new data analysis problems. A good understanding of statistics is the cure for that.
C: This is amazing. Thanks a lot. I'm a physician and a global health specialist currently moving into python for data analysis. This is a very useful post.
C: [deleted]
C: Great post, but I'd suggest newcomers to the data science field use plotly instead of matplotlib. Plotly does lack some features in terms of animation, but overall it's a much more pythonic library that's easier to work with and generates much more clean graphs.
C: Can I start doing this from 10th grade?
C: This is so amazing, will save the post for future reference :). Thank you OP!
C: Absolutely, data science is applied statistics not just cut and paste linear models. I highly recommend focusing on the statistics before the programming. I recommend [practical statistics for data scientists](https://www.amazon.co.uk/Practical-Statistics-Scientists-Peter-Bruce/dp/1491952962); the current edition has a bit of R in, but the stats foundations are good
C: So... you're not bored right now. :)
C: I am a pharmacist learning python for data analysis as well! It is fun, but totally feel like a completely different animal than any doctoral program. Kinda funny considering how strong we emphasize clinical trials and statistics.
C: It is never too early to start anything. I'd advise you to start immediately :)
P: Thank you guys and Python for giving me joy (NEW PYTHON PROGRAMMERS, READ THIS).
C: As someone just learning Python I also found PyCharm to make it so much easier to deal with the environment setup so I could focus on the problem I was trying to solve.
C: If you think pycharm is cool, give VSCode a try... GAME CHANGER for me. I had been using PyCharm for a couple years, it was amazing for this one year long project I was working on, but for small projects I felt it was a pain. VSCode is fast and light and has all the chops to handle the big projects and make them feel light. Glad you are enjoying Python, keep on rockin'
C: Thank you for this intuitive write up.
C: Thanks man
C: This post really motivated me. Thank OP.
C: New to programming here. Thanks for sharing. One question I started with Android studio cuz I wanted to learn to make an app, is it ok!? Should I switch!? Any tips for AS learning. Thank you all for responding and Op congratulations and am very happy for you.
C: May I ask what kind of mobile apps you were able to create? Especially ones you were able actually professionally create and sell?
C: I'm just starting with pycharm after two years of using the standard. The ability to create an environment within Pycharm is pretty nice, but it's so complicated and seems to work slower than the notepad-style standard one. I dunno, both have merits but it seems like anybody who takes Python seriously uses Pycharm so I feel like I'm probably in the wrong.
C: Mainly fitness and messaging so far. Also had one todo app. I am working on transferring from python for both front and back end to only back end, and then using a specialized tool for front end.
C: dude respect to you for learning the pad environment, after tasting clion and pycharm (JetBrains stuff) i don't think I can go back.
P: Why study programming when you can just play an RPG?
C: now do this for me but with threading pls
C: To be completely honest learning a programming language is always easiest when it can be applied to actual data/usages. &#x200B; Writing Hello, World, or creating a twitter clone using a book has never done anything for me. I play eve online, and pretty much all my knowledge has been from working on projects around issues that people have with game data.
C: I would buy a book in that style.
C: OP: *I attack the darkness*
C: You start off as an octopus, only, you may or may not have 8 legs. Those legs are able to think on their own and do individual things. Now, you really become an octopus and everything starts to make sense.
C: You're the third person to make a response like that. I wonder if there is a market for a book like that. "Intro to Programming via D&D" or something like that. Don't focus on the coding itself, but rather focus on the concepts maybe.
C: Now do this but with Asyncio pls
C: I'll buy one too! Take my money!
C: You install Windows 95. Everything seems to run independently, but when one app hangs everything is doomed. There’s no hope.
C: Might just be a market for that sort of book. Just a basic introduction to the concepts and why the concepts work. Not a "Intro to Python" or "Intro to Java" but an "Intro to Programming". Using Roll Play game mechanics as the object examples. Have an online section maybe with downloads of code specific versions of the explanations. Like in the book itself, the section that talks about Control statements would be something like: "Dave is going to try and Bluff his way out of detention. So he takes his Charisma Stat, which is an 8, and adds the bonus from his 'Silver Tongue' skill which gives him a +2 to his Charisma stat when he's talking to someone else. In this case he's trying to bluff his way past Principle Jones. Since Jones is only concerned with whether or not Dave completed his assignment, he will use his Intelligence stat (Which is an 8) to determine if he can tell that Dave is lying. There are 4 possible outcomes from this roll: 1- Dave rolls less then Jones' score, in which case Jones sends Dave to detention2- Dave and Jones get the same score, in which they must re-doll the rolls 3- Dave rolls better then Jones, but less then 5 points better meaning Dave will avoid Detention. 4- Dave's result is 10 points or more then Jones, in which case not only does Dave avoid Detention, but Jones gives him 5 bucks for his mistake. So you would have a series of tests: &#x200B; if Dave.roll < Jones.roll: "Dave goes to detention" if Dave.roll == Jones.roll:"Re-do the roll" if Dave.roll is more then jones.roll but less then jones.roll + 5: "Dave avoids detention, today." if Dave.roll is equal to or greater then jones.roll+10:"Dave avoids detention and Jones gives him $5 for the mistake." &#x200B; Have a brief explanation about that example is an if/else loop and what that may be called in different languages. &#x200B; and then: For the Python Version, go to this URL For the Java Version, go to this URL for the C++ version, go to this URL etc.
P: From a Beginner to Beginners: From print('Hello World!') to Tutorial Hell to Getting my First Job!
C: This is great, thank you so much for your input. I’m very glad you got a good opportunity and took it. I agree with pretty much everything you said and I think it’s very helpful for someone looking for a job who might feel threatened because they aren’t at the same level as a developer. For me personally, python and sql have helped me grow so much in my current role, especially when other people in your team benefit from it (not just clients).
C: "If you throw enough shit on the wall something will stick." In no means meant to be derogatory. I'm in sales, I speak with A LOT of people every day. Learning Python in the evenings. So on regards to you saying that you need to be lucky you're right. However luck is probability. So if you talk to enough companies you will get lucky and find a job sooner or later, hopefully.
C: I condider your experience as a perfect example of determination, and lesson to other beginners - 9-10 months full-time is a perfectly reasonable time to learn 1-2 programming languages, related technologies and toolchains. Lovers of books "In one week", "15 minutes a day" will go nowhere. No "easy" programming languages around, knowledge of every language, framework, technology - is a matter of hard work and determination. No exceptions. One more time, congratulations entering our beautifully crazy industry! 🎉🍾
C: Well done and thanks for the feedback. I think having and stating you have some SQL experience cannot be underrated in a data reliant field.
C: Congrats!~ Out of sheer curiosity, what topics did you cover during your 8 months of python? :)
C: Thank you for the comment! > For me personally, python and sql have helped me grow so much in my current role, especially when other people in your team benefit from it (not just clients). I can imagine and this is really encouraging. I think it's so important to emphasize that programming languages are complementary and are very rarely used by themselves.
C: For sure and no offence taken! It really is a battle of attrition when it comes to applying and I think after applying to 100+ jobs (I think I applied to around 250), it can get very tiresome.
C: Thank you and absolutely! I noticed a huge uptick in interest after showing people on my CV I was taking interest in cloud computing services as well. AWS in particular although I'll be using Azure in my new role.
C: Thank you and sure: * Basics and fundamentals (syntax, data structures) * Automation (using Python to schedule processes) * Webscraping (Selenium, BS4) * Data cleaning and analysis (Pandas) * Miscellaneous stuff I touched along the way: web design, data science, machine learning. All of those were used with the mindset of "how do I make this run by itself?" and the automation angle has a lot of value in big businesses as they want people to be doing stuff other than repetitive tasks.
C: Very well done for 8 months of progress! I'm covering most of these as well, currently going all in on pandas for a few weeks and then Tableau/ R As for ML, how deep down the rabbit hole did you go?
P: My dad is a programmer and I want to hand-sew a simple program as a gift to him. Feedback on the program I came up with?
C: For a moment, I thought "embroidering" and "hand-sewing" were supposed to be cute ways of saying you were writing a program! Yes, it looks good, and correct.
C: That's such a cute idea! I'm sure he'll love it! Also, yes, that looks correct. Personally, if it were me, I would make it wrong on purpose and embroider a red zigzag underneath the error!
C: Maybe part of the Apollo code. Originally it was handwoven: https://www.fastcompany.com/90363966/the-guts-of-nasas-pioneering-apollo-computer-was-handwoven-like-a-quilt
C: It's perfect. I even ran the program.
C: Thanks! I guess you could say I'm stitching together a program :)
C: You beautiful troll. A syntax error you could never fix? The pillow will burn in the hearth before you could say race condition.
C: I love it! Will your program be... ... ... ... ... ... Multithreaded?
C: If she doesn't add import threading to the top of this, an opportunity has been missed.
C: Heyo!
C: That’s a really good... dad joke.
P: Automate the Boring Stuff FREE on Udemy
C: The code is NOV2019FREE or you can use this link: https://www.udemy.com/course/automate/?couponCode=NOV2019FREE To head off any questions: * If you don't have time to take the course now, that's fine. Signing up gives you lifetime access so you can work on it at your own pace. * This Udemy course covers the same content as the book, which you can read for free online at https://inventwithpython.com * The 2nd edition of Automate the Boring Stuff with Python will be posted on the website in mid-November. It gets released on the 12th, and I'll need a couple days to format it to HTML and make it look nice. * I do plan on updating the Udemy course for the second edition, but it'll take a while because I have other book projects I'm working on. Expect that update to happen in mid- or late-2020. If you sign up for this Udemy course, you'll get the updated content automatically once I finish it. It won't be a separate course. * It's totally fine to start on the first edition and then read the second edition later. I'll be writing a blog post to guide first edition readers to the parts of the second edition they should read. * I wrote a blog post to cover [what's new in the second edition](https://inventwithpython.com/blog/2019/10/07/whats-new-in-the-2nd-edition-of-automate-the-boring-stuff-with-python/) * I used to do free codes once or twice a year. The last time I did, I had an amazing 80,000 people sign up (so a dozen of them might have actually finished the course, if people are as good as I am about finishing the online courses I sign up for). Udemy's new policies mean I can't do this anymore. I find this to be a less than ideal situation. So I'm rolling out new codes each month. NOV2019FREE is the free code, and NOV2019 is the cheap code. I'll come out with new ones at the start of each month. (And yes, I'll probably write a script to automate this.)
C: What difficulty level is this course? I'm just finishing up a first intro course and would love to expand, but don't wanna steal a spot for something over my head.
C: I ain't even mad I paid for it a month ago. You're a good dude Al
C: Thank you so much! Excited to dive into it.
C: Hey Al - really appreciate this course! I bought it a few months back and finally started working through it recently, about ~40% through now. I'd taken a few programming courses +10 years ago and it's not only a great refresher on programming but it's teaching me python, which is brand new to me, at the right level/speed that I need.
C: Thank you so much for this! Beginning my software engineering degree next year and the cost of quality resources to learn new languages adds up fast, so this is a total godsend. You're a legend!
C: This course is for complete beginners and assumes no previous programming experience. It's also not even necessarily for people who want to become software engineers. I jokingly call it "programming for office workers", since it teaches how to write practical little programs to automate stuff for anyone who uses a computer as part of their job/hobby.
C: I just read the FAQ here [https://www.reddit.com/r/learnprogramming/comments/drmk30/automate\_the\_boring\_stuff\_with\_python\_udemy/](https://www.reddit.com/r/learnprogramming/comments/drmk30/automate_the_boring_stuff_with_python_udemy/) and it says: "Make free codes that are only good for 3 days for an unlimited number of people (NOV2019FREE lasts until November 7, 2019 11:05 AM PST)" So I think this code is for an unlimited number of people so you won't be stealing a spot
C: Paid a few months ago for udemy and book and I'm still not mad. Al is fucking awesome.
C: I CANT BELIEVE I PAID $7 WHEN OTHERS ARE GETTING THIS FOR FREE! Nah it's cool. If you can snag this course for free it's totally worth it. I'm never going to be a developer but it helps with small projects around the office.
P: Handy Python Functions For All
C: thanks!
C: This is too advanced for me yet... But it seems useful so I'll save it!
C: Awesome content! Saving this. Thanks a lot u/impshum!
C: In [12]: def run_again(): ...: if 'y' in input('Run again (y/N): ').lower(): ...: run_again() ...: ...: run_again() Run again (y/N): no way! Run again (y/N): no thank you! Run again (y/N): probably not Run again (y/N): why are you running? Run again (y/N): Seems a bit faulty to me. Also, making this a recursive function is a bad idea. In [13]: def run_again(prompt='Run again? (y/N): ', error='Invalid input'): ...: while True: ...: choice = input(prompt).lower() ...: if choice not in ('y', 'yes', 'n', 'no'): ...: print(f'{error} Try again') ...: continue ...: return choice == 'y' or choice == 'yes' ...: In [14]: run_again() Run again? (y/N): no way! Invalid input Try again Run again? (y/N): no thank you! Invalid input Try again Run again? (y/N): probably not Invalid input Try again Run again? (y/N): why are you running? Invalid input Try again Run again? (y/N): y Out[14]: True So you can use it like this: In [15]: print('I ran the thing') ...: while run_again(): ...: print('Okay, running again.') ...: print('okay, bye') I ran the thing Run again? (y/N): what? Invalid input Try again Run again? (y/N): y Okay, running again. Run again? (y/N): y Okay, running again. Run again? (y/N): yes Okay, running again. Run again? (y/N): yessir Invalid input Try again Run again? (y/N): yes Okay, running again. Run again? (y/N): nope Invalid input Try again Run again? (y/N): naw Invalid input Try again Run again? (y/N): n okay, bye
C: Nice
C: This is my life
C: Cool. x
C: Good stuff. Thanks for the input to help others.
C: Keep learning. It will make sense sooner than you think.
P: Going from print('Hello World)' to tutorial hell to building my own "data pipeline" - From a beginner to beginners
C: Seeing more and more of your posts. Keep up the good work.
C: Did you follow any book(s) whilst learning python?
C: I love this. I appreciate you sharing your thoughts. A problem I run into is that I just "finished" a project of my own design, but I don't know what I should be doing better. It works, cool. Yet, I don't know where I should have used a better structure or technique. I also don't know where to go half the time to even steal code - SO seems to be the best game in town. So there is a huge gap in knowing where to find better coders, and often I google around and find things that are 10 years old. Nuts. There may not be an easy answer, but that's the "beginning" of programming that keeps hurting me now.
C: I am very thankful you shared this. I have been studying python for so long, but never did an actual job with it. This makes me feel like I can do this too. Not being a people person, I am curious as to how to handle things like talking to clients and negotiating. Can you share by what strategy you found your client, and presented yourself? Help
C: Thank you for the comment and the award! Far too kind of you.
C: I did not. I did all of my learning online because I'm stingy and don't like books.
C: same. But I'm just scared to go on upwork or freelance or other things cos I think what if I cant do the task? I dont wanna waste somebodys time and be left with nothing. Or should I just give it a go and if I cant then learn to do it?
C: Part build the project first and if you're confident you can finish it, show what you've done as part of the proposal. If they accept you, great. If not, finish the project so you learn something.
C: They will make sure you can do it before giving it to you. If you are not suitable, they will reject you, you don't have to reject yourself beforehand
C: This is good life advice as well lol
P: I love Visual Studio Code so much, especially for learning Python
C: Gitlens. Code spell check. Docker. I am also in love. Python and VS is a pleasure.
C: It's also my favorite editor... but for Golang. It's good for Python too... but you really need the right extensions. Pycharm for me is still the best Python editor. I had tried really hard to get Code to be as good (embedding my terminal in my usual place, file tree setup with Git commit highlighting etc). The big issue is recognizing my own imports; that is the part where Code seriously lacks.... VS Code Python extensions often highlight import errors despite perfectly valid imports on \_\_init\_\_.py and throughout the code base (my own imports/modules). As far as performance and overall appearance goes, VS Code blows Pycharm away.
C: "Bracket Pair Colorizer", "indent-rainbow" and "Trailing Spaces" look like they are just what I never knew I needed. Thanks!
C: Pretty sure trailing spaces can be removed by the built-in-setting "files.trimTrailingWhitespace": true For the icon theme I personally prefer the material icon theme either with the material theme for vscode or the synthwave '84 theme. Docstring generator looks pretty nifty I'll have to give that one a try. One you should give a try is gitlens assuming you are working with git. Most of the time the built-in git functionality is enough but occasionally there will be some things gitlens can do better, such as comparing entire repos/folder commit to commit.
C: I used Visual Studio Code. It's very nice. But I needed something a little more portable. So I use Google Colab. It's more easy to use and it's browser base. You can share your code more easily, so others can help
C: Is Visual Studio Code free?
C: Have you tried pycharm? I use both programs but vastly prefer pycharm for python.
C: Just installed the spell checker. How do I fix spelling mistakes? It doesn't seem to allow autocompletion. Edit: google for now. :)
C: I second pycharm, I'm a huge sucker for jetbrains products solely for their code completion.
C: Pycharn all the way. Switched to jetbrains IDEs a while ago and now I can't even think of working without Pycharm or CLion
P: Got my first offer as a python developer
C: Congratulations! It’s easy and great writing a script here and there to automate some irksome or onerous task. It’s much, much more difficult to create an ecosystem of scripts that reuse functions and integrate together smoothly. It’s extremely difficult for a single person to develop an entire system. Be conscious of what you are trying to create. Always think about how to reuse that quick little script that you wrote. Doc strings are your friends. When creating a report, always print the name of the generating script with a date and time stamp in a banner so you immediately know how to get the report next month/quarter. Print each function and put it in a three ring binder so it’s easy to flip through and refresh yourself what the expected input and output are. If you are not using Git or some other version control system, you are building your own software version of the Titanic. Been there, done that.. Good luck!
C: I did this EXACT thing 2 years ago. I’ve now created more than 50 standalone internal applications my my company. If you have any questions feel free to reach out. Also have an accounting degree and started as an accountant.
C: Just found out there is an in-company job offering for python. Have been wondering if I should apply whole morning, but your post might as well nudge me over the line and give it a shot.
C: That’s how it goes! Once you start actually taking action, things happen (and I mean REAL action — going through the motions with an online course does not necessarily count) And it happens faster than you expect, sometimes! But also slower at others. And then much faster again. And then slower. And so on. It’s all very irregular/erratic, and it can be disheartening, but if you *continually* (day after day) choose to learn more you’ll probably wind up in a good place
C: HAH I love that you suggested some modern purely-digital best practices and THEN also suggested he print everything and put it in a three ring binder :p (I am not being sarcastic, it’s fun! And I know you may very well be right, maybe that IS better for learning)
C: Are there any good git tutorials or books that walk you through its usage for coding?
C: Will definitely be reaching out, thank you.
C: Definitely apply. What’s the harm?
C: Yeah, my life is full of such irony. I can write code electronically but for some obscure reason I need to print it in order to understand it or debug it unless I’m using “poke and hope” debugging
C: >“poke and hope”
P: I got an invitation from Google's Secret Hiring Challenge!
C: I got it a few years ago while googling some python docs. The animation to split the search screen open to expose the invite was pretty cool. Do they still do that?
C: Gets mysterious coding challenge from Google. Takes picture of monitor with phone.
C: Hope they don't bring up your search history in the interview
C: Probably some brilliant google programmer getting people to solve his code for free. Just kidding looks cool and congrats I hope!
C: Final Test question: Enter your credit card details **backwards**?
C: I’m not going to lie. If that happened to me I don’t think I would have clicked it. Not knowing about it, and it showing up after a bunch of google searches, it sounds like a good way to install malware. Cool it’s legit though. I’m to do some google searching now. ;)
C: Ngl, I was expecting to get rickrolled.
C: Yep, that's exactly I entered the page.
C: Should’ve used a disposable camera, developed in a homemade dark room, and distributed via Signal. Tsk tsk. Rookie mistake.
C: Yeah this was the real test and OP failed
P: Holy fuck I get it now my dudes.
C: The "Aha! moment" is very real and very important in learning any science (especially something mathematics based like programming). Feels great eh?
C: Any tips on how you went about it cause I’m stuck and it just makes me want to give up :/ I always feel like I’m close to that point but then I lose it
C: I’m not a very experienced programmer, but I have noticed that actually writing code with pen and paper FORCES you to understand what you’re doing
C: The thing about oop that a lot of beginner's don't realize is that it actually allows you to be a bit lazier and not have to pass variables around all over the place as you can reference them with self :) Once you figure out subclassing you can be even lazier hahaha
C: I feel you man. I remember having an aha moment back in high school in AP calc on a midterm and I’ve been chasing that high ever since
C: Eureka moments release an insane amount of dopamine, it's addictive. I could get high almost daily while learning to code.
C: I could write code no problem, but I couldn't explain what I was writing. I went and rewrote the vocab because thats where I was struggling. What part are you stuck at? Maybe I can help.
C: I did that for the majority of my cs bachelor back in 90s. All tests was on paper. And if you forget any ; you lose 0,5 points. Painful years... 😂
C: Have you tried chasing it to cocaine yet?
C: Aha!
P: From struggling with for loops to a government database administration job-- in one year
C: Dude! Congratulations! This was a great read and i felt happy for you. Good job on not giving up, and you learned some impressive stuff in an impressively short time. Good Luck to you in your future endeavors, and come back here occasionally to help more newbs achieve what you did.
C: Everyone of these stories are so inspirational to me. I hope to learn and make use of python before I'm 40.
C: [deleted]
C: This was a very good read. At 35, I just started going back to school since graduating Highschool at 18. I decided computer science is the place to start since technology isn’t going away. I’m in my second term and the combo of python and learning Git is making me want to quit. After reading this I see a glimmer of hope at the end of the tunnel.
C: Congratulations man.
C: This story is very very similar to me. All they way until you said database admin, wasn't expecting that. However, I wish you all the best of luck and you'll no doubt be on you way to a very bright future. It's not much but have some silver to show my appreciation.
C: I started coding at 33 and now I'm 35 making good money doing it in a senior engineer position. It's never too late.
C: I’m not much further past you in python and C# and classes confused the shit out of me for a week or two. After a bit it clicked and now I’m confused as shit about something else that, although frustrating, I know it will click soon. Keep at it!
C: Same here. I'm couple years younger 😊 being a new dad doesn't help to concentrate either, but I'm doing fairly well so far.. In 2.1 range, but there are 18 yaars who came there being miles.
C: Thank you for this. I turn 32 this year and I'm yet to write anything meaningful beyond print ('hello world!') Thing is, I've been good with computers from a young age when my family first got our own home computer over 20 years ago. I'm ready to push to the next step but working full time and caring for my 2 year old son takes up nearly all my time. This is why I'm aiming to learn and make use of python before I'm 40. I've already bought a few online courses on udemy so I'm confident once I've watched them and done some basic projects (automation and spreadsheets) I'll have the skills to apply them professionally.
P: Don't quit
C: What’s the hot tip for those of us trying to smash our automate the boring stuff, but find they only have an hour or two a week to get it done and struggle to then retain all the previous material
C: I'm not quitting either. I just say *fuck you and I'll see you tomorrow.*
C: Also, I highly recommend Tech with Tim. Something about the way he teaches really works for me. I have been trying to learn programming my whole life and always give up. Every year or two I try again and fail. But with Tim’s help I am finally getting there. So a big thank you to him too.
C: [removed]
C: Read the book and of course complete the examples as you go. Whenever you learn a new thing, try it in on your own, separate from the book’s example,before continuing on. A day later, try out what you learned again. For example: if you’re reading about for loops, do the example in the book. Create your own for loop. Try looking at the documentation to see what else you can do with the loop. Come back tomorrow and create your own for loop.
C: Idk about you, but I cut it out of my video game time lol
C: Pog
C: Um wat?
C: They made their boy pussy go poggers
C: thanks
P: Finally did something I am proud of - Helping others with Python!
C: Nicely done! That's a real productivity boost. She'll be able to focus on other things more now.
C: “my spawn is a bona-fide hacker” - OP’s Mom
C: That's amazing! Congrats, it's a great feeling, isn't it? I have been a programmer for many, many years. Back in the day, I was a Lotus Notes developer, and the company I worked for decided they didn't want to pay for the licenses any more. They wanted to go another direction. So, I did some research and decided that PHP would be a good choice. One problem: I didn't know PHP. Now, at this point I had developed in many languages, and have had to learn on my feet. I even had to learn tcl to do a project for PlanetFeedback.com. That was a treat (ahem). So... I started learning PHP. I jumped onto a PHP forum (this was before reddit), and absorbed everything I could, while going through tutorials. Pretty soon, I was helping others with their problems. We also did fun challenges, like "write the song 99 Bottles of Beer on the Wall in as few lines as possible." 6 months after I began, I was approached by Wiley Publishing, and became a co-author of a PHP book! My advice: Don't think of it as learning, like school, where you have to study and worry about your lack of knowledge. Look at it like a fun hobby, and don't just look for help here in the sub, but help others whenever you can. As you have already figured out, it's *very* rewarding :) Great job, keep it up! Edit: Wanted to add, I'm a python noob myself. As in, I decided to jump in yesterday. I am a developer for the county I live in, and I may have some need to do python projects in the future. So... here I go again. I'm excited for the future! Look for my book in a year or so LMAO
C: Honestly, I've known how to code for almost 4 years and haven't had the opportunity to help the people I love with it. I've build ML models, pipelines, etc. for work but this beats all of them. Congrats, insanely jealous.
C: She must be very proud of you.
C: For sure! She is so happy about it lol
C: The Command Prompt stuff was just unbelievable to her. “You’re not even using the mouse!?”
C: Thanks!! Your story is really cool as well. Let us know when the python book is ready lol
C: You really want to wow her? [Go to this site](https://hackertyper.net/) and just start typing really fast (doesn't matter what you type). Lots of fun... looks like something they'd use on TV Edit: If you press F11, it will be full screen
C: Terminal powaaaaaa
P: "Automate the Boring Stuff with Python" Udemy course is free to sign up for the next 48 hours: DEC2019FREE
C: I suck. I went to grab this at the freebie price, and after logging in got this message: >You purchased this course on Nov. 27, 2017 Well shit I paid for it. Might as well actually do it. :) ... same for all of the books that I've bought over the years... *sigh*
C: Oh wait! You’re the guy who wrote it! I got it, but I’m kind of confused what you mean when you say I can get it for free, but sign up for $17.
C: Not only is it free, I can return it within 30 days if I don’t like it!
C: Love the book! Helped me a lot as a librarian to wrangle bibliographic and circulation data. I'll be ordering the second edition for the collection.
C: Thanks, Al!
C: > DEC2019 Ha beat you...mine says 2015...damn procrastination
C: Hahaha, me to:(
C: Gotta remember to enter DEC2019FREE!
C: are you referring to the second code? after the free period (only 3 days), course would be $14 with DEC2019 coupon code (rest of the month) instead of $50
C: No Money Back 30 day guarantee!
P: I was finally hired as a junior software developer, and it only took me.... seven years! Here's a quick write up on my journey for those on a similar path.
C: Very inspiring post! Is there anything that would save you more time and hardwork had you known that something earlier?
C: Out of curiosity, do you happen to have a college degree as well?
C: Any advice on OOP? I've found that I hit similar burnouts/tutorial hell each time I get back to it
C: I hit those walls when I first started too. Don’t let it discourage you. Programming is really hard and one day everything will just make sense... until you hit the next wall 😂
C: I love reading success stories like this one.Good job man you earned it!
C: Thanks for saying so. Honestly, if I'd known the important of just diving in, it would have saved me years. Drop the tutorials and just make. You will hit stumbling blocks at every turn, but using resources like stack overflow to overcome these _is_ the learning process. Don't put a project off as "too advanced" or think "I'm not ready". Just do it. If it's something truly too advanced, then just make a piece of it. For example, you don't have to make a Twitter clone, you can just make a simple message space.
C: No I do not. I'm not sure how much that has hindered me, if at all. It certainly didn't come up in the conversation for the interview I had with my current company.
C: What advice are you looking for? Oop is an entire paradigm, with many things to learn. If you're looking to truely understand Oop, in my humble opinion I would try these steps: 0. Google any and all of the words you don't know that I'm about to say. 1. Learn the basics of Java. Java doesn't have to be the language, , but if you're serious about Oop it can help because it's strongly attached to that paradigm 2. Start learning design techniques and patterns. (Techniques first) things like composition, inherentence, and then prehaps polymorphism 3. Start building MVC structure apps (model, view, controller) this is really the building blocks to basic project layout and understanding how to create something useful. 4. Find an API framework like spring boot (java), django (python), express (javascript) and start learning it. Basically an API is the MC (model, controller) part of MVC, and then you just use the web to create the V (view)
C: Soo basically you're recommending a more practical approach rather than theoretical. I like that! I've noticed tutorials only burn me out and get me depressed at my inability to understand them. Saying that is really helpful! Another question. What made your journey much much easier/efficient?
C: You definitely need both, but it's easy to stay in the theoretical zone because it feels safe. It's very comfortable to be guided by what someone else has written and shown you. Therefore, out your efforts into getting into the practical side of things and the theory will follow naturally. Whilst learning you have the benefit of anything you break not mattering at all, so break away! I wouldn't describe any of my journey as easy or efficient until I started making things to solve real problems that I had. Once I realised that spending 8+ hours programming something to save me 1 hour a day was actually an efficient use of time, I felt motivated to create and learn more. On the flip side to that, I also spent hours creating things only for the to fail or save me mere minutes a day as well, but it's still a good experience.
P: 7 Beginner Python Project Ideas
C: I'd like to add another: 8) A solver for any logic puzzle you enjoy.
C: +1 for blackjack. It definitely helped me understand quite a lot. Would also like to add that looking into how to build a gacha/lootbox simulator helped expose that I didn't understand a lot more than I thought.
C: [removed]
C: Should we, as beginners, be watching YouTube tutorials on how to do these or is there another way we should do this?
C: I learned a lot by building a tic tac toe/ connect 4 game in a different sized grids - from 3x3 up to 9x9 (all set by the customer)
C: Sure, that's definitely a good project idea too
C: Did you do the blackjack on your own? Or you watched a YouTube video and followed along, understanding the concepts? Or is there any documentation which shows step by step instructions?
C: How would a password guesser work? Does it continously add on an extra chacracter, cycling through the ascii, and testing it?
C: don't be afraid to consult youtube videos, but try to program as much as you can on your own, without following any full tutorials. escape tutorial hell as fast as you can.
C: No video, but I researched and referenced a lot. Hardest part for me was calculating the score properly especially given that Ace can be 11 or 1 or 10 (in case of blackjack on draw). I think I was referencing the code in a java tutorial somewhere for that. Slight disclaimer: I actually did it in GDScript (Godot), but the core concepts are the same and GDScript is pretty similar to Python.
P: I actually used Python to do a thing!
C: Maybe you can post the code, it will be useful for someone.
C: Going through this course in udemy :) excited to apply what ive learned
C: [deleted]
C: I am the beginner you mentioned, scared and struggling on learning Python by my own, reading this r/learnprogramming, r/learnpython on a daily basis, hoping to someday understand most of the threads going on. Its been a month and I don't know where my direction is? Still there trying to master functions, list, tuples and all, still afraid of inheritance and OOP, all the courage I have is to go to w3schools and practice all the new syntax. I have completed the python for dummies book until it got to AI and neural networks stuff. Most of the specified code during these topics, didn't run and I found no solution on stackoverflow or google that I can understand and apply. That's where my mind started going bonkers. I don't have any outlet for this kind of stuff building up in my head. Neither do I have any place like you where I can actually apply what I learn. But let's be honest here, I haven't learn enough to apply on anything. I would really appreciate a suggestion on what to do next. My goal is to get into Data Science/Data Analysis. That's the reason I started learning python a month ago. Prior to that, I had no known knowledge on programming. I know I need to learn SQL next, but I can't make myself ready until I feel I confident in programing. I am open for anything free, but courses like udacity and coursera are like way out of my budget.
C: This is so awesome! I also took that class to learn python and it really helped to have my own project in mind while taking the course.
C: #CONGRATULATIONS!!!
C: It was something to the effect of: import os for folder, subfolder, filenames in os.walk([directory]): for filename in filenames: print(filename+'\n') (And yes, I have now gone through the chapter of copying and pasting that directly into other applications, but at the time I did that with ctrl+c and ctrl+v) EDIT: code copied properly this time.
C: > Neither do I have any place like you where I can actually apply what I learn. But let's be honest here, I haven't learn enough to apply on anything. These two sentences here are the problem! I found it really hard to learn when I was just trying to learn syntax, and never felt I knew enough to do anything. What helped me was to try to think of a task that I could do to practice using the syntax, for example I wrote a script that pulled my steam library and worked out cost per hour played (I have made some poor purchasing decisions but that's another story). Did this take longer than doing it manually? Absolutely. Did it involve lots of Googling to try to work out how regexes work? Sure did. Did I need to do this for work? Goodness me no. I think what I'd recommend, and I'm not an expert on this so feel free to ignore, is: 1. Take a break - you sound fed up and as if you are treating this as a chore. It shouldn't be, it should be fun. It's ok to have a day off and come back when you want to learn. 2. Think of anything you could automate - want to check the weather in your local area? Check Apple's share price? Play rock, paper, scissors against your computer? All of these are things that I almost guarantee you have the knowledge to do, you just need a lot of Googling and... 3. Break things into small pieces - you can't write the whole programme in one sitting, so break it down into smaller bits. In effect you might have a tiny bit of code to copy some text, another bit to paste it, another bit to add a set phrase to the end of the text, etc. Breaking the code down makes it much more approachable and feel more achievable, and you will have learnt enough to do these small things, even if you don't feel you've learnt enough for the whole project.
C: If you want to take this further you can automate the creation of a csv or excell sheet including having all the dats added to it instead of print to the screen Edit: to be clear I think any amount of programming is awesome. Always continue to think about what’s next as well.
C: You could also just use os.listdir("pathname") which created a list from the files in a directory. contents = os.listdir("path") for file in contents: print(file)
P: "Automate the Boring Stuff" author refactoring beginner's code on a live stream Wed 4/17 at 7pm pacific
C: Hi Al, This sounds great - do you plan on keeping it up as a VOD on Twitch for those of us who can't watch live due to timezone conflicts? Cheers!
C: Hi Al, I am going trough your book right now! Is there a chance you will add solutions to the code challenges you have in your book? I am curious to see how you did it and if I can improve my code to be more efficient.
C: Dude, your guide helped me get hooked on Python, now I'm building flask sites thanks to you. Just wanted to say thankyou! :D
C: Al, I'm sure you get this often.. but after quitting two times to 'learn how to code' and in my third go starting with Automate the Boring Stuff, it has been the single best resource that built my confidence in such a natural way that I've never stopped since. I also recommend it every chance I get, so thank you very much!! Best of success to you!
C: What is the name of the Youtube channel you will post it to?
C: Hey Al. Any chance you could post the beginner code today so we can read through it prior and follow along during your stream?
C: [deleted]
C: Yes, it'll be up for I think a week on Twitch, but I'll also upload it to YouTube: https://www.youtube.com/user/Albert10110
C: https://www.youtube.com/user/Albert10110
C: You are a wonderful person for doing so.
P: Nothing is more liberating than learning python well enough to be able to answer questions on Stack Overflow
C: This helps in how you overcome imposter syndrome.
C: Now you need to get good enough at StackOverflow so that you can mark questions as duplicates ^/s
C: usually if you can answer questions on stack youre pretty good at it, props to you
C: Amen
C: nothing is more satisfying than to ask a question nobody can answer.
C: Nothing is more liberating than writing clean code that works and is useful 👍🏻
C: I really struggle with this at work. I'm not new to coding but new to Python (been writing a few scripts!) but now I'm the script lady. Unrelated to Python, but I completely missed an HTTP header that would have easily solved a problem we were having. Luckily I have good managers that insisted that it was okay that I didn't know of it yet. But it was really hard not to feel down on myself for making a mistake.
C: Dude everyone makes mistakes. It's just a part of life. Having management that realizes that and encourages you to learn from it and KEEP GOING is good to have.
C: Never feel bad for making a mistake. Only feel bad if you made a mistake and learned nothing from it.
C: “When you’re screwing up and nobody says anything to you anymore that means they’ve given up on you…you may not want to hear it but your critics are often the ones telling you they still love you and care about you and want to make you better.” -Randy Pausch
P: 😎
C: HolyMolly, that's insane. That confirm my theorie that if i don't learn ar soon i'm gonna be out of job in 5 years.
C: Looks to be a service called Virtual Mirror created by [Luxottica](http://www.luxottica.com/en) You can see the compiled code for it in the site's source here: \`desktop/assets/scripts/virtual-mirror-w.js?v=20191121\`
C: This is cool but only for sunglasses I can't see shit if I remove my prescription lens
C: which site ?
C: Nah this won't replace your job, it will replace brick and mortar eyeglasses business
C: Nahh, this stuff is another level entirely. Shaders and stuff like that. 3D programming isn't the same thing at all. Most of us build CRUD apps. We don't need/want 3D things like this at all. Certainly there will be a market for great 3D web-animators, but it's a niche.
C: Fun fact - Luxottica is a private company which has a monopoly over the eyewear industry, controlling over 80% of eyewear stores. Just check out the brands on their site http://www.luxottica.com/en/eyewear-brands
C: It works if you're wearing glasses. [https://gfycat.com/plainpeacefulenglishpointer](https://gfycat.com/plainpeacefulenglishpointer)
C: Down with big sunglass.
C: AKA Luxottica, ironically… This will only solidify their monopoly.
P: Simple and best explanation i have ever seen. UI vs UX. Give your explanations below.
C: I haven't saved the source, but it reminded me this https://imgur.com/uBTybOD
C: More sticky notes could’ve prevented this...
C: Context matters: It's a left-handed cup. (See first picture)
C: UI is the collection of tangible elements on the screen you interact with. UX, user experience, is designing the UI in such a way that it is intuitive, pleasant and effective. Through things like usability tests, you can measure the quality of the UX that a UI provides. Don’t make me thing, by Steve Krug, is an excellent book on some of this.
C: [deleted]
C: [deleted]
C: Tell that to the righties that have been bullying me my whole life.
C: What? With this product the user is supposed to form their toungue into the shape of a straw and suck it out that way. Trust me, this is the way of the future.
C: not our fault you're a sinister fuck
C: sin·​is·​ter | \ ˈsi-nə-stər 4a: of, relating to, or situated to the left or on the left side of something ------------- dex·​ter | \ ˈdek-stər 1: relating to or situated on the right
P: Learn all about how to use the clip-path editor in Firefox to create visual effects in my article 8 little videos about the Firefox shape path editor
C: Impressive. I would have probably just given the heart a white border, and position the text behind said heart.
C: Article here: [https://blog.bitsrc.io/8-little-videos-about-the-firefox-shape-path-editor-96a12c7cd3b6](https://blog.bitsrc.io/8-little-videos-about-the-firefox-shape-path-editor-96a12c7cd3b6)
C: Another reason I love Firefox! Thanks for this!
C: Cool! Thanks
C: Impressive! Now you need to make the heart pulse.
C: impressive one
C: This is useful in those scenarios where you cant just switch z-layer for whatever reason
C: Shared w my eng team! Thank you
C: Firefox dev tools for the win
P: Now?
C: C’mon... why is this DIV not centering?! THINK IN POLISH!!!
C: There will be an API for that. `mapEventListenersToThoughts` Just `npm i neuralink` and wrap your app in it.
C: .brain { content:' '; }
C: Your brain basically is already acting as a computer just need to figure out how to network, hackers will be really happy when they do! Brains are like WordPress when it comes to security 😀
C: I've always said; I want to get an in-brain computer, but I'm sure as hell not going to be an early adopter.
C: I don’t get it, why would front-end programmers sweat more than every other programmer?
C: I am sure you will need debug the brain one way or another when a bug pops up 🤣. Agile YOLO!
C: >THINK IN POLISH!!! Grzegorz Brzęczyszczykiewicz
C: The fact that this is a class implies there are multiple brains...
C: The corpus callosum is already a LAN cable between hemispheres. Digitize that shit and transmit it.
P: Not me, my friends
C: I Promise
C: I get that this meme is being ironic, but to anyone actually doing this, please don't, get some help.
C: In all seriousness... ...how else do you fix it? 😳 Not asking for me you understand... for... my... colleague....
C: It's one thing to have stuff like that in frontend code, but oh boy, I just love it when the same happens in end to end tests * Some test fails 30% of the time * Dev sees that an API call doesn't always finish in time before the next assertion * Proceeds to add something like `delay(1000)` before assertion * Now test fails 2% of the time and innocent, well-meaning devs lose their minds when it happens on their branch
C: Ok, I’ll wait then
C: Depends. The setTimeout is usually used to delay some logic until the async task completes. It’s better to refactor it so that the async result **triggers** that logic. Throwing in a race condition and hoping for the best is how you riddle your code with bugs, screwing yourself and your team.
C: I would suggest you await.
C: You better resolve.
C: Try to catch me.
C: I'll throw you out
P: I have made a calculator that can recognize handwritten characters. It uses TensorFlowJS for inference on the browser.
C: Cool, why this isn't getting the upvotes tho
C: Link : [Handwritten-Character-Recognition-Calculator](https://sagyamthapa.me/Handwritten-Optical-Character-Recognition/) Feel free to show me edges cases where it fails. You use the save button to save images for failed case. This was build for my academic project. Edit: The mobile scrolling problem is now solved. Edit: Thank you so much guys. False positive and true negative data you guys have provided is very useful. This is the reason why decided to show my project on reddit. There are only so many edge cases one person can come up with. After I have posted this people have been reporting edges cases I had not even imagined :)
C: In case anyone is wondering, if you draw a dick it thinks it’s a 0 with 98% confidence.
C: Doesn't work on mobile.
C: Reddit hides upvotes/downvotes for some time after posting.
C: [My 4 is 100% a 6](https://imgur.com/pugxdRy) and [my 1 is a 4](https://imgur.com/WmoRiFZ)
C: I think the usability on mobile is pretty bad. The page scrolls as I try to draw. Maybe disable scroll while it’s drawing or something?
C: Html5 supports touch events, that should probably work like your click /drag mouse events
C: Failed to detect 3: https://i.imgur.com/07XaSp3.png - No idea https://i.imgur.com/ERmCzmd.png - This is a Divison with 98% confidence 😎 https://i.imgur.com/UgrQlMl.png - Umm, maybe it's Divison but with only 52% confidence 😕
C: Story of my life
P: It Do Be Like That
C: Lets see him move those boxes around 😭😭 it be a pain in the ass sometimes
C: [deleted]
C: When I onboard new developers I will intentionally give them a front end UI type task without a lot of guidance. They quickly learn that moving boxes around is much harder than they expected. It's a different skill that takes just as much time and energy to learn.
C: Especially if he tries centering those boxes!
C: _**[flexbox intensifies]**_
C: ...in an HTML email...
C: the developer : \- there I did center it, how hard can your job be. Also his css: position:fixed, top:137px right:144px display:flex
C: And make that email look good on all 30+ horrible email clients
C: Oof. Recently had to redo some email templates. Anyone who complains about any other part of web development should try taking a ride in that dirty little time machine called HTML emails.
C: The client tried to open it on their refrigerator and said it looked broken
P: My first react js app, Pokemon cards using an API
C: Good work! Will you be adding a search? I think that could be useful and good to learn :)
C: I woul add 'user-select: none' To the cards. That way you won't get that blue selection square over your images.
C: Looks really good, it checks many boxes 👍. Try adding a search bar that shows results as you type and some filters. Combining those in a query is a great exercise and highly transferable to day-to-day work.
C: are there any pokemon APIs out there?
C: This, showing results suggestions as soon as you type.
C: Yeah that's the next step, I found one library and I'm trying to figure out how can I use it. Also I'm thinking about adding option to sort out by types of Pokemon.
C: I didn't know, would add that. Thanks
C: pokeapi.co
C: It’s trivial to implement without a library. The basics atleast. Write an onChange function for the search input that filters your array of cards on pokemon.name or something like that.
C: **I found links in your comment that were not hyperlinked:** * [pokeapi.co](https://pokeapi.co) *I did the honors for you.* *** ^[delete](https://www.reddit.com/message/compose?to=%2Fu%2FLinkifyBot&subject=delete%20g9b2ptn&message=Click%20the%20send%20button%20to%20delete%20the%20false%20positive.) ^| ^[information](https://np.reddit.com/u/LinkifyBot/comments/gkkf7p) ^| ^<3
P: 550+ customizable (size, color, stroke) open-source SVG icons for web developers
C: Hi All, I made this actually for my own needs. It was featured on ProductHunt and ended #1 with more than 500 upvotes. You can: 1. customize size 2. customize color 3. change stroke 4. search by tags You can check it and download icons here: [Tabler Icons](https://tablericons.com/) Icons created by Pawel Kuna. Site created by me. Icons are open source under MIT license. Enjoy it guys.
C: Is there a reason why you don't have a YouTube icon? I see you have other social media like Facebook and Instagram
C: Saved;)
C: Nice! What website are you using?
C: Amazing work dude!
C: Hmm, don't know. I didn't create the icons but the site. Maybe this is a good question that can be asked in Github repo.
C: [https://tablericons.com](https://tablericons.com)
C: Thank you!
C: Gracias!
C: You're welcome!
P: I’m pretty proud of this
C: It's really good for not using any frameworks, or even jQuery. Good job
C: Congrats! What’s your stack?
C: I’m proud of you, too.
C: Thanks! I put most of the effort into the Easter eggs. Like the mini game. The content itself needs a lot of love.
C: Plain old html, css, and vanilla JavaScript.
C: Haha thanks, I appreciate it!
C: You monster!
C: Got a link? Be nice to see
C: [Here you go](https://www.tonybatts.com)
C: Really good, bonus points that most of the images you've used have transparent backgrounds - always annoys me when my dark mode plugin leaves massive white areas due to non-transparent backgrounds. One question though, why list "Apple" as a skill? It's probably better to try and describe the apple products or services you are experienced with. For example, I'm experienced with the Microsoft tech stack, but I wouldn't just say "Microsoft" - I would refer to the specific technologies like ASP.NET, .NET Core and C#. Services like Azure or Mircrosoft 365 would be the other things to mention. Now, I don't know much about the "apple stack" of technology, but you could probably mention Objective-C and Swift if that's what you've used?
P: Me halfway into Maxmillian Schwarzmüller's React course!
C: My favorite quote from Max: “Even of your answer is wrong, *no one is going to kill you*, instead you are going to learn if people correct you.” Germans. 😂
C: "*Fer dat,* we can import a react component..." "These are just some of things *awailable* to us when working in the react environment"
C: I love his accent. As I’m programming, I find myself saying (in my head) “Component” the way he does.
C: He's a great teacher
C: I haven't watched his course but I love this attitude. Newbies are often so afraid of failure that they're afraid to even _try_ something. But really, nothing bad is going to happen if you screw up some web code. And then you'll find out that the thing you tried doesn't work, which by process of elimination takes you closer to a solution. Failure is just a step on the road to victory.
C: Mine is "Vue is like if React and Angular had sex"
C: to **react** to his relatively small accent, as I non-native English Speaker & European I found his courses and in general his way of speaking English far easier to understand than Americans for instance.I tried several courses or videos on youtube made by Americans, and sometimes I just can't keep up with it, it's either too fast or less comprehensive for a Frenchy like me.
C: He’s a pretty fantastic teacher. I’d recommend his courses to anybody.
C: I also enjoy his friendly accent and demeanor, I just couldn’t resist making the joke!
C: Totally ! His accent is nice to hear and subtle enough for me to enjoy his content.
P: Starting work without coffee
C: Or even better, not running 'npm run dev' at all, and wondering why your changes aren't appearing on the screen.
C: This but in slack.
C: My common one is "gulp pull" :)
C: Spend 20 minutes making code updates and wondering why they aren’t being reflected in the app, so you check your builds and making sure there are no errors, then realizing that you’re viewing the staging environment and not your local build. Happens at least once a day.
C: I always end up putting this in the terminal: > mdn run dev And this in the search bar: npm [basic concept I keep forgetting]
C: git install
C: Yea I too do stupid things like using npm instead of yarn when I dont have my coffee /s
C: all the time
C: Putting `git status` in the company wide slack channel. That's my fave.
C: Let me just `yarn add .`
P: Using velocity-based SVG morphing to create motion effects
C: any examples on how to pull this off?
C: Let aside the functionality for a bit, event the designs and colours are neat :)
C: Sure, source code here: [https://codepen.io/ainalem/pen/abdLaEW](https://codepen.io/ainalem/pen/abdLaEW)
C: pun intended?
C: gotta save this. thx
C: 2 questions if you could help me understand what I’m seeing. 1. What are all the <path d= some_numbers 2. Why is the js file so massive and filed with the above mentioned.
C: It's SVG code, I'm pretty sure those are what's making the cute cartoon character rather than an image file
C: "Massive" means SVG code.
C: Yeah I was interested in seeing the code but unfortunately the SVG makes it really rough. We're using react-spring here though, which has a good examples page: [https://www.react-spring.io/docs/hooks/examples](https://www.react-spring.io/docs/hooks/examples)
P: Full wisdom on breakpoints in media queries (CSS)
C: Sadly a lot of people don't do it like this and think there are some set pixel widths that have to be targeted. Are css frameworks to blame for that?
C: What if large and small screen look like shit. Where do I start then?
C: How about start with large screen and contract until looks like shit?
C: Partly, because they often discourage fluid design.
C: It's partly that and partly a consequence of once something becomes popular on the web it takes years to break - looking at you image carousels. The values people commonly use of 768px (iPad 1), 480 (iphone 4 in landscape), and 320 (iphone 4 in horizontal) were the first values we used when mobile responsiveness became a thing in the late aughts/early tens. They've persisted despite the advent of new devices, sizes, etc. Designers/devs who don't know better use the same values they see other people use, and the cycle perpetuates
C: Blame the designer
C: how about it always looking shit \**weeps in non-existent design knowledge\**
C: It's still a good idea to have designs and main breakpoints for small/medium/large devices etc, then apply the "breakpoint whenever it looks shit" rule anywhere it's needed in between.
C: What if I am the designer
C: Blame the developer.
P: When you google 'marquee html', a marquee effect gets applied on the result count
C: Nice finding! You can search for `blink html` too!
C: Google's homepage has all kinds of [easter eggs!](https://searchengineland.com/the-big-list-of-google-easter-eggs-153768)
C: Wait there is a marquee tag?!
C: I always liked searching for "do a barrel roll"
C: How can you apply this theme?
C: Just when you thought they were dead and buried after IE4 and MN4 died off...
C: It's deprecated, but yes.
C: Dark reader is especially good, it works for any site and it's not a simple invert effect like many other extensions.
C: On Mozilla's dev page, it gives this as an example <blink>Why would somebody use this?</blink>
C: What are good alternatives then? Js?
P: I needed a "feedback component" for my projects. Since I was unable to find one which met my requirements which is very minimal looking / user friendly and FREE this is what i came up with. I published it as a NPM package.
C: Github Repo : [https://github.com/dulajkavinda/minimal-feedback](https://github.com/dulajkavinda/minimal-feedback) NPM package : [https://www.npmjs.com/package/minimal-feedback](https://www.npmjs.com/package/minimal-feedback) \*design was inspired from a paid service i found while searching for a feedback component. Didn’t wanna pay :)
C: Reminds me of [Feedback Fish](https://feedback.fish)
C: Really nice work! :) I have a couple of design suggestions: * I'd prefer the drop shadow to feel "directional" (top down). Just like how you don't light a persons face dead on for a portrait. Skew it more to the bottom, and maybe even make it more soft (turn down the alpha or the "blackness") * The "x" is an action regarding the whole window, and should be advertised as such. If you move it up and more to the right and maybe give it a border, so it feels connected to the window - that'd be real nice! Also, our brains are used to the "x" in the very corner. The arrow however, is not an action regarding the window itself, but is more a "menu thing", and should stay as is. * The yellow on the light bulb could be just a little bit brighter in my opinion (it's quite "mustardy") * A hover state on the rounded squares could make it feel more tactile * You use a purple color on the button that activates the menu that is used no where else. I would suggest the same blue that you use in the widget for borders and buttons. That would make it a bit more consistent and makes my brain feel more of a connection between the activator and widget I hope you can use it for anything. Anyways, it's really cool!Hope you have a nice day :)
C: Really awesome, great work! There’s just something about the title on each submenu that feels a bit off, I think it is the title that is a bit too big or the icon thats too small.
C: Love that you managed to rebuild a simple version of our widget from scratch, that's super cool! :) (I'm the co-creator of https://feedback.fish, the paid service this is inspired by. We offer a more polished version of this widget as a service with team management, screenshot support, internationalization into 40 languages and much more)
C: thank you so much. this is really great feedback. ill note this down and fix everything you mentioned. again thanks
C: hey thanks for the feedback, ill reduce the font size on submenu titles
C: hey thanks man, if you guys can increase the free tier feedback amount it would be great for your potential customers.
C: Max, thanks for being gracious when someone is literally lifting your team's hard work. I know there's a lot of extra work that goes on before a product like this reaches even development. "A rising tide lifts all boats."
C: > increase the free tier feedback amount it would be great for your potential customers Sounds like they know exactly how much to give away for free to get free tier users to turn into paying customers.
P: Free SVG Shape Generator
C: Link: [https://www.softr.io/tools/svg-shape-generator](https://www.softr.io/tools/svg-shape-generator)
C: Saved thanks!
C: Really cool tool!
C: *e g g*
C: i add it favorite. Thats awesome! If you can do certain lines it would be perfect
C: Neat demo. Does it only makes blobs?
C: I love free tools like these, thanks
C: Can I get the source code?
C: Just in time for Easter!
P: Made my personal site into a desktop environment. Influenced by Windows & macOS.
C: That's so fucking cool! Great work man, I love it.
C: Worked on mobile too, great job!
C: Site: [https://x.dustinbrett.com](https://x.dustinbrett.com/) | [https://dustinbrett.github.io/x/](https://dustinbrett.github.io/x/) Source: [https://github.com/DustinBrett/x](https://github.com/DustinBrett/x)
C: That's awesome. One input for the resume. It is not zoomable. It is not easy to read. Maybe have a zoom in setting!
C: The Winamp skin gave me the nostalgia real hard.
C: What a great job. I really like the DOSBOX games in WebAssembly. Fantastic work! :)
C: I think you have now posted this in almost all of the programming subs that I follow
C: Thanks and thanks for the feedback. Indeed the PDF app is seriously needing UI and toolbar work.
C: I have another one in the skins folder, SpyAmp Pro. That's the one I used personally.
C: He’s built a cat 5 karma farmer. I unapologetically upvoted all of them.
P: A step by step guide to creating a Hamburger Menu in SVG & CSS. Learn how to create these kinds of animated menu icons
C: Article here: [https://uxdesign.cc/the-menu-210bec7ad80c](https://uxdesign.cc/the-menu-210bec7ad80c)
C: Great resource! Very clear and easy to follow! I hope to reference this in the future for a menu.
C: That was way more interesting than what I thought it will be, thank you
C: Saved. Thank you!
C: Nice. Also important to know [when not to lean on the hamburger. ](https://dandreifort.com/2020/08/16/hamburger-menu-breakpoint-best-practices/)
C: How ‘bout we stop making hamburger menus?
C: It’s become a convention at this point, which can be quite helpful. What do you suggest instead?
C: Yhe sure, let me just try to fit six page links next to each other on a mobile device that will look tremendous.
C: Hotdog menus.
C: He’s a vegan
P: Frontend Development Landscape 2020
C: Tangent, but its charts like this that make me think I should get out of front-end. Been doing this 15+ years and front-end has moved way further to the back of front-end. Not one thing in that chart about design, ux or accessibility. Personally I think front-end should have knowledge about design and user testing/interaction, but these days front-end is just a back-end javascript dev who can copy and paste CSS. Just ignore my rant - 'old dev yells at the cloud'
C: This is getting out of hand...
C: It makes me sad that the author places minimal importance on HTML semantics. Clearly not concerned about a11y. It’s also more of a “web app” map than “web site”.
C: > With modern frameworks and CSS-in-JS you don't need to worry about these anymore… OK, we're done here.
C: Has it changed at least a little bit since 2019?
C: I remember seeing similar charts when I started 3 years ago and thought "Nobody has time to learn all this!". And now I look at this and I'm happy to see that I know most of these things or at least crossed the path at some point of everything in there! If you're new to web development and feel overwhelmed by this chart, just do your thing and work on small projects that interests you. You'll learn most of these or read about them at some point as you advance your projects and meet new obstacles!
C: Doing front-end for 20 years now and I do only half of that chart. It's all about what's your specialty. I work with people that know every little thing about react or Vue but can't write decent semantic HTML or structured CSS. If someone needs a very specific complex layout, they'll always call me. I think the front-end scene needs a differentiation between pure front-end and JavaScript development.
C: Same, been doing it for about 13-14 years, and this chart isn't what I signed up for. Also, the number of must-have frameworks and tools that have come and gone before I can even get around to them boggles the mind. I've been finding it more and more satisfying to work on the backend.
C: And people wonder why imposter syndrome is so prevalent! This is bananas.
C: This chart event puts semantic html as optional and outside the seo spectrum.
P: I made an Among Us crewmate (impostor?) in HTML/CSS
C: [https://codepen.io/sinceris/pen/XWdvmPE](https://codepen.io/sinceris/pen/XWdvmPE) :)
C: this is awesome haha, it'd cool if there were online challenges to have people create graphics with just html and css
C: Idk man looks kinda sus to me
C: Guys it's red
C: I swear I’ve seen this post like 8 times today
C: Looks great!!
C: new challenge - make it without position: absolute😎
C: can I use it as an easter egg in my website?
C: CSS Battle
C: position: fixed. Done.
P: And all these years we've been putting quotes around attributes like some kind of as*hole
C: Just because you can doesn't mean you should.
C: Remember when we thought we had to type the elements in ALL CAPS?
C: Browsers are html soup parsers. It's part of why they're so slow. Handling with broken HTML, CSS and JS and still working. Because if browser X renders the site and browser Y doesn't, then people blame the browser; then browser adapt. Still; do the right thing.
C: Please don't.
C: They make the syntax highlighting better, but this has been around since the start of the html5 spec.
C: 99% of the time you don't need semicolons at the end of a line in JavaScript, too. But watch out in your PRs if you try to pull that one out of your hat.
C: I made a project without quotes and it made the code less legible. Everything becomes one big mess of characters without quotes.
C: Exactly. I once saw a JS solution to N-Queens that was small enough to fit in a tweet (back when it was 145 characters). It was completely, utterly incomprehensible but hey, it worked!
C: Exactly, imagine getting this piece of code from a colleague and it's all sloppy.... the horror
C: Guess it’s the old “be flexible about what you accept and strict about what you send”
P: Not to sound like a maniac but I rage inside when little nuances like this happen.
C: 90% sure its because its using text of a non monospace font to determine width
C: And then you try to fix it, you think its super easy at first, you mess up the code, get console errors everywhere. But then after many ctrl + z u solve it and it was very easy.
C: Looking at this one symptom, I can guess how shitty the underlying code is.
C: r/mildlyinfuriating
C: And probably using `padding` without changing the `box-sizing` to `border-box`. Remember guys: * Out-to-in: `border-box` * In-to-out: `content-box`
C: This boy needs some git branch
C: THANK YOU
C: This boy needs some version control
C: Seriously. Since I started using Git if I change my mind or break something I can just revert it to a working state!
C: Wait... What else did I do in this commit??? Ah well fuck it `git commit -am "Bunch of bug fixes"`
P: I made a Snapchat clone in the browser!
C: [Live App](https://towhidkashem.github.io/snapchat-clone/) [Github Repo](https://github.com/TowhidKashem/snapchat-clone) Just wrapped up my quarantine side project! I was really impressed by the Jira clone someone posted here a while back so I decided to make a clone of my own. I picked Snapchat because it seemed like it would be the most fun even though I never actually used the app before. Anyway hope you guys like it! :) **Tech stack:** React, Redux, Typescript, SASS **For testing:** Cypress, Jest, Enzyme For the filters I'm using a cool library called [Jeelizfacefilter](https://github.com/jeeliz/jeelizFaceFilter)
C: This is some amazing stuff man! Great job! Hoping I can come close to this level someday!
C: Hi neighbor!
C: Super talented dude! Great job!!
C: Great job, I have added links to your work (live demo + source code) from the README of Jeeliz FaceFilter: [https://github.com/jeeliz/jeelizFaceFilter#third-party](https://github.com/jeeliz/jeelizFaceFilter#third-party)
C: Great job man! This is so cool.
C: Super impressive 👏🏽 great work
C: Can you drop a link to the Jira clone you mentioned?
C: Amazing! You must be at a completely different level in programming.
C: hey, small world :)
P: Learn all about creating SVG morphing effects in React in my latest article on CSS-tricks
C: Article here: [https://css-tricks.com/morphing-svg-with-react-spring/](https://css-tricks.com/morphing-svg-with-react-spring/)
C: Great! I love it. I use framer-motion for svg animations, I'll check if they support path morphing.
C: This is so cool!
C: This is really handy to know ! Thanks man
C: MDN link is 404
C: Do people not love GSAP? I feel it’s soo underrated - it’s a shame
C: You can try some color picker extension in your browser. That's what I do always. Maybe opening this post with that extension can help you. Just pause the video I think it might work :)
C: Or capture a screenshot? Then open that file on photoshop
C: Hey this is awesome! Thank you for taking the time to do the write up.
P: My advice to new freelancers: Be like the plumber
C: “If I were a bank, you wouldn’t ask me for free money.” Also, they [don’t work for exposure](https://youtu.be/27EukoQrVMU).
C: I recently did a fairly big project, when I showed it to someone he told me I hope you didn't just charge $10,000 like a noob, I charged $7,000 and the project is estimated to be worth about $30,000, Lesson learned beginner and all if you deliver you have to get paid
C: Truth. So many need to get in this mindset. In the UK even the recruiters are guilty of trying to treat contractors like they are just temporary staff. It's a B2B engagement and it's really important that companies understand this. Those that flex on these principles OP posted set bad precedents for the rest of us. Be firm out there people, you're running a business.
C: [deleted]
C: See, i dont understand why other jobs are respected to where the customer won't even TRY to negotiate a rate, so why do most devs have to go through this? constant cheap customers that try to negotiate EVERYTHING?
C: I’ve got to be that “plumber” already.
C: What project was it if you don't mind sharing?
C: Raise your prices and you don’t have to deal with cheap customers.
C: Was waiting for a slap-bass intro and riff... Lay the pipes and get out of there.
P: My first project on my own so far! I know it’s not much, but it felt good not having to rely on a tut for help for once.
C: Hey mate that's awesome! Another *pointer*... Put cursor: pointer; On your button as a UX thing!
C: Looks great! Definitely understand that feeling you're describing
C: Rewarding when it all comes to life isn’t it? Congrats and hope it’s a good journey for you
C: I love how you play with your hover state. I still do it a lot, even after 7 years being a Front Dev 😅. If you really like animations, you can also learn about pseudo elements after and before, they are really interesting to use :) (for example, you could animate your menu border with it, from width 0 to 100%) Have fun!
C: Looks great! But throw a text-shadow on that type over the video bg or you won’t be ADA compliant in regard to contrast ratio.
C: Good work. Small tip. On your navigation, make sure that both the underline and the color have transitions with the same length. To accomplish this, I would go ahead and set "border-bottom: 1px solid transparent" on the element along with the transition rule for border-color. Then, in the hover selector (I would also add :focus with :hover btw, as that helps you tab through the site), all you have to do is set border-bottom-color to your color and it will animate. Congrats on the win! As an experienced front-end developer, these things still make me feel all warm inside still, so I'm right there with you.
C: Didn’t even realize that, whoops haha! Good catch. Thank you!
C: Thank you. (: it’s a great feeling; getting the grasp of things.
C: Yes! Thank you for that! I hope the same for you.
C: Thanks! Also appreciate the pointer. (: will update ASAP!
P: This effect has me hooked, becomes trippy after a while.
C: mobile users are not pleased
C: it looks like a simple animation on a 3d transform and box shadow right? Does look pretty cool
C: It‘s called Neumorphism if anyone wants to google.
C: WE ARE TAKING UI BACK TO DESKTOP BOIZ (i cri)
C: I don't think it needs any transform. Just box shadows.
C: Just a shadow. [quick demo](https://codepen.io/lujangba/pen/xxbXZPq)
C: my transition to mobile, :hover was the hardest to let go of.
C: Exactly, just `box-shadow` is needed. Although, you could add a transition for fading the `box-shadow` in and out.
C: TIL we can have 4 box shadows in 1 element. Thank you!
C: You can have as many shadows you want. In fact, it's a great way to create a good depth effect.
P: What is this design style called? I want to learn how to code this.
C: u can use generators tot provide you with the css needed. link: https://neumorphism.io/#55b9f3
C: Most of the time, I saw this style referred as neumorphism
C: Difficult to read?
C: Neomorphism. Basically material design with insets/bulges instead of elevation.
C: I have designed many dashboards in the past for different financial platforms, and over the years I have gotten a ton of feedback about having too much decoration on a purely informational view. Too many shadows are distracting in the real world. Not enough color contrast induces headaches or comprehension issues.
C: "I hate my end user's eyes and have never considered accessibility a day in my life." ? Jokes aside, the people saying numorphism? neumorphism. neomorjdosnd have it right
C: > neumorphism yeah that's it! thank you
C: Nailed it. UI design for people who hate accessibility.
C: Love a well executed bulge
C: Is this a well executed bulge or are you just happy to see me?
P: Created an online multiplayer version of the popular Cards Against Humanity game
C: This is amazing! I’ve wanted to do something like this but with a niche set of cards. Great work. Is this game online?
C: Wow this is awesome! I don't suppose you have any plans of posting it on github? :D
C: [deleted]
C: Thanks! So...yes it is online, but I haven't scaled it for production, meaning there's no concept of creating rooms, and sharing unique links with friends. So I could share it, but only 8 of you (max # of players) would be able to connect to the game at the same time. Maybe I can PM you the link if you're interested?
C: I’d like to build out something similar for a poker app I’ve made, but I’m not sure where to start when it comes to making a multiplayer experience. Could you link me the repo?
C: heyy I'd be really interest to play test it with friends if you would like me to
C: A simple NodeJS application using Socket.IO is pretty much all you need. Deploying the app to heroku is a breeze. You then use socket.io-client on the Frontend to connect to the server. Don’t mind the spaghetti code. Haven’t taken the time to optimize. You’ll be more interested in the backend repo. https://github.com/sdennett55/cards-of-personality-frontend https://github.com/sdennett55/cards-of-personality-backend
C: PM me a time that you’ll get together with the gang and I’ll send it along. I play tested it with some friends on Friday but I made some updates with bug fixes so would be great to know how round two goes!
C: Thanks! Backend looks pretty straightforward to me. Any reason I couldn't use Flask instead of Node to do the same? I've built little apps in Node but i'm definitely more comfortable with python.
C: Haven’t used Flask but I don’t see why not.
P: Built an app to solve the media bias in our country towards politicians. you can view every side of the story just by sliding a toggle!
C: How are you classifying the bias?
C: really cool! how do you determine the bias?
C: I wouldn’t use “extreme x”. That’s bias in of itself. A few hundreds years ago an “extremist” called Galileo said the Earth revolves around the Sun. He was labeled a heretic and put through a Holy Roman Inquisition. Twitter would have banned him. Just use perhaps “other”, “other left/right” Nice idea. Good job.👍🏻
C: Not the same in implementation but allsides.com is similar in concept if you are looking for inspiration.
C: i categorised them by data analysed by the Ministry of Mass Media on the news reporting of eight television stations. but yeah there is lots of room to improve. but this is start :D [https://economynext.com/worst-media-behaviour-in-election-history-election-commissioner-47087/](https://economynext.com/worst-media-behaviour-in-election-history-election-commissioner-47087/)
C: i categorised them by data analysed by the Ministry of Mass Media on the news reporting of eight television stations. but yeah there is lots of room to improve. but this is start :D [https://economynext.com/worst-media-behaviour-in-election-history-election-commissioner-47087/](https://economynext.com/worst-media-behaviour-in-election-history-election-commissioner-47087/)
C: done. removed them :) thanks
C: I see... So kind of specific to your country it looks, but yeah, it's nice practice if "someone else is judging", lol. Nice work, though - it's good looking. Hope you can take it further! Best wishes!
C: So you replaced them with icons? The icons are subjective. Do this. Take the human figure and make it lean left or right. For each end, the lean is greater.
C: Yeah I'm confused why the icon for the right is a phone.
P: Reddit gets its app to 50 million Play Store downloads, mostly by making the mobile web experience miserable
C: This website could get 50m app downloads if it had one...
C: mobile app... slightly less miserable. ffs not even trying. could i please copy text? links? even just choose to open them in my god damn browser???
C: Hahaha Pinterest, YouTube, Twitter this is becoming the standard strategy.
C: Reddit's video player is pure cancer and had been for years
C: i mean with the ad-layers fucking the template inheritance. what a cheapo way to harrass users into giving up data
C: [deleted]
C: Meanwhile, I'm over here using Reddit Is Fun, not noticing the difference.
C: HERE IS A SUGGESTED SUBREDDIT THAT YOU DONT CARE ABOUT... FOR THE SEVENTEENTH TIME! —Reddit app.
C: Apollo user here. It’s great until you click a Reddit link on the web, because it won’t open directly in 3rd-party apps.
C: You’ve got mail! Psych! Just wanted to tell you to go look at your previous comment and suggest a subreddit to you. Sucker!
P: I was wrong
C: Pretty much. Frameworks came about because people wanted a straightforward solution to a problem. Can't use em without a strong understanding of JavaScript. But they really do streamline things.
C: Learning the language itself before diving into frameworks is ALWAYS better than the opposite. I was the same as you a while ago and I guarantee that you'll be a better React developer that most just by understanding the language and understanding the actual problems that it is intended to solve.
C: i hate angular cause i met react before
C: Apart from the js purist thing, I think you did the right thing here. You have a basis now to better understand what react does for you and how it helps you.
C: Now try Vue
C: You weren't wrong but just went for a "should-have-went-through" way. Trust me, many new guys jump directly into React/other frameworks and spend their lives asking what's happening behind the scene.
C: Both approaches have their place. If you're rolling vanilla everywhere, sometimes you end up just reinventing a worse version of hammer. But the other end (react everywhere) is just as bad. Sometimes it's like "we need to write down the appointment date so I can stick it to the fridge" but someone rolls in with an industrial printing press. Personally I prefer Svelte and Vue. Vue has the most elegant syntax and larger ecosystem, but Svelte might feel more natural when just coming from vanilla/react.
C: True. Went from "slap some jQuery on it" to React with Typescript and it helped a lot when I took the time to actually relearn modern vanilla from the ground up.
C: Same for me. And also because Angular was forced on me by a client and it just made my job wayyyy harder.
C: i don't quite get this type of comments, i work with both daily in a big company, and i love both to the core. Both have their place, maybe some people just didn't need to work on a project that fits one or the other technology
P: Flowify - A new tab extension that I made. It allows for free flowing startpages to be created. You can create draggable and scalable text, images, searchbars, jokes, todo lists, etc. What do you think about it?
C: It can be found here: [https://addons.mozilla.org/en-US/firefox/addon/flowify/](https://addons.mozilla.org/en-US/firefox/addon/flowify/) The GitHub repo is here: [https://github.com/Etesam913/flowify](https://github.com/Etesam913/flowify)
C: Love it!
C: fucking awesome
C: Amazing! What did you used?
C: Really fucking cool dude!
C: Very creative!
C: This is good
C: Nice I like it, might I suggest modifying the notes thing to looks like the color note in windows apps)) Will be an awesome extension of available on chrome also)) write a note or daily plan and while working instead of opening new app in Windows just one opening new tab o e already open chrome is super handy)) Thanks bro I loved! Great job
C: Wooh....great job! I am definitely gonna try this!!!
C: The libraries that I used were react, framer motion, and styled components.
P: Particle text effect with randomly generated images from a sprite sheet (+ source code)
C: I took certain % of particles and replaced them with images at random coordinates in my custom sprite sheet. Thought it looked interesting, what do you think? &#x200B; Particle text tutorial with more examples: [https://youtu.be/XGioNBHrFU4](https://youtu.be/XGioNBHrFU4) &#x200B; Live demo: [https://codepen.io/franksLaboratory/pen/ZELLgbJ](https://codepen.io/franksLaboratory/pen/ZELLgbJ)
C: Very cool. I can almost feel a game emerging from it. Something where you have to remove the flowers from the sludge without disturbing the surrounding areas. **Only critique** \-- why not run that image sprite through an optimizer? It's 1.5MB! Just running it through tinyPNG dropped it 85% to [229KB](https://i.imgur.com/V8KrKaO.png)
C: Amazing 👌
C: Cool man.
C: That looks amazing! Reminds me of a project I made a while ago where little circles filled in some text... I think i accidentally deleted the project tho :( Just out of curiosity, how did you store the letter shapes? I looked though your code but couldn't figure it out...
C: Love this!
C: I love it!
C: Nice! Your demos are really helping me learn, thank you so much for all you awesome content!
C: I also linked tutorial where I explain everything. I write text on canvas and scan my canvas for pixels, filter them for transparency and use the opaque ones to create a set of coordinates for my particles. It works with images as well.
C: Very happy to hear that it helps you, thank you for letting me know :)
P: The feature we've all been waiting for, bois
C: Thanks for the good laugh, nice job
C: I hope that hand has an alt tag for screen readers!!! /s
C: A fine example of an “ultimate machine” https://en.wikipedia.org/wiki/Useless_machine
C: Bruh
C: Thank you vey much, and you are welcome
C: It does, and is, unsurprisingly.... "hand" :)
C: Hahaha well played
P: SYNC - Watch youtube in sync with friends ( powered by Vue.js )
C: Just curious. What happens if a video enters buffering state?
C: id suggest changing the url to the instance id when you're the first user
C: Check it out ! [https://sync.rocks/](https://sync.rocks/)
C: [deleted]
C: How bad is the lag problem that this video demonstrates? Every time you pause does the time discrepancy get larger? Also what if someone pressed the same button on both connections at the same time, or if they pressed different ones?
C: I'm so glad more and more people are using vue, such a simple yet powerful framework!
C: great stuff. any possibility to checkout how u did that?
C: It will get out of sync. If people use it we could work more on the synchronization system for the next iteration
C: Desired features: * Accept direct link of video; if not I have to go and input the id of the video in the search * Allow fullscreen; if full-screen proves complicated for some reason then maximize to utilize most of the viewport. * Link to share should be more clear I _personally_ would drop the concept of a playlist... or more aptly, my MVP would be to create just a "wrapper" of a youtube video that guarantees synchronization among viewers. You go to the place, you put the url of the video you wanna watch, the url of the page changes immediately to reflect it (can be the same id of the video) and you get a little text input also giving you the url. You share the video, that's it.
C: Youtube's api quota sucks. We build a python program to grab the information from the results page. It's open source [https://github.com/andrscyv/fast\_youtube\_search](https://github.com/andrscyv/fast_youtube_search)
P: SVG Crop - Remove blank space from around any SVG instantly.
C: If (white space) { return gitOuttaHere; }
C: I've been working on this little side project the past couple weekends. Any time I found a neat SVG for a web project online, there would always be some arbitrary amount of baked-in white space that I had to account for in my layout. This tool crops the SVG to just its contents. You can download the cropped file(s) or copy the markup to clipboard. That's really all there is to it. Launched it on Product Hunt less than an hour ago! [https://www.producthunt.com/posts/svg-crop](https://www.producthunt.com/posts/svg-crop)
C: Bookmarked.
C: Maaan u are awesome
C: Yes this is what i need. Always used illustrator to solve this issue but this looks quick
C: Love it. Normally I have to do it manually in Illustrator, this saves that whole step. Thanks for making and sharing with us!
C: How did you get my source code?
C: Does it also calculate/fix the offset on `<g>` tags and combine them as needed? That's probably my biggest complaint with designer generated content (usually Illustrator I think). Or does this just use the calculated bounds of the root elements? I've manually cleaned up a few SVGs recently that were something like: <g transform="translate(48, 40)"> <g transform="translate(-48, -40)"> <...> </g> </g> I meant to automate that someday, but I just haven't had the time or energy to start it.
C: I believe so, I threw some weird SVGs at it with transforms like those and it seemed to work. It ignores `g` elements in the calculations and just does a getBoundingClientRect on all of the "physical" svg elements: `path`, `rect`, etc. The result of that updates the `viewBox` of the svg
C: illustrator exports svg pretty well none of that offset stuff, you do need to set some options tho. What you have there looks like an XD export or some sort of plugin.
P: HTTP status codes as emoji.
C: * GET - 🏃 * POST - 📬 * PUT - ✏️ * DELETE - 🗑
C: Thanks I hate it
C: What about 418 🍵?
C: 405 🙅‍♂️ 409 ⚔️ 411 🍆 420 🚬 423 🔒 429 🙇‍♂️ 451 🔥
C: 451 🌡️
C: why
C: PATCH ✂️📝
C: OPTIONS - 🐈 🐩 🐍
C: The greatest of all status codes
C: why not
P: Daily JS method for beginners: console.time and console.timeEnd
C: Yep, love this little feature. Some of my code was taking 60s+, after using better algorithms and simplifying the flow I got it down to a few ms. Kept a spreadsheet with the times as calculated by the console. Super handy.
C: This is effing brilliant. Better than when I learned you can wrap refs in brackets inside console.log to see the key names in the console along with the values.
C: is this an actual accurate way to test the timed execution of a function?
C: I got frustrated with the timers and ended up using Date.now() throughout my program to measure exec time. Will have to try again after being made aware of console.time() again.
C: Extremely useful to improve the performance of your app and measure the efficiency of your functions. Brilliant
C: Seems like someone couldn't await it.
C: You can what now??
C: const someVar = someFunc(); console.log({ someVar }) faster than writing console.log('someVar: ', someVar)
C: This is actually just creating a new object with the same key as the name of the variable. It's relatively new syntax: ``` // Shorthand property names (ES2015) let a = 'foo', b = 42, c = {}; let o = {a, b, c} ``` https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#:~:text=An%20object%20initializer%20is%20an,data%20types%20or%20other%20objects.
C: 🤯
P: Handy list of CSS generators
C: Check out https://shadows.brumm.af/ to create fancy smooth shadows (disclaimer: i am the author)
C: This [SVG Filter Generator](https://yoksel.github.io/svg-filters/#/) is pretty nifty
C: [Ceaser](https://matthewlein.com/tools/ceaser) is a pretty handy animation easing tool.
C: Here's another good one that has a bunch of stuff: https://omatsuri.app/ Really smooth gradients: https://learnui.design/tools/gradient-generator.html Cubic Beziers: https://cubic-bezier.com/#.17,.67,.83,.67
C: https://getwaves.io/ for those trendy footers that I see on a lot of tech sites.
C: For nice backgrounds with gradients i use this: [https://www.gradientmagic.com/](https://www.gradientmagic.com/)
C: And [Get Waves](https://getwaves.io)
C: aw man, this one is super neat. i've had a version of this where the filters are implemented as patches in a node-based programming setup. you could connect output channels to input channels and configure each patch. It needed maybe like two more weeks to finish and polish it. Unfortunately, I lost the code :(
C: I use [Easings](https://easings.net/) for this, I like it a lot.
C: [I did find something that sounds fairly similar to what you're describing fairly recently.](https://svgfilters.com/) Although it seems a bit buggy in some parts, and weirdly restrictive (or not setup properly for some properties), and for some reason can't handle `FeBlend`, which is really handy to be able to use.
P: I hate email development
C: Everyone does. It's a mess.
C: Have you tried MJML. Helped me.
C: I had to do 1.5 year of full time email development and it was awful , not just the job itself but the position that it puts you in. I wasnt exactly a part of developement team and i couldnt ask for a raise because people felt that this was a really easy job , that any fresh programmer can learn within a month or two and they were right. It is a menial job , not exactly hard but demands a great deal of attention to minor insignificant details , and the worst part is you cant explain these details to management, no one cares about how outlook 2010 (120 dpi) alters your code and enlarges all text size by 2px so when you try to explain why the mail looks fkd up , it just comes of that you are making an excuse and doing a poor job. So just learn what you can and if there any opening in your company move there , mailing is not something you want to do full time for more than 6 months.
C: The 90s called. They want their `<table>` layout back
C: If it would just let me use internal CSS instead of inline CSS... I can work with the "make everything a TD so Outlook will actually style it" but the code gets so messy and changing existing layouts is hell. Oh, and buttons. Fuck Outlook again for not being able to put padding on a button.
C: On a similar note, even simple HTML email signatures can be hell * "hey, the signature looks great, how do I add it to Outlook 2007" * "thanks for the 2 page instruction, but the logo is not showing up when I send it to \[insert obscure mail client\]" * "hey, I got a new computer, pls help me set up the signature on Outlook 2010, it's not working anymore" * "Gmail on IE11 is cropping the logo by 1px, fix ASAP" * "something happened with fonts, why is my phone number blue and underlined on \[insert another obscure mail client\], fix that" ...all the while me working on a mac, being forced to run a VM with windows and torrent-sourced old versions of Outlook Not fond of those times at all
C: Hello Darkness My Old Friend... **Fun Fact:** Don't build Mail-Templates with React! ^((Really, don't! It still haunts me that I even tried that))
C: There is also Zurb Foundation
C: Seconded. Still not the best, but MJML makes it much less painful
C: There are tools that let you write CSS rules and use IDs and classes, then the tool will inline the CSS for you. e.g. https://templates.mailchimp.com/resources/inline-css/ So much better than having to write it all inline.
P: How to prepare for a Front End interview
C: I just finished a solid 3 months of (mid-level) job interviews and onsites. Out of 7 or 8 onsites ( including Google and Amazon, and yeah I know, definitely work to be done on my weak onsite performances), 15+ tech phone screens and a few take home tests I got... * Almost no React questions, maybe 3 or 4 questions **total**. (I listed it as my strongest framework and almost all of the roles I applied for listed React as a primary technology) * Almost all of the onsites were **entirely** in vanilla JS using DOM manipulation. * **VERY** little around CSS knowledge questions * I definitely saw Leetcode but only in FAANG interviews/onsites and they were all tagged and high occurrence (use the sort options on Leetcode) Take aways: * Stop whatever you're doing right now and switch to Vanilla JS. * Depending on your level get into system design. * Culture fit questions are charisma checks. If you can talk to someone, stretch the truth about your previous experiences at work, and just all around seem like a decent coworker then you don't need to worry about it...if not spend 75% of your time practicing talking to strangers instead of coding.
C: Thanks for the wall of text :D
C: As a recent graduate struggling to land a good job, this post is a real gem and gives my prep a much needed direction. Thank you for taking your time out to help others :)
C: Sounds like I would do much better in those interviews than on the ones I actually been to. Last one was for frontend dev, but it required writing basically a database/repository class. I did it, but not the most performant way I guess, and was dismissed. I WANTED TO BUILD VISUAL THINGS, it's what your job description said I would do 🤡🤡🤡
C: This is soooo great i love it thanks
C: I appreciate this !
C: Thank you so much for this
C: Thank you for putting this together!
C: >get into system design. I am a books guy . Can you suggest a good book on that?
C: >Stop whatever you're doing right now and switch to Vanilla JS. Please. I preach this all the time. People aren't learning Web, they're learning React. I have trouble finding people who can work on my projects because so few actually understand pure HTML and JS. The Frameworks make us lazy. They are abstractions that try to do the architectural work for you. It makes sense of making web pages for simple sites, but when you're talking Web as a Software Application environment, then everybody already has their paradigms based on decades (literally) of software development. Learn your Model-View systems. Learn the basics of the View lifecycle (create, paint, destroy). Yes, they are confusing at first, but keep trying. Then realize your favorite framework is just a catch-all attempt at doing all that for you. We've been implementing these same concepts since the 90s. The JavaScript community is so locked into their own specific ways because they're birthed from Web as Media. So many concepts come from "I want to build many webpages faster." That's how you get into the trap of 500 dependencies which no real software development practice would ever allow. The catch-all frameworks can be useful, but mostly for throwaway projects that you don't care about locking yourself into one framework for the lifetime of the project. If you are looking for a job, don't think we're going to hire people to make a 4 page website for marketing. We won't. But we will hire somebody who will work on our applications, current and future. But you need to be flexible enough to work with any system, and that means core technologies. That doesn't mean learn all the Frameworks. It means learning how they're all the same, taking different attempts at cracking architecture. So when an employer asks you to do X with Y framework, it'll be "Sure, doesn't matter what it is." This has been the process for decades. Now it's easier because we're all moving to one language: JavaScript. Before you had to juggle your C-based languages: Java, C++, C#. Now we get to do frontend and backend in JS. But if you're doing frontend, then learn your `Window`, `Document`, `HTMLElement`, `EventTarget` from MDN. Learn your WCAG responsibilities. Learn your WAI-ARIA practices. That won't change and no long-lived project will expect that to disappear.
P: Particle text in vanilla JavaScript that can be used for any website
C: I made a step by step tutorial here [https://youtu.be/XGioNBHrFU4](https://youtu.be/XGioNBHrFU4)
C: Happy cake day 🎂🎁
C: Wow!!
C: Great work Frank!
C: This is awesome!
C: We're back in 2010
C: I loved it! 🤩 The only problem I have with this it's that it remembers me about Flash 5, or maybe I'm too old.
C: Thank you :)
C: No worries hope u have a good evening ☺️
C: Thank you
P: What the filter? A visual playground to JS array & object transformations
C: **Live:** https://renato-bohler.github.io/what-the-filter **Source:** https://github.com/renato-bohler/what-the-filter Feedbacks are appreciated :)
C: Dude this is a great visualisation and nicely executed! For some reason on Firefox 78 the code block on the right side increases its height constantly? Chrome and Safari are okay.
C: Super helpful way to see it in action! In my iPhone XR the submit button appears over the edit code block; and after running several submissions the graph view stopped displaying (or was offset enough the code flow chart was offscreen and unfindable).
C: Id love to have it the other way. A game where it gives you arrays and you have to provide the good map/reduce/filter for each step.
C: This is really neat. Great job!
C: What an amazing post!
C: Looks great!
C: Love this tool, especially for reduce!
C: This is beautiful, nice job!
C: I really like the implementation of removing duplicates
P: Couple more particle experiments with vanilla JavaScript + source code
C: Pixel Fire [https://codepen.io/franksLaboratory/pen/XWjBPOx](https://codepen.io/franksLaboratory/pen/XWjBPOx) Pixel Rainbow [https://codepen.io/franksLaboratory/pen/MWjBPgB](https://codepen.io/franksLaboratory/pen/MWjBPgB) &#x200B; tutorial & more examples: [https://youtu.be/w2-0bNVpZUs](https://youtu.be/w2-0bNVpZUs)
C: Although I'm a beginner, I subscribed to your channel frank. You're doing awesome, just keep going 🤟
C: Have you tried with some sort of boid simulation? Might be fun to see the result of something like that
C: That looks amazing, good job! If someone asked me to code something like that I'd die xD.
C: This is sexy.
C: This is really cool.
C: [removed]
C: Hi, it doesn't take much time to get from beginner to being able to build effects like this, if you study hard enough. Good luck with your learning journey
C: It's not that much code and when it's explained there isn't that much going on. It just might be intimidating at first sight :)
C: Thank you, glad you liked it :)
P: Drag&Drop Sandbox fro WebComponents
C: [removed]
C: Nice! So we are slowly getting back to Visual Basic. I like it.
C: Hello there, I would like to share a small project I have been working on. It basically extracts a list of components and their respective properties, events and slots definition and creates an environment where users can drag and drop the elements into a canvas a generate pure HTML5 DOM trees. [https://kor-ui.com/sandbox](https://kor-ui.com/sandbox) The demo found on the link above showcases the [Kor UI](http://kor-ui.com) library, but that is easily replace-able with ANY web-components library. To try it out: 1. Drag elements from left pane to center canvas 2. Edit the properties on the right pane 3. When done, click on the '<>' icon on the top-right functions bar Any suggestions or feedback are welcome!
C: The list of components comes up blank for me in Safari.
C: On the component list (sorted alphabetically right?) kor-button is below kor-drawer now. Nice tool for quick prototyping.
C: How did you create this? I want to do something similar but Idk which technologies should I use. Any advice?
C: I am glad you found it useful. The goal is exactly to reduce the repetition of these tasks by encapsulating styles, markup and behavior of common UI elements into web components that are easy to set up and customize. This encapsulation could reduce a lot the complexity of your front-end project since you would need to handle mostly business logic and data binding.
C: Back to Basic
C: Hi, this is pure standard drag & drop API and DOM manipulation using also plain javascript (or typescript). I would recommend reading the docs here. [https://developer.mozilla.org/en-US/docs/Web/API/HTML\_Drag\_and\_Drop\_API](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API)
C: Thanks!
P: Isn't it time for us developers to all drop IE support this year?
C: Microsoft is ending mainstream support in August, 2021 so it's a perfectly valid reason to stop supporting IE11 for good. Microsoft will not support it either for products like Microsoft 365 and Teams. https://death-to-ie11.com/
C: At the beginning of this year my CTO gave me the guarantee to stop testing things in Internet Explorer and simply ignore it if there is an error with a client. **This has been a great year for me.**
C: A lot of major webapps like youtube, twitter, trello etc.. have dropped support for IE already. IE use has also dropped a full 1% this last year. Honestly if these IE users can't figure out how to switch browsers when shit is broken everywhere, are they going to be smart enough to use a payment form anyway?
C: When do we stop supporting Safari 13? That was the only special needs browser in my last project...
C: For my personal projects I do not support IE. Because sod it. I don't care about the handfull of users I am losing. But for big official projects, I have to go with the users stats and if they say they need IE support then I have to add it.
C: I think it's a homage of some kind to those that had to perform javascript and css wizardry in order to support IE6/7/8. The most recent IE also is poo, but you have no idea just how lucky you are not to have to deal with the IEs of the not-so-distant past.
C: This should be the top comment. This year is the year, good riddance.
C: The last remaining IE users are not a cohort of boomers who can't use computers properly and don't know how to switch browsers. It is corporate machines issued to users with strict controls on which software they can install on those machines. Government workers, some banks etc.
C: I'd guess a large majority of the IE userbase is legacy corporate systems. Some places dont see value in updating and lockdown the devices, forcing their staff to use IE.
C: If your job is to provide a (probably internal use only) site that supports IE11 because that's what the users _primarily_ have (or can only have), then of course you have to. In the real world, however, these same users will have phones / personal laptops that you can cheerfully ignore IE for. The real argument here is management saying "oh, we need to support it" for a site on the open web because of a certain number of visitors that are seemingly more important than the 98%+ who are on evergreen. That's when you compare sales (income) from this group to the cost of developing and maintaining the site to cater for them. A site I work on is visited mainly by mobile users. They also happen to mainly be iOS users (of various ancient versions, grr), but whatever. The usage by IE11 is ~2%. I doubt very much that the income they generate is worth the continued expense. _But I need to prove it_, and in a way that makes sense to higher management (pretty pictures and simple graphs). _That_ is the true battle, and actually getting hold of that data can be the trickiest part.
P: So I started taking online classes since quarantine, and this is one of the projects I submitted to freeCodeCamp using HTML and CSS. Feels good making something from scratch. I still have a lot to learn like making responsive sites and JS. Maybe this can be more than a side hustle.
C: Don’t stop. I would say look for design inspiration of similar templates and emulate them. These red border boxes look straight out of 90s.
C: Nice job!
C: Used the same stock photo of the hands for a project I just did!
C: Which online classes did you take?
C: Nice work, mate.
C: What sites would you recommend?
C: I bought a course bundle from stackskills but I realized that most of the lessons are a bit outdated so I augment it with lessons from freeCodeCamp and reading documentations from MDN and W3Schools.
C: I stumbled across this one a few days ago: http://species-in-pieces.com/# Inspiration only! This was built by CSS animation masters.
C: He means just get in the habit of being curious. When you visit a cool site, hit F12 and dig in to see how they did something.
C: Hm. Def need to have that habit of digging into the sites I find awesome.
P: My brother and I made the first composable CSS animation toolkit
C: My brother and I were getting annoyed adding CSS keyframe animations to our side projects, especially since for most basic animations the majority of it is just boilerplate setting up the animation name and changing one transform property. We realized that by adding CSS variables to a keyframe, we could use just one meta-animation and modify each transform property as needed. Then we created utilities to easily set those variables, making creating a custom animation as simple as fade up left! Since each CSS variable controls a different property of the transform in our one master keyframe, the utilities can be mixed and matched to create completely unique and customizable animations with no extra code or boilerplate. It's like Tailwind for animations, but with far more customization! We provide a Vue plugin that wraps the standard Vue animation components to make it easy and familiar to use, but you can also use it for React (still WIP) or plain HTML/CSS projects. We also had a lot of fun designing and building the docs site and examples. They are built with [Gridsome](https://gridsome.org/) and you can [check out the source code here](https://github.com/ingram-projects/animxyz). We added some fun examples and interactions we hope you find. Let us know what you think of the toolkit and the docs! We want to make AnimXYZ the easiest and most powerful way to create CSS animations.
C: This is great. I didn't know it but that's exactly what I wanted. Will definitely give it a try
C: This is so cool! Projects like yours help promote a more interactive browser experience. Thank you.
C: This seems like something you'd expect to be a library already.
C: Jesus, I can tell you guys put a lot of love into this library! I spent more time than necessary just toggling buttons. I'm a fan of the Tailwind-esque approach and I'm game to try a weekend project with this! I might hold off until Vue 3 is supported, though.
C: This looks extremely extremely cool! Well done! Will certainly be looking into using this. Especially appreciate the framework integration!
C: How did you do the xyz ray on and off?
C: We also were surprised nobody else had taken this approach yet, but it's probably since CSS variables are still relatively new and people haven't fully realized the power they have yet. Some libraries like Tailwind or Animate.css do actually use a similar technique of utilities setting CSS variables you can then override, but nobody took it to the extent we have with animations specifically.
C: Thank you so much! It really has been a passion project for us. Vue 3 support is coming soon!
C: That was a tricky one. The expanding invert effect is actually two divs with `backdrop-filter: invert(1);` expanding and one has a delay on it. That way the second invert cancels out the first one making for a donut effect. Check out the source code and search for `xray` and `xyz-xray` in the docs code to see how it is built. We also use a before element with `content: attr(xyz);` to automatically show each element's XYZ utilities on hover.
P: Rotating an image recursively. One of my favorite algorithms!
C: Love it. Source?
C: Neat that you can figure out the number of pixels in the image by counting the transformations. 7 transformations means 2^7=128 pixels on each side.
C: Wow. Brilliant. Got my eyes rotated tho.
C: Edit: [Source is here!](https://www.reddit.com/r/compsci/comments/j0copz/recursive_image_rotation_animation_source_code/) Yeah, give me a day or so to make the code more readable and I'll put it up on github. I'll add a response here. [I first heard about the algorithm in this book if anyone would like to think about it more. Exercise #29 on the page I linked.](https://jeffe.cs.illinois.edu/teaching/algorithms/book/01-recursion.pdf#page=40)
C: Put the code on GitHub in whatever state it is. You can always push a more readable version later. This obsession with only putting pretty code on GitHub keeps usable code away from people who might be able to use it for longer than it needs to. Plus people often never get round to prettying their code up and it never makes it to GitHub. Code on your computer is useless to anyone but you, code on GitHub, no matter how messy, is not.
C: Hey, mad respect for macgyver code that isn’t pretty but gets it done
C: what is the name of the book
C: Plus we can help make it prettier! And to recruiters they usually only see that it's your repo not that you did x or y commits to improve it from the MVP
C: It's Jeff Erickson's book titled "Algorithms". He has it on his website for free. [https://jeffe.cs.illinois.edu/teaching/algorithms/](https://jeffe.cs.illinois.edu/teaching/algorithms/)
P: Happy birthday Alan Turing!
C: “Father of computer science, mathematician, logician, wartime codebreaker, victim of prejudice”
C: [removed]
C: The man, the myth, the legend!
C: Makes you think about how much further we would be in all fields without prejudice and hatred.
C: [deleted]
C: [deleted]
C: I have only ever seen two pictures of this guy. What a sad end he had and what an indictment of that judgemental society.
C: [deleted]
C: Sometimes it is the people no one imagines anything of who do the things that no one can imagine. Happy birthday Alan Turing!
C: First time I heard about Turing was in CS class. Then I learned about the WWII stuff. Then that he was gay, and how he was treated by his own government. Then I was like WTF? He should have died as an old emeritus faculty member, not alone in his apartment after losing everything at the age of 41.
P: Logic gates using liquids
C: Imagine of someone actually build a simple processor out of this. Extra points if you can actually interface with a computer ;)
C: TIL plumbing is probably Turing Complete.
C: I dunno really anything about this but I heard microfluidics logic is becoming a thing, and manipulating turbulences can apparently be helpful https://twitter.com/nature/status/1188442235135766530?s=09
C: Anyone wanna do this with pee?
C: That looks great. But I dare you to negate :-D
C: Already been done before: https://en.wikipedia.org/wiki/MONIAC
C: You need more than logic gates for Turing completeness. This is functional completeness.
C: **MONIAC** The MONIAC (Monetary National Income Analogue Computer) also known as the Phillips Hydraulic Computer and the Financephalograph, was created in 1949 by the New Zealand economist Bill Phillips (William Phillips) to model the national economic processes of the United Kingdom, while Phillips was a student at the London School of Economics (LSE). The MONIAC was an analogue computer which used fluidic logic to model the workings of an economy. The MONIAC name may have been suggested by an association of money and ENIAC, an early electronic digital computer. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&message=Excludeme&subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/compsci/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
C: MONIAC uses fluids for everything EXCEPT simple logic.
C: That’s analogue computer. It’s not based on digital logic gates.
P: I made a maze solver using OpenCV Python, the result is far from perfect, with source code.
C: Wow this is impressive
C: A* search?
C: I was promised there is source code
C: thanks everyone, I wasn’t expecting this much reactions when i woke up this morning!! I will try to answer your questions by explaining how the algorithm works and how I kind of cheated a little to make it look this fast :D for each frame: \- apply a mask (really important especially during this pandemic) on the frame to detect only the maze (the maze has to be dark and the background light) \- find the 4 corners of the maze (the maze has to be rectangular) \- apply a perspective transform on the mask where the 4 corners have been found (it will result on an image of SIZE\*SIZE where SIZE is a really important parameter for the speed of the code) \- dilate the wall (it will help to reduce the width of the path, so it will speed up the solver) \- if it’s a new maze: \- compute the solution (A\* pathfinding) \- elif it’s the same maze as the previous one: \- apply the same solution as before in this case I applied this code to a video that i already had, so I was able to skip the time of computation by just going to the next frame so it didn't appear on the video but when i used the code 'in real time' it takes a few seconds to compute the solution. &#x200B; Sorry I forgot the post the code yesterday, here it is: [https://github.com/pibraap/MazeSolver](https://github.com/pibraap/MazeSolver) (I will detail the read me soon) (PS: I'm just a French guy who codes for fun so the code is certainly not optimal, if you have some advice on how to optimize the code or how to improve my code in general, I would receive them with pleasure!)
C: Can you add a jump scare to this?
C: I want to say amazeing! ..Now make it find Waldo.
C: Restaurant placemats hate him!
C: What really fascinate me is the speed. Must be some clean code aswell!
C: thanks!
C: yes!
P: Logic gates with fluid, part 2
C: I made this with [Blender](https://www.blender.org). Here is [part 1](https://old.reddit.com/r/compsci/comments/dnv7wj/logic_gates_using_liquids/)
C: Slurm
C: Awesome! I would love to see a "Full Adder" made out of these next. A full scale IRL automata that plays Tic-Tac-Toe would make a great exhibit.
C: Is there any chance you could give a link to somewhere you can post this on (Like youtube or something) so I can access these videos a lot more easily- they're really helpful for me (GCSE computer science)
C: Challenge: make a meatspace version.
C: Did the physics really work/simulate the proper outcome or did you do some manual finessing any time one stream interacted with another?
C: 😎🥤
C: Not the OP but I’ve worked extensively with blender fluid dynamics, you’d be surprised how accurate it is. OP likely didn’t have to do much tweaking, if at all to get the fluids to interact correctly, you mostly just set up the initial conditions and let the fluids run on their own
C: 🐌
P: [Project] From books to presentations in 10s with AR + ML
C: It's so good my immediate instinct is to question if it's real. I would like this in my phone.
C: Very cool, how does it find the subject of the photo you’re taking?
C: Lol you just crossposted the most popular post on r/MachineLearning
C: You fucking genious this tech worked out more is worth at least millions.
C: Can it do text too?
C: Really interesting idea and good execution. I like it!
C: The source code is in the comments. I think you should be able to run this.
C: It's probably doing [foreground segmentation](https://www.pyimagesearch.com/2020/07/27/opencv-grabcut-foreground-segmentation-and-extraction/).
C: Yeah wtf I remembered seeing this months ago!
C: Access requested, thank you!
P: An engineer wiring an early IBM computer.1958
C: How the hell do they know which cable goes where?
C: Fun fact : the modern version of what this lady is doing is programming, not building a computer. The computer in this case was programmed by connecting different input digits to outputs or functions via physical cables; that is, you changed what the machine did by changing the wiring. Modern computers rely on Von Neumann architecture, with a shared memory for both programs and data and the program to carry out loaded into this memory. We progressd a hell of a long way between 1940 - 1970. Since then, you could argue that it's just been refinement and abstraction of the earlier ideas.
C: For anyone who is interested, I found [an article](http://www.righto.com/2017/11/identifying-early-ibm-computer-in.html) that explains the photo a bit more.
C: "Looks just like my code!"
C: What my parents think I am doing when I tell them I assembling my own computer
C: Now I don't feel so bad about the cable management of my PC
C: My guess is if she were installing it, it wouldn't already be wrapped to the ends. I imagine she is removing the wiring. In the case I'm wrong and those wire bundles are immaculately planned such that they are measured and wrapped at a separate location then installed later then I'm sure there is a plan. it looks like every branch of the cable bundle is long enough to fit where it needs to go. In a modern example, it's surprising how easy it is to replace a 48 port switch, the network cables form a memory of where they were and you can get them mostly back home after a unit replacement.
C: > How the hell do they know which cable goes where? If you plug it in and smell smoke, it's the wrong plug.
C: Thanks for posting that link, an interesting short read with a proper rabbit hole of links to get lost in later.
C: Based on another photo I saw, IBM carefully constructed wiring bundles separately, with the wires grouped and cut to the proper length. They'd have a big board where they could fasten down the wires while constructing the cable. The wires are probably also color-coded and tagged to help with installation. (I don't know about tabulator construction specifically so I'm not certain on this.) In the 1950s, IBM started using wire-wrapped computer backplanes that were wired by machine. This made manufacturing much easier and more automated. Later, printed-circuit boards were used.
P: To what degree Would Augmented Reality change the way we study math?
C: [deleted]
C: There's no real benefit to this that you can't get with a regular computer screen. Yes, this absolutely has a "wow factor" there is denying that, but it's not going to help you that much in a working or academic environment. What I fear is that some overpaid administrator will see this shit, and blow their entire school budget on very expensive headsets for their kids instead on the basic things they need to learn - namely better paid teachers and basic school supplies. Everyone in the US complains that teachers aren't paid enough, but if you look at how much we spend per student, that number keeps on going up. That's because since the 80s or so, we've been adding more and more administrators who have gotten in the way of doing what the core function of a school is - namely to teach kids. These administrators find typically useless pet projects which add enormously to the cost of educating our youth, but doesn't actually add value. They are the "middle men" of the corporate world, while the people actually doing the real work, the teachers, get shafted.
C: I see it being a gimmick. How often, prior to multivariable calc, are students setting things in 3D? Heck, even after then that goes away. This would be 95% useless for: - (most) euclidean geometry - algebra (high school kind) - algebra (groups/rings/etc kind) - (most) real analysis - graph theory - theory of computation - game theory - combinatorics - number theory - set theory - ... And so on. That's basically everything. Topologists and calc III students will love it though!
C: Sounds like you're describing the expensive graphing calculators that were mandatory at my high school back in the day.
C: As a visual learner, I think it would be great for physics and chemistry. Showing molecular processes in action would be great, especially if interactive
C: [deleted]
C: 14 years later I still have and use my TI84 from time to time. I used it heavily throughout university and my PhD. For me, a $112 investment made in highschool on a calculator paid for itself again and again.
C: Check r/VisualPhysics and r/VisualChemistry. Cheers!
C: Moving from high school to Uni we were not allowed to use our TI84 but only non graphic capable ones ... I love my Casio though
C: If you're doing any math focused degree you quickly move past a point where having your calculator show you a graph becomes any help.
P: Some more fun with recursive image transformations. Flips and rotations! Source code in comments!
C: The image keeps Turing and Turing
C: That thumbnail is gold
C: Source code here: [github.com/rvizzz/rotate](https://github.com/rvizzz/rotate) [Fun application of syncing this animation with music!](https://twitter.com/r_vizzz/status/1311425342310092800?s=20)
C: I love recursive content
C: Reminds me of visual representations of sorting algorithms.
C: Goddammit I used my free award earlier
C: This comment is way underappreciated
C: /r/nonose
C: [I love recursive content](https://www.reddit.com/r/compsci/comments/j3hxzm/some_more_fun_with_recursive_image/g7c61wh?utm_source=share&utm_medium=web2x&context=3)
C: [I love recursive content](https://www.reddit.com/r/compsci/comments/j3hxzm/some_more_fun_with_recursive_image/g7c61wh?utm_source=share&utm_medium=web2x&context=3)
P: On popular demand, the Spiral of Theodorus is now back in dark mode!
C: I remember having to calculate how many triangles there could be before an overlap in a math test...
C: Looks interesting, is there a practical use for this?
C: Ok, so now try to draw it with CSS only
C: How do you solve that?
C: It would probably sell a few t-shirts
C: You can construct the square root of any positive integer with a ruler and compass
C: with a for loop
C: Just off the top of my head, sum over the natural numbers from i=1, arctan(1/sqrt(i)), until the sum is greater than or equal to 360 degrees or 2pi radians, depending on your calculator settings. Your answer is one less than the value of i that resulted in the overlap. from math import * val = 0 i = 1 while (val <= 2*pi): val += atan(1/sqrt(i)) i += 1 print(i-1) Result: 17 Edit: added Python
C: I wouldn't be able to do it manually (i.e. without a tool such as WolframAlpha), but the high-level overview of the solution would probably go like this: We know that the center angle of the i-th triangle measures arctan(1/sqrt(i)) radians. We are looking for the maximal natural n so that the sum of the first n center angles is <= 2 \* pi, or, equivalently, for the minimal n so that we cross that boundary. We estimate this n using some integrals ([source](https://math.stackexchange.com/a/132527)). Since our sequence is continuous and decreasing on positive reals, we can estimate our bounds like this: arctan(1/sqrt(n)) + integral arctan(1/sqrt(x)) dx from 1 to n <= n-th partial sum <= pi/4 + integral arctan(1/sqrt(x)) dx from 1 to n. Therefore for our upper bound: 2 \* pi <= arctan(1/sqrt(n)) + integral arctan(1/sqrt(x)) dx from 1 to n <= n-th partial sum, which, after integrating (it's a relatively ugly integral, but it has a solution in terms of square roots and arctans), gives us an upper bound of n = 18 (rounded to the nearest higher integer). Similarly, for our lower bound: n-th partial sum <= pi/4 + integral arctan(1/sqrt(x)) dx from 1 to n <= 2 \* pi gives us a solution of n = 15. We know that 15 triangles definitely fit without overlapping and 18 triangles definitely overlap. What remains is checking the cases of n = 16 and n = 17. By plugging it into a calculator, we can easily see that the sum of the first 16 angles is still < 2 \* pi, while the sum of the first 17 angles is too much. We can then conclude that 16 is the maximal number of non-overlapping triangles - and indeed, that agrees with the presented image. (I hope I haven't made any logic mistake somewhere, heh...)
C: I was like, I don’t remember using loops in math class, but then I looked at the sub.
P: I taught a neural network to play Flappy Bird with Java/Kotlin
C: Is it an optical illusion or does the bird image actually get overlapped by the top barrier sometimes and not get dinged for it?
C: The project's link: [https://github.com/longmakesstuff/Flappy-Bird-NN](https://github.com/longmakesstuff/Flappy-Bird-NN)
C: [mp4 link](https://preview.redd.it/awxrwvd9owa61.gif?format=mp4&s=5ea701696cd9bb5eed3be40304b7143c341def74) --- This mp4 version is 91.95% smaller than the gif (865.89 KB vs 10.5 MB). --- *Beep, I'm a bot.* [FAQ](https://np.reddit.com/r/anti_gif_bot/wiki/index) | [author](https://np.reddit.com/message/compose?to=MrWasdennnoch) | [source](https://github.com/wasdennnoch/reddit-anti-gif-bot) | v1.1.2
C: Amazing
C: [deleted]
C: this is due how the game itself was programmed (by me, a rather bad game programmer). The bird itself is only a very small point at the center of the bird image. Therefore collision with the bird image will not result in game over, only when the center of the bird collide with the pipe the bird will die.
C: You should just make the pipes’ collision hit boxes longer than they visually appear to be, by half the bird’s height. That way it will work as expected.
C: Why not increase the bird's hitbox dimensions?
C: Rectangle-rectangle intersection is slower and more complicated than point-rectangle intersection.
C: Actually, not nearly as complicated or computationally expensive as you might think. All you really need are four points on the corners of the bird. If any collide, you know you've been hit. It's not physically possible to hit the bird in the middle without hitting either the top or the bottom/ left or right since we are working with only rectangles.
P: This guy's art is super cool and I immediately thought it would make an interesting algorithm! Does anyone think they're up to designing one?
C: I'm imagining a greedy algorithm that takes in an image and tries to cover as much internal white area as possible while minimizing direction changes, line crossings, and discontinuities. The algorithm might also need to know enough about its own progress to not box itself into a corner. Perhaps using a standard turn radius and preferring parallel lines as well. The wavy patterns might be achievable with some perlin noise influencing the line direction.
C: You'll be interested in the [Here Dragons Abound](https://heredragonsabound.blogspot.com/) blog post series, of which the author is incredibly skilled at finding ways to procedurally generate hand-drawn maps. There are literally hundreds of blog posts but I feel like I've seen something similar to what you want from this guy, I just can't find it at the moment. Otherwise, check out /r/proceduralgeneration.
C: [deleted]
C: This is similar to [TSP art](https://wiki.evilmadscientist.com/TSP_art) based on the traveling salesman problem.
C: You might be interested in Hilbert curves.
C: You missed one other element of this art: each of the contiguous states is somewhat separated from the others, because the line orientation changes between states. So an algorithm to replicate this art would need to take that into account too.
C: It’s a fun exercise, but then you’re putting an artist out of work. Alas, technology!
C: You're right this might be a special case Hilbert curve with some randomization!
C: You're 100% right I just forgot to mention it in the comment!
C: You could try a top-down approach, like how I mutilate an algoritm for [H-curves](https://observablehq.com/@jobleonard/a-simple-algorithm-to-generate-h-curves) into one for arbitrary Hamiltonian curves here: https://observablehq.com/@jobleonard/arbitrary-hamiltonian-curves Actually, I know there are bottom-up approaches to create closed loops too, where one creates small clusters of loops and then slowly merge them into bigger ones. These work well for creating approximately-least-energy paths, which is probable what you want here: make borders between states require a lot of energy to cross, and internal paths low, and the division of states should appear spontaneously.
P: Sorting Algorithms Visualized [gifv]
C: Radix was the only one that we didn't go over in data structures and algorithm analysis.
C: Quicksort - evidently not so quick
C: Not nearly enough bubble sort 4/10
C: Where's bogosort
C: [here's](https://youtu.be/kPRA0W1kECg) another visualization with sound. I really like the bloops when its checking at the end!
C: Did you go over bucket sort? They are very similar
C: Compared with Bubble Sort or Insertion Sort, it's lightning. Quick Sort has benefits of memory usage over Heap and Merge. If memory isn't an issue, or the data is structured differently, meaning that you don't have a uniformly random distribution, other strategies may be better, but Quick Sort is a great balance of speed and memory that makes it well suited for most general applications.
C: Needs to pick pivots better.
C: Bogosort or we riot
C: I had forgotten about bucket sort until you mentioned it. I had to go lookup the radix algorithm, but yeah real similar now that you pointed it out.
P: Fine art dropout. Had to choose between politics and CS. Chose CS.
C: I forwarded your work to my daughter in the hope she will realize the beauty hidden in physics
C: GitHub Link: [https://github.com/longmakesstuff/SIMD-Art](https://github.com/longmakesstuff/SIMD-Art) &#x200B; Hello reddit. &#x200B; This is a showcase of my latest project, where I experimented a bit with SIMD to exploit the parallelizable nature of particle system. The code itself was written in C++ with plain old GCC compiler and runs on my AMD CPU. &#x200B; The art work is a pretty side effect and I hope you enjoy it. Have a nice sunday. &#x200B; P/S: The title is only meant as a joke, I am not a art dropout. I hope it is not inappropriate, though.
C: In college I double majored in mathematics and English. Which is good, I guess, I do a lot of NLP. If I had to do it again though would do CS and art. There's a lot of beauty at that intersection.
C: [deleted]
C: This is sick
C: How can you guys programme something like this ? Like.. its some kind of library or what ? I dont know how to make that step up from command propt "programs". Anyway really good job ^^
C: You chose correctly
C: Is the whole title a joke, or just part of the title?
C: It's not a side effect, it's a feature. ;)
C: Usually the code behind this kind of program is lots easier to be done than the program itself looks. I spent a lots of time at the beginning on command propt program, too. If you are very fit at core programming, a step from command line programming to graphics programming is very small. Many languages out there has a built-in graphics module: Java has Swing, C#, Python or JavaScript, too. Anything would help, I personally began with Java Swing. Here you would want to begin with drawing triangles, squares, circles. Then you would want them to move around a bits. When you are really fit with the programming library itself, you can start to look around for interesting maths or physics problems you want to realize.
P: Simulate Newton's law of universal gravitation with C++
C: This is really cool! Love it! The near collisions gave me anxiety lol
C: GitHub link: [https://github.com/longmakesstuff/Newtons-Gravitation](https://github.com/longmakesstuff/Newtons-Gravitation) &#x200B; Made this a while ago and refactored the code today. Have fun :)
C: Damn dude you cutting it close with those orbits
C: Who was like me, deeply waiting for the planets to crash?
C: I’m so sick of being stuck to this earth.
C: Next step - implement gravity for each planet, and watch how they interact
C: The real test for this is letting it run for days/months/years (of simulated time) and try to make the orbits stay stable. Depending on the numerical integration method you use, the planets will either gain energy and fly away, or lose energy and plummet into the sun. Taking a quick glance at your code, I see you've used a simple 1st order integration method. If I remember my maths classes, that method gains energy and the planets will eventually run away and escape the sun. If you want to make the simulation more stable, you'll need to look at advanced numerical integration methods like Runge-Kutta. R-K integrators lose energy over time, but there are variants that are suitable for orbital mechanics. Some keywords if you're interested: symplectic integrators and predictor-corrector methods. This is a deep rabbit hole. Have fun.
C: Awesome job btw! This is super clean
C: Thank you. In fact the planets do interact with each other. But since their masses are very small in comparision to the sun, the interaction is not very obvious :)
C: Ah, more faithful to their actual mass than their appearance I guess. That's cool!
P: Animation of Doo-Sabin subdivision. Source code and more in comments.
C: Damn this is cool
C: Is this like rounding a square, but in 3 dimensions?
C: [Example of Catmull-Clark subdivision on a cube on my Twitter](https://twitter.com/r_vizzz/status/1325839951431405568) [Source code on my Github](https://github.com/rvizzz/subdivide_animate)
C: We should run every model in an N64 game through this algorithm and then upscale the textures, BOOM remastered game.
C: This is incredible. Watched it 3 times back to back. Probably will watch it all day now.
C: Hey bro, nice dick
C: r/gonwild
C: Am I the only one who finds topology beautiful?
C: It's easy to draw a low number of polygons into an ill-defined shape, right? As we increase the number of polygons, we get a much better, rounded out shape. This could be used to anti-alias pointy-looking shapes into the smooth textures we see in gaming all the time. Super neat work, OP!
C: What’s the difference between catmull-Clark and soo-Sabin sub D?
P: Felt like doing a portrait of one of our founding fathers
C: Outstanding Turing
C: A beautiful man whose life was cut way too short.
C: That jawline could cut through glass
C: My son is named Mathison after Alan Turing’s middle name.
C: If you love computers thank a gay atheist.
C: That’s the mans with the machine to decode the German codes right??
C: Turing had such a tragically short life, yet he accomplished so much. He’s one of those cases that makes you wonder what could’ve been if he’d been here just a bit longer without the circumstances he was stuck in.
C: I used 'Alan' as a baseline for many online accounts I held. And, btw, I have Alan Turing's picture up on my apartment's wall. Not a poster or something like that. A proper, framed picture.
C: Yes, though I'd argue cracking the enigma code is one of his minor accomplishments. His metamathematics papers are the reason we have digital computers.
C: Him, Godel and Church among many others
P: Ever wonder how rendering works from your perspective?
C: For those curious- this is demonstrating an optimisation technique known as frustum culling; essentially anything that is outside of the field of view of the camera is not on screen and thus doesn't need to be considered for rendering, so is hidden to save on performance. The reason that chunks of the terrain are staying or hiding as blocks is that most terrain engines will break up the world into tiles and load in those tiles as a continuous block. So as long as a portion of one of those tiles is within the camera frustum, it remains in the scene. Additionally to this most games will also use occlusion culling, which using precomputed maps of the environment will figure out if sections of the scene are completely hidden behind another object- such as a building or cliff- and will also hide everything that's blocked from view. This is why you can sometimes find odd visual bugs in games where peeking through cracks and debris in the environment will lead to objects popping in and out of existence, because the precomputed occlusion geometry is far less detailed than the actual environment geo.
C: Just like in the real world.
C: How does this work with ray tracing? If a reflective surface is in front of you will the area behind you need to be rendered as well?
C: I have very limited knowledge of this sort of field, but I'm curious, does this mean that it is significantly more demanding on one's computer to spin their character around very quickly than it is to just run around?
C: This was an "optimizing technique" in the 90's Now it's just how you render games and world.s
C: I was gonna say something similar
C: Ray tracing doesn’t work by drawing objects in the scene. So it doesn’t look like this at all. Instead ray tracing generally uses an optimized 3D traversal data structure similar to how physics engines work, and then, for each pixel on the screen, it “traces rays” through that structure to decide what object(s) influence the color of that pixel.
C: This is usually done on a frame-by-frame basis, so it doesn't really matter how you move from one frame to the next.
C: If it's all already in VRAM then no, but if some loading is involved it can be pretty io heavy for the first turn, you can try this with a hdd and any unreal engine game.
C: It's still an optimisation technique. Just an extremely well established one, to the point of being built in to engines at quite a low level and not something an actual developer needs to worry about.
P: Found this while reading SICP from MIT.
C: Sad to read as getting into this field has become so money-driven (not that I’m against that, I do understand and respect it. Stil sad lol)
C: I love it.
C: sicp is great. the foreword explores the lambda calculus and the mathematics of computer science, and the first chapter basically starts with "programmers are witches" make sure to wear your programming socks when you read it
C: Wait, is this how the Mechanicus started in 40K?
C: For someone who has just started learning in the field, I needed to read something like this. The pressure of succeeding , learning things companies want, and doing it for a specific purpose take all fun out of it. I want to enjoy this amazing toy we get to learn n play with.
C: Now if universities would just really teach computer science, and industry would really demand that its products worked, that would be great. Right now, it feels like we have Perlis’ dictum in reverse.
C: TL;DR: Don't be a perfectionist and try to have fun and enjoy your work
C: Me and my friend started a cybersec business 2-3 years ago. We're just consultants and researchers selling services cheaper, and as we're all techies there's limited middle men. Almost like a freelance holding company. We return a very modest profit and grow by a conservative amount I know 3-4 salesmen that have joined VC start up companies founded a year after ours. Have 20 times the staff and have never turned a profit. All have either failed, or been sold to a larger conglomerate. I realised pretty quickly that the modern tech industry is just a bet on start up growth stocks. It doesn't matter if what you do is valuable, makes a profit or is sensible. If you can return your investment, even if it's dodgy as fuck. That's all that matters.
C: >Now if universities would just really teach computer science Can you elaborate on what you mean by this?
C: I think he was referring to many higher education curricula going more into a 'preparing for industry' direction rather than a core computer science one. E.g. the whole discussion with scheme being replaced with python.
P: My library has a tribute to Alan Turing
C: I like this content
C: The Legend
C: Question: is this in Britain?
C: Kinda looks like the lead singer of the talking heads.
C: Where?
C: It doesn't look Turing complete.
C: I like you
C: Norwich
C: Oooo, UK?
P: Machine learning could check if you’re social distancing properly at work
C: The future looks like a black mirror episode.
C: Thank god. Before this, judging 6 feet was incredibly difficult. Sometimes, a coworker and I would end up with our faces centimeters apart before one of us would pull out two meter sticks and realize the severity of the situation. This technology, however, changes the game; we can reopen the US now!
C: This ain't draconian at all...
C: Oh come on. Seeing shit like this makes me lose faith in AI. Because micromanaging your workforce will surely help them getting their job done! Or you could just set up a fucking VPN and let them work from home. Honestly, what are people hoping to achieve with shit like this?
C: This technology is only useful if nobody is allowed to be near each other. How do differentiate between partners and stuff like that.. Edit: Still a very cool application of machine vision though.
C: Terrible idea. Who comes up with this and thinks this is acceptable?
C: That ain't machine learning. It's just standard CV stuff.
C: This was made with good intentions but I don't quite get the point. This could potentially become an annoyance rather than a convenience.
C: As a hardware engineer, setting up a vpn and letting people work from home isn't a be-all end-all solution.
C: Of course it's not, I agree. But better than using AI-powered CCTV to monitor your workforce.
P: A word from Dijkstra
C: Ok, I'll do as soon as everyone starts calling incomplete or ambiguous requirements an error.
C: This is the dude that made that algorithm in graph theory I had to memorize?
C: Thank you for your attention.
C: “Bugs are for cowards” - Dijkstra
C: Being patronizing was Dijkstra's favourite sport. [This collection of his letters](https://medium.com/@acidflask/this-guys-arrogance-takes-your-breath-away-5b903624ca5f) shows how much arrogant he could be when criticizing the work of a Turing's Award winner.
C: I would say that more than half of the bug reports I deal with involve code that ran exactly as expected with no error, but ended up being against the stakeholders expectation for whatever reason.
C: Make sure you implemented it correctly, or he gon be mad
C: As Alan Kay put it: „I don't know how many of you have ever met Dijkstra, but you probably know that arrogance in computer science is measured in nano-Dijkstras“
C: My favorite is when you asks customer for input on their expectation of how the GUI will do something. They say we "trust your judgement" and it comes out nothing like what they expected. But I agree, the CTO at my company hates writing stuff down because he wants the wiggle room to say he wasn't wrong all the time and it's like pulling teeth to get him to reply to an email with what he wants. He would rather you make the entire thing and redesign by feel. I call it "engineering by feel"
C: He'll find the shortest way to *kill* you /s
P: 10 algorithms every computer science student must implement at least once in life
C: What about a whole course based on these. It would be the analog to Advanced Algorithms but for more of the SE crowd. It would take a lot of work, but it would be cool if toy environments were built beforehand so that the students can actually use their implementations.
]]></TEXT>
<TAGS>
<POST id="P0" spans="0~2" text="P:" line="1" type="Gen Info" />
<POST id="P1" spans="1887~1889" text="P:" type="Inquiry" line="12" />
<POST id="P2" spans="3623~3625" text="P:" type="Inquiry" line="23" />
<POST id="P3" spans="5244~5246" text="P:" type="Gen Info" line="34" />
<POST id="P4" spans="6217~6219" text="P:" type="Inquiry" line="44" />
<POST id="P5" spans="9610~9612" text="P:" type="Gen Info" line="55" />
<POST id="P6" spans="12814~12816" text="P:" line="66" type="Inquiry" />
<POST id="P7" spans="16711~16713" text="P:" type="Inquiry" line="77" />
<POST id="P8" spans="19773~19775" text="P:" line="88" type="Inquiry" />
<POST id="P9" spans="23001~23003" text="P:" type="Inquiry" line="99" />
<POST id="P10" spans="26233~26235" text="P:" type="Inquiry" line="110" />
<POST id="P11" spans="27899~27901" text="P:" type="Inquiry" line="121" />
<POST id="P12" spans="31971~31973" text="P:" type="Inquiry" line="132" />
<POST id="P13" spans="36845~36847" text="P:" type="Inquiry" line="143" />
<POST id="P14" spans="39512~39514" text="P:" type="Inquiry" line="154" />
<POST id="P15" spans="50540~50542" text="P:" type="Inquiry" line="165" />
<POST id="P16" spans="52952~52954" text="P:" type="Inquiry" line="176" />
<POST id="P17" spans="54336~54338" text="P:" type="Inquiry" line="186" />
<POST id="P18" spans="57510~57512" text="P:" type="Inquiry" line="197" />
<POST id="P19" spans="60428~60430" text="P:" type="Inquiry" line="207" />
<POST id="P20" spans="69320~69322" text="P:" type="Inquiry" line="218" />
<POST id="P21" spans="75566~75568" text="P:" type="Inquiry" line="229" />
<POST id="P22" spans="83088~83090" text="P:" type="Inquiry" line="239" />
<POST id="P23" spans="86197~86199" text="P:" type="Inquiry" line="249" />
<POST id="P24" spans="87709~87711" text="P:" type="Inquiry" line="258" />
<POST id="P25" spans="92159~92161" text="P:" type="Inquiry" line="269" />
<POST id="P26" spans="93457~93459" text="P:" type="Inquiry" line="280" />
<POST id="P27" spans="95047~95049" text="P:" type="Inquiry" line="291" />
<POST id="P28" spans="98022~98024" text="P:" type="Misc" line="302" />
<POST id="P29" spans="103792~103794" text="P:" type="Inquiry" line="313" />
<POST id="P30" spans="109096~109098" text="P:" type="Inquiry" line="324" />
<POST id="P31" spans="111401~111403" text="P:" type="Misc" line="335" />
<POST id="P32" spans="113022~113024" text="P:" type="Inquiry" line="346" />
<POST id="P33" spans="116257~116259" text="P:" type="Inquiry" line="356" />
<POST id="P34" spans="122344~122346" text="P:" type="Inquiry" line="367" />
<POST id="P35" spans="123690~123692" text="P:" type="Inquiry" line="378" />
<POST id="P36" spans="127660~127662" text="P:" type="Inquiry" line="389" />
<POST id="P37" spans="131666~131668" text="P:" type="Inquiry" line="400" />
<POST id="P38" spans="136239~136241" text="P:" type="Inquiry" line="411" />
<POST id="P39" spans="137874~137876" text="P:" type="Inquiry" line="422" />
<POST id="P40" spans="140649~140651" text="P:" type="Inquiry" line="433" />
<POST id="P41" spans="143253~143255" text="P:" type="Inquiry" line="444" />
<POST id="P42" spans="145986~145988" text="P:" type="Inquiry" line="455" />
<POST id="P43" spans="153837~153839" text="P:" type="Inquiry" line="465" />
<POST id="P44" spans="158170~158172" text="P:" type="Inquiry" line="473" />
<POST id="P45" spans="159832~159834" text="P:" type="Inquiry" line="484" />
<POST id="P46" spans="162216~162218" text="P:" type="Inquiry" line="495" />
<POST id="P47" spans="164988~164990" text="P:" type="Inquiry" line="506" />
<POST id="P48" spans="167158~167160" text="P:" type="Gen Info" line="517" />
<POST id="P49" spans="170202~170204" text="P:" type="Inquiry" line="528" />
<POST id="P50" spans="178224~178226" text="P:" type="Com. Cont." line="539" />
<POST id="P51" spans="179696~179698" text="P:" type="Com. Cont." line="550" />
<POST id="P52" spans="180341~180343" text="P:" type="Gen Info" line="561" />
<POST id="P53" spans="181704~181706" text="P:" type="Misc" line="572" />
<POST id="P54" spans="184320~184322" text="P:" type="Inquiry" line="582" />
<POST id="P55" spans="186299~186301" text="P:" type="Gen Info" line="593" />
<POST id="P56" spans="187700~187702" text="P:" type="Gen Info" line="603" />
<POST id="P57" spans="189315~189317" text="P:" type="Gen Info" line="614" />
<POST id="P58" spans="192332~192334" text="P:" type="Gen Info" line="625" />
<POST id="P59" spans="193442~193444" text="P:" type="Inquiry" line="636" />
<POST id="P60" spans="195125~195127" text="P:" type="Inquiry" line="647" />
<POST id="P61" spans="197640~197642" text="P:" type="Gen Info" line="658" />
<POST id="P62" spans="199582~199584" text="P:" type="Com. Cont." line="669" />
<POST id="P63" spans="200922~200924" text="P:" type="Com. Cont." line="680" />
<POST id="P64" spans="202172~202174" text="P:" type="Com. Cont." line="691" />
<POST id="P65" spans="206360~206362" text="P:" type="Gen Info" line="702" />
<POST id="P66" spans="207703~207705" text="P:" type="Misc" line="713" />
<POST id="P67" spans="209460~209462" text="P:" type="Com. Cont." line="724" />
<POST id="P68" spans="213213~213215" text="P:" type="Misc" line="735" />
<POST id="P69" spans="216117~216119" text="P:" type="Gen Info" line="746" />
<POST id="P70" spans="220470~220472" text="P:" type="Com. Cont." line="757" />
<POST id="P71" spans="223082~223084" text="P:" type="Misc" line="768" />
<POST id="P72" spans="224655~224657" text="P:" type="Gen Info" line="779" />
<POST id="P73" spans="225966~225968" text="P:" type="Misc" line="790" />
<POST id="P74" spans="226433~226435" text="P:" type="Gen Info" line="801" />
<POST id="P75" spans="232149~232151" text="P:" type="Com. Cont." line="812" />
<POST id="P76" spans="234102~234104" text="P:" type="Gen Info" line="823" />
<POST id="P77" spans="237258~237260" text="P:" type="Gen Info" line="834" />
<POST id="P78" spans="239004~239006" text="P:" type="Gen Info" line="845" />
<POST id="P79" spans="240192~240194" text="P:" type="Misc" line="856" />
<POST id="P80" spans="243626~243628" text="P:" type="Misc" line="867" />
<POST id="P81" spans="250688~250690" text="P:" type="Misc" line="878" />
<POST id="P82" spans="254495~254497" text="P:" type="Misc" line="889" />
<POST id="P83" spans="256802~256804" text="P:" type="Misc" line="900" />
<POST id="P84" spans="258683~258685" text="P:" type="Misc" line="911" />
<POST id="P85" spans="264067~264069" text="P:" type="Misc" line="922" />
<POST id="P86" spans="266239~266241" text="P:" type="Misc" line="932" />
<POST id="P87" spans="268691~268693" text="P:" type="Misc" line="943" />
<POST id="P88" spans="274971~274973" text="P:" type="Gen Info" line="954" />
<POST id="P89" spans="277779~277781" text="P:" type="Misc" line="965" />
<POST id="P90" spans="279687~279689" text="P:" type="Misc" line="976" />
<POST id="P91" spans="282746~282748" text="P:" type="Com. Cont." line="987" />
<POST id="P92" spans="293058~293060" text="P:" type="Gen Info" line="998" />
<POST id="P93" spans="297564~297566" text="P:" type="Misc" line="1008" />
<POST id="P94" spans="303436~303438" text="P:" type="Com. Cont." line="1019" />
<POST id="P95" spans="304879~304881" text="P:" type="Misc" line="1030" />
<POST id="P96" spans="306483~306485" text="P:" type="Gen Info" line="1040" />
<POST id="P97" spans="307341~307343" text="P:" type="Gen Info" line="1051" />
<POST id="P98" spans="308196~308198" text="P:" type="Misc" line="1062" />
<POST id="P99" spans="311677~311679" text="P:" type="Gen Info" line="1073" />
<POST id="P100" spans="312931~312933" text="P:" type="Misc" line="1084" />
<POST id="P101" spans="314405~314407" text="P:" type="Misc" line="1095" />
<POST id="P102" spans="314602~314604" text="P:" type="Misc" line="1098" />
<POST id="P103" spans="317647~317649" text="P:" type="Gen Info" line="1109" />
<POST id="P104" spans="319124~319126" text="P:" type="Gen Info" line="1120" />
<POST id="P105" spans="320304~320306" text="P:" type="Misc" line="1131" />
<POST id="P106" spans="321485~321487" text="P:" type="Gen Info" line="1142" />
<POST id="P107" spans="324437~324439" text="P:" type="Gen Info" line="1153" />
<POST id="P108" spans="325302~325304" text="P:" type="Com. Cont." line="1164" />
<POST id="P109" spans="326267~326269" text="P:" type="Misc" line="1175" />
<POST id="P110" spans="326957~326959" text="P:" type="Gen Info" line="1184" />
<POST id="P111" spans="329967~329969" text="P:" type="Com. Cont." line="1195" />
<POST id="P112" spans="330730~330732" text="P:" type="Misc" line="1206" />
<POST id="P113" spans="339331~339333" text="P:" type="Gen Info" line="1217" />
<POST id="P114" spans="341290~341292" text="P:" type="Gen Info" line="1228" />
<POST id="P115" spans="342067~342069" text="P:" type="Misc" line="1238" />
<POST id="P116" spans="351891~351893" text="P:" type="Gen Info" line="1249" />
<POST id="P117" spans="352556~352558" text="P:" type="Gen Info" line="1260" />
<POST id="P118" spans="354604~354606" text="P:" type="Gen Info" line="1271" />
<POST id="P119" spans="357973~357975" text="P:" type="Misc" line="1282" />
<POST id="P120" spans="359810~359812" text="P:" type="Gen Info" line="1293" />
<POST id="P121" spans="362150~362152" text="P:" type="Gen Info" line="1304" />
<POST id="P122" spans="367839~367841" text="P:" type="Misc" line="1315" />
<POST id="P123" spans="371017~371019" text="P:" type="Com. Cont." line="1326" />
<POST id="P124" spans="371870~371872" text="P:" type="Misc" line="1337" />
<POST id="P125" spans="373899~373901" text="P:" type="Com. Cont." line="1347" />
<POST id="P126" spans="375198~375200" text="P:" type="Gen Info" line="1358" />
<POST id="P127" spans="378063~378065" text="P:" type="Gen Info" line="1369" />
<POST id="P128" spans="380325~380327" text="P:" type="Misc" line="1380" />
<POST id="P129" spans="381571~381573" text="P:" type="Gen Info" line="1391" />
<POST id="P130" spans="383957~383959" text="P:" type="Gen Info" line="1402" />
<POST id="P131" spans="384465~384467" text="P:" type="Gen Info" line="1408" />
<POST id="P132" spans="386214~386216" text="P:" type="Gen Info" line="1419" />
<POST id="P133" spans="386985~386987" text="P:" type="Misc" line="1429" />
<POST id="P134" spans="392860~392862" text="P:" type="Gen Info" line="1440" />
<POST id="P135" spans="393812~393814" text="P:" type="Misc" line="1451" />
<POST id="P136" spans="395438~395440" text="P:" type="Gen Info" line="1462" />
<POST id="P137" spans="399589~399591" text="P:" type="Gen Info" line="1473" />
<POST id="P138" spans="402532~402534" text="P:" type="Com. Cont." line="1484" />
<POST id="P139" spans="404715~404717" text="P:" type="Gen Info" line="1494" />
<POST id="P140" spans="407330~407332" text="P:" type="Misc" line="1504" />
<POST id="P141" spans="409910~409912" text="P:" type="Misc" line="1515" />
<POST id="P142" spans="413582~413584" text="P:" type="Gen Info" line="1526" />
<POST id="P143" spans="414744~414746" text="P:" type="Com. Cont." line="1534" />
<POST id="P144" spans="416017~416019" text="P:" type="Gen Info" line="1544" />
<POST id="P145" spans="417298~417300" text="P:" type="Gen Info" line="1555" />
<POST id="P146" spans="421386~421388" text="P:" type="Gen Info" line="1564" />
<POST id="P147" spans="422262~422264" text="P:" type="Gen Info" line="1572" />
<POST id="P148" spans="423964~423966" text="P:" type="Com. Cont." line="1576" />
<POST id="P149" spans="426862~426864" text="P:" type="Misc" line="1587" />
<POST id="P150" spans="427797~427799" text="P:" type="Com. Cont." line="1598" />
<POST id="P151" spans="428115~428117" text="P:" type="Misc" line="1609" />
<POST id="P152" spans="429696~429698" text="P:" type="Misc" line="1620" />
<POST id="P153" spans="430715~430717" text="P:" type="Misc" line="1631" />
<POST id="P154" spans="431913~431915" text="P:" type="Inquiry" line="1639" />
<POST id="P155" spans="432707~432709" text="P:" type="Misc" line="1650" />
<POST id="P156" spans="434731~434733" text="P:" type="Misc" line="1659" />
<POST id="P157" spans="436003~436005" text="P:" type="Inquiry" line="1670" />
<POST id="P158" spans="437871~437873" text="P:" type="Inquiry" line="1681" />
<POST id="P159" spans="438715~438717" text="P:" type="Inquiry" line="1692" />
<POST id="P160" spans="440540~440542" text="P:" type="Inquiry" line="1703" />
<POST id="P161" spans="441478~441480" text="P:" type="Inquiry" line="1714" />
<POST id="P162" spans="441988~441990" text="P:" type="Inquiry" line="1717" />
<POST id="P163" spans="443595~443597" text="P:" type="Inquiry" line="1728" />
<POST id="P164" spans="446592~446594" text="P:" type="Inquiry" line="1739" />
<POST id="P165" spans="447560~447562" text="P:" type="Inquiry" line="1747" />
<POST id="P166" spans="449975~449977" text="P:" type="Misc" line="1758" />
<POST id="P167" spans="450616~450618" text="P:" type="Com. Cont." line="1769" />
<POST id="P168" spans="451012~451014" text="P:" type="Inquiry" line="1773" />
<POST id="P169" spans="451314~451316" text="P:" type="Misc" line="1779" />
<POST id="P170" spans="455571~455573" text="P:" type="Inquiry" line="1790" />
<POST id="P171" spans="457398~457400" text="P:" type="Inquiry" line="1801" />
<POST id="P172" spans="459096~459098" text="P:" type="Inquiry" line="1810" />
<POST id="P173" spans="460173~460175" text="P:" type="Misc" line="1820" />
<POST id="P174" spans="463161~463163" text="P:" type="Gen Info" line="1829" />
<POST id="P175" spans="463811~463813" text="P:" type="Inquiry" line="1832" />
<POST id="P176" spans="465053~465055" text="P:" type="Inquiry" line="1841" />
<POST id="P177" spans="466035~466037" text="P:" type="Inquiry" line="1846" />
<POST id="P178" spans="471012~471014" text="P:" type="Inquiry" line="1857" />
<POST id="P179" spans="472062~472064" text="P:" type="Inquiry" line="1867" />
<POST id="P180" spans="474399~474401" text="P:" type="Inquiry" line="1878" />
<POST id="P181" spans="477763~477765" text="P:" type="Gen Info" line="1889" />
<POST id="P182" spans="479021~479023" text="P:" type="Misc" line="1896" />
<POST id="P183" spans="481802~481804" text="P:" type="Inquiry" line="1907" />
<POST id="P184" spans="483116~483118" text="P:" type="Inquiry" line="1912" />
<POST id="P185" spans="484671~484673" text="P:" type="Inquiry" line="1923" />
<POST id="P186" spans="485412~485414" text="P:" type="Inquiry" line="1934" />
<POST id="P187" spans="489030~489032" text="P:" type="Misc" line="1944" />
<POST id="P188" spans="490725~490727" text="P:" type="Inquiry" line="1949" />
<POST id="P189" spans="492134~492136" text="P:" type="Misc" line="1952" />
<POST id="P190" spans="492223~492225" text="P:" type="Inquiry" line="1954" />
<POST id="P191" spans="497848~497850" text="P:" type="Inquiry" line="1965" />
<POST id="P192" spans="502244~502246" text="P:" type="Inquiry" line="1976" />
<POST id="P193" spans="504726~504728" text="P:" type="Inquiry" line="1986" />
<POST id="P194" spans="505200~505202" text="P:" type="Inquiry" line="1996" />
<POST id="P195" spans="507739~507741" text="P:" type="Inquiry" line="2007" />
<POST id="P196" spans="508239~508241" text="P:" type="Inquiry" line="2018" />
<POST id="P197" spans="511111~511113" text="P:" type="Inquiry" line="2029" />
<POST id="P198" spans="513820~513822" text="P:" type="Inquiry" line="2040" />
<POST id="P199" spans="515041~515043" text="P:" type="Inquiry" line="2046" />
<POST id="P200" spans="522029~522031" text="P:" type="Inquiry" line="2057" />
<POST id="P201" spans="523488~523490" text="P:" type="Misc" line="2068" />
<POST id="P202" spans="525644~525646" text="P:" type="Com. Cont." line="2079" />
<POST id="P203" spans="526504~526506" text="P:" type="Gen Info" line="2090" />
<POST id="P204" spans="527805~527807" text="P:" type="Misc" line="2101" />
<POST id="P205" spans="528383~528385" text="P:" type="Misc" line="2112" />
<POST id="P206" spans="530051~530053" text="P:" type="Misc" line="2123" />
<POST id="P207" spans="532380~532382" text="P:" type="Misc" line="2134" />
<POST id="P208" spans="533876~533878" text="P:" type="Misc" line="2145" />
<POST id="P209" spans="535898~535900" text="P:" type="Com. Cont." line="2156" />
<POST id="P210" spans="536267~536269" text="P:" type="Com. Cont." line="2167" />
<POST id="P211" spans="538791~538793" text="P:" type="Misc" line="2178" />
<POST id="P212" spans="539574~539576" text="P:" type="Misc" line="2189" />
<POST id="P213" spans="540438~540440" text="P:" type="Com. Cont." line="2200" />
<POST id="P214" spans="543114~543116" text="P:" type="Misc" line="2211" />
<POST id="P215" spans="544102~544104" text="P:" type="Misc" line="2222" />
<POST id="P216" spans="546004~546006" text="P:" type="Com. Cont." line="2233" />
<POST id="P217" spans="547636~547638" text="P:" type="Gen Info" line="2243" />
<POST id="P218" spans="548679~548681" text="P:" type="Misc" line="2254" />
<POST id="P219" spans="550111~550113" text="P:" type="Misc" line="2265" />
<POST id="P220" spans="555330~555332" text="P:" type="Gen Info" line="2276" />
<POST id="P221" spans="560026~560028" text="P:" type="Com. Cont." line="2287" />
<POST id="P222" spans="561681~561683" text="P:" type="Com. Cont." line="2298" />
<POST id="P223" spans="563324~563326" text="P:" type="Misc" line="2309" />
<POST id="P224" spans="567246~567248" text="P:" type="Misc" line="2320" />
<POST id="P225" spans="570404~570406" text="P:" type="Misc" line="2331" />
<POST id="P226" spans="571840~571842" text="P:" type="Com. Cont." line="2342" />
<POST id="P227" spans="575329~575331" text="P:" type="Misc" line="2352" />
<POST id="P228" spans="578256~578258" text="P:" type="Misc" line="2364" />
<POST id="P229" spans="582786~582788" text="P:" type="Com. Cont." line="2375" />
<POST id="P230" spans="585503~585505" text="P:" type="Misc" line="2386" />
<POST id="P231" spans="586362~586364" text="P:" type="Misc" line="2397" />
<POST id="P232" spans="587248~587250" text="P:" type="Misc" line="2408" />
<POST id="P233" spans="588813~588815" text="P:" type="Com. Cont." line="2419" />
<POST id="P234" spans="591904~591906" text="P:" type="Com. Cont." line="2430" />
<POST id="P235" spans="593469~593471" text="P:" type="Misc" line="2440" />
<POST id="P236" spans="595100~595102" text="P:" type="Misc" line="2451" />
<POST id="P237" spans="596437~596439" text="P:" type="Com. Cont." line="2462" />
<POST id="P238" spans="598062~598064" text="P:" type="Inquiry" line="2472" />
<POST id="P239" spans="600653~600655" text="P:" type="Misc" line="2483" />
<POST id="P240" spans="602273~602275" text="P:" type="Gen Info" line="2494" />
<POST id="P241" spans="605675~605677" text="P:" type="Misc" line="2505" />
<POST id="P242" spans="606780~606782" text="P:" type="Inquiry" line="2516" />
<POST id="P243" spans="614944~614946" text="P:" type="Misc" line="2527" />
<POST id="P244" spans="616575~616577" text="P:" type="Com. Cont." line="2537" />
<POST id="P245" spans="618107~618109" text="P:" type="Gen Info" line="2548" />
<POST id="P246" spans="619864~619866" text="P:" type="Misc" line="2559" />
<POST id="P247" spans="621085~621087" text="P:" type="Misc" line="2570" />
<POST id="P248" spans="622296~622298" text="P:" type="Com. Cont." line="2581" />
<POST id="P249" spans="624038~624040" text="P:" type="Misc" line="2591" />
<POST id="P250" spans="625766~625768" text="P:" type="Gen Info" line="2602" />
<POST id="P251" spans="627405~627407" text="P:" type="Gen Info" line="2612" />
<POST id="P252" spans="629482~629484" text="P:" type="Gen Info" line="2623" />
<POST id="P253" spans="631808~631810" text="P:" type="Gen Info" line="2634" />
<POST id="P254" spans="632972~632974" text="P:" type="Gen Info" line="2642" />
<POST id="P255" spans="634142~634144" text="P:" type="Misc" line="2653" />
<POST id="P256" spans="635150~635152" text="P:" type="Misc" line="2664" />
<POST id="P257" spans="636903~636905" text="P:" type="Misc" line="2675" />
<POST id="P258" spans="638356~638358" text="P:" type="Gen Info" line="2686" />
<POST id="P259" spans="639742~639744" text="P:" type="Misc" line="2697" />
<POST id="P260" spans="640456~640458" text="P:" type="Gen Info" line="2708" />
<POST id="P261" spans="640974~640976" text="P:" type="Misc" line="2719" />
<POST id="P262" spans="646194~646196" text="P:" type="Gen Info" line="2730" />
<POST id="P263" spans="646858~646860" text="P:" type="Gen Info" line="2741" />
<POST id="P264" spans="647292~647294" text="P:" type="Misc" line="2752" />
<POST id="P265" spans="648354~648356" text="P:" type="Gen Info" line="2763" />
<POST id="P266" spans="649858~649860" text="P:" type="Gen Info" line="2773" />
<POST id="P267" spans="650653~650655" text="P:" type="Inquiry" line="2783" />
<POST id="P268" spans="655890~655892" text="P:" type="Inquiry" line="2794" />
<POST id="P269" spans="660124~660126" text="P:" type="Misc" line="2805" />
<POST id="P270" spans="660529~660531" text="P:" type="Gen Info" line="2815" />
<POST id="P271" spans="663729~663731" text="P:" type="Gen Info" line="2826" />
<POST id="P272" spans="667057~667059" text="P:" type="Misc" line="2837" />
<POST id="P273" spans="669444~669446" text="P:" type="Gen Info" line="2848" />
<POST id="P274" spans="674159~674161" text="P:" type="Misc" line="2859" />
<POST id="P275" spans="677072~677074" text="P:" type="Gen Info" line="2870" />
<POST id="P276" spans="677607~677609" text="P:" type="Gen Info" line="2880" />
<POST id="P277" spans="678334~678336" text="P:" type="Gen Info" line="2886" />
<POST id="P278" spans="683282~683284" text="P:" type="Misc" line="2896" />
<POST id="P279" spans="684917~684919" text="P:" type="Gen Info" line="2902" />
<POST id="P280" spans="688006~688008" text="P:" type="Inquiry" line="2912" />
<POST id="P281" spans="688581~688583" text="P:" type="Misc" line="2920" />
<POST id="P282" spans="692834~692836" text="P:" type="Gen Info" line="2931" />
<POST id="P283" spans="693763~693765" text="P:" type="Misc" line="2942" />
<POST id="P284" spans="695473~695475" text="P:" type="Misc" line="2953" />
<POST id="P285" spans="696408~696410" text="P:" type="Misc" line="2964" />
<POST id="P286" spans="698042~698044" text="P:" type="Inquiry" line="2975" />
<POST id="P287" spans="704294~704296" text="P:" type="Inquiry" line="2986" />
<POST id="P288" spans="706982~706984" text="P:" type="Misc" line="2997" />
<POST id="P289" spans="708021~708023" text="P:" type="Misc" line="3008" />
<POST id="P290" spans="708636~708638" text="P:" type="Gen Info" line="3014" />
<POST id="P291" spans="709205~709207" text="P:" type="Misc" line="3020" />
<POST id="P292" spans="710990~710992" text="P:" type="Gen Info" line="3031" />
<POST id="P293" spans="714086~714088" text="P:" type="Misc" line="3042" />
<POST id="P294" spans="714432~714434" text="P:" type="Inquiry" line="3052" />
<POST id="P295" spans="718431~718433" text="P:" type="Com. Cont." line="3063" />
<POST id="P296" spans="720228~720230" text="P:" type="Misc" line="3074" />
<POST id="P297" spans="721624~721626" text="P:" type="Gen Info" line="3084" />
<POST id="P298" spans="723856~723858" text="P:" type="Inquiry" line="3095" />
<POST id="P299" spans="726877~726879" text="P:" type="Misc" line="3106" />
<POST id="P300" spans="730458~730460" text="P:" type="Misc" line="3117" />
<POST id="P301" spans="734004~734006" text="P:" type="Misc" line="3128" />
<POST id="P302" spans="735526~735528" text="P:" type="Gen Info" line="3139" />
<POST id="P303" spans="736473~736475" text="P:" type="Misc" line="3150" />
<POST id="P304" spans="737569~737571" text="P:" type="Misc" line="3161" />
<POST id="P305" spans="738085~738087" text="P:" type="Misc" line="3172" />
<POST id="P306" spans="740378~740380" text="P:" type="Misc" line="3183" />
<POST id="P307" spans="741122~741124" text="P:" type="Gen Info" line="3194" />
<POST id="P308" spans="747322~747324" text="P:" type="Gen Info" line="3205" />
<POST id="P309" spans="748613~748615" text="P:" type="Gen Info" line="3215" />
<POST id="P310" spans="751571~751573" text="P:" type="Misc" line="3226" />
<POST id="P311" spans="752434~752436" text="P:" type="Gen Info" line="3237" />
<POST id="P312" spans="755088~755090" text="P:" type="Misc" line="3248" />
<POST id="P313" spans="756001~756003" text="P:" type="Inquiry" line="3259" />
<POST id="P314" spans="757254~757256" text="P:" type="Com. Cont." line="3270" />
<POST id="P315" spans="758890~758892" text="P:" type="Misc" line="3281" />
<POST id="P316" spans="759446~759448" text="P:" type="Gen Info" line="3292" />
<POST id="P317" spans="760111~760113" text="P:" type="Inquiry" line="3302" />
<POST id="P318" spans="760985~760987" text="P:" type="Misc" line="3313" />
<POST id="P319" spans="762868~762870" text="P:" type="Gen Info" line="3323" />
<POST id="P320" spans="763953~763955" text="P:" type="Gen Info" line="3334" />
<POST id="P322" spans="765466~765468" text="P:" type="Misc" line="3345" />
<POST id="P323" spans="766191~766193" text="P:" type="Gen Info" line="3356" />
<POST id="P324" spans="766809~766811" text="P:" type="Gen Info" line="3367" />
<POST id="P325" spans="768332~768334" text="P:" type="Gen Info" line="3378" />
<POST id="P326" spans="769292~769294" text="P:" type="Misc" line="3389" />
<POST id="P327" spans="770469~770471" text="P:" type="Inquiry" line="3400" />
<POST id="P328" spans="772294~772296" text="P:" type="Misc" line="3411" />
<POST id="P330" spans="774448~774450" text="P:" type="Gen Info" line="3422" />
<POST id="P331" spans="776623~776625" text="P:" type="Gen Info" line="3432" />
<POST id="P332" spans="777525~777527" text="P:" type="Misc" line="3443" />
<POST id="P333" spans="779432~779434" text="P:" type="Gen Info" line="3454" />
<POST id="P334" spans="781122~781124" text="P:" type="Gen Info" line="3465" />
<POST id="P335" spans="783575~783577" text="P:" type="Com. Cont." line="3476" />
<POST id="P336" spans="786594~786596" text="P:" type="Misc" line="3487" />
<POST id="P337" spans="788771~788773" text="P:" type="Misc" line="3497" />
<POST id="P338" spans="789825~789827" text="P:" line="3508" type="Gen Info" />
<POST id="P339" spans="790456~790458" text="P:" type="Misc" line="3519" />
<POST id="P340" spans="791393~791395" text="P:" type="Misc" line="3530" />
<POST id="P341" spans="792173~792175" text="P:" type="Gen Info" line="3540" />
<POST id="P342" spans="793337~793339" text="P:" type="Com. Cont." line="3551" />
<POST id="P343" spans="794715~794717" text="P:" type="Com. Cont." line="3562" />
<POST id="P344" spans="796663~796665" text="P:" type="Gen Info" line="3573" />
<POST id="P345" spans="799804~799806" text="P:" type="Misc" line="3584" />
<POST id="P346" spans="800239~800241" text="P:" type="Com. Cont." line="3595" />
<POST id="P347" spans="801089~801091" text="P:" type="Gen Info" line="3606" />
<POST id="P348" spans="801447~801449" text="P:" type="Gen Info" line="3612" />
<POST id="P349" spans="803242~803244" text="P:" type="Gen Info" line="3623" />
<POST id="P350" spans="805046~805048" text="P:" type="Misc" line="3634" />
<POST id="P351" spans="808718~808720" text="P:" type="Misc" line="3645" />
<POST id="P352" spans="809899~809901" text="P:" type="Misc" line="3656" />
<POST id="P353" spans="810773~810775" text="P:" type="Misc" line="3667" />
<POST id="P354" spans="812782~812784" text="P:" type="Misc" line="3678" />
<POST id="P355" spans="814338~814340" text="P:" type="Misc" line="3689" />
<POST id="P356" spans="816813~816815" text="P:" type="Misc" line="3700" />
<POST id="P357" spans="817827~817829" text="P:" type="Misc" line="3711" />
<POST id="P358" spans="820092~820094" text="P:" type="Misc" line="3722" />
<POST id="P359" spans="820962~820964" text="P:" type="Misc" line="3733" />
<POST id="P360" spans="824117~824119" text="P:" type="Misc" line="3744" />
<POST id="P361" spans="826524~826526" text="P:" type="Gen Info" line="3755" />
<POST id="P362" spans="829115~829117" text="P:" type="Misc" line="3766" />
<POST id="P363" spans="833317~833319" text="P:" type="Misc" line="3777" />
<POST id="P364" spans="834385~834387" text="P:" type="Misc" line="3788" />
<POST id="P365" spans="838774~838776" text="P:" type="Misc" line="3799" />
<POST id="P366" spans="839998~840000" text="P:" type="Misc" line="3810" />
<POST id="P367" spans="841098~841100" text="P:" type="Misc" line="3821" />
<POST id="P368" spans="848811~848813" text="P:" type="Misc" line="3832" />
<POST id="P369" spans="850459~850461" text="P:" type="Misc" line="3843" />
<POST id="P370" spans="854961~854963" text="P:" type="Com. Cont." line="3854" />
<POST id="P371" spans="855999~856001" text="P:" type="Misc" line="3865" />
<POST id="P372" spans="858385~858387" text="P:" type="Misc" line="3875" />
<POST id="P373" spans="860549~860551" text="P:" type="Misc" line="3886" />
<POST id="P374" spans="861736~861738" text="P:" type="Misc" line="3897" />
<POST id="P375" spans="866586~866588" text="P:" type="Misc" line="3908" />
<POST id="P376" spans="868406~868408" text="P:" type="Misc" line="3919" />
<POST id="P377" spans="872776~872778" text="P:" type="Inquiry" line="3930" />
<POST id="P378" spans="874935~874937" text="P:" type="Misc" line="3941" />
<POST id="P379" spans="876506~876508" text="P:" type="Misc" line="3952" />
<POST id="P380" spans="877951~877953" text="P:" type="Gen Info" line="3963" />
<POST id="P381" spans="879744~879746" text="P:" type="Misc" line="3974" />
<POST id="P382" spans="881568~881570" text="P:" type="Misc" line="3985" />
<POST id="P383" spans="884719~884721" text="P:" type="Misc" line="3996"/>
<COMMENT id="C0" spans="218~220" text="C:" line="2" type="Statement" />
<COMMENT id="C1" spans="311~313" text="C:" line="3" type="Statement" />
<COMMENT id="C2" spans="416~418" text="C:" line="4" type="Solution" />
<COMMENT id="C3" spans="515~517" text="C:" line="5" type="Solution" />
<COMMENT id="C4" spans="628~630" text="C:" type="Inquiry" line="6" />
<COMMENT id="C5" spans="768~770" text="C:" type="Statement" line="7" />
<COMMENT id="C6" spans="801~803" text="C:" type="Statement" line="8" />
<COMMENT id="C7" spans="1553~1555" text="C:" line="9" type="Statement" />
<COMMENT id="C8" spans="1623~1625" text="C:" line="10" type="Statement" />
<COMMENT id="C9" spans="1705~1707" text="C:" type="Statement" line="11" />
<COMMENT id="C10" spans="1960~1962" text="C:" type="Statement" line="13" />
<COMMENT id="C11" spans="2058~2060" text="C:" type="Solution" line="14" />
<COMMENT id="C12" spans="2521~2523" text="C:" type="Solution" line="15" />
<COMMENT id="C13" spans="2536~2538" text="C:" type="Solution" line="16" />
<COMMENT id="C14" spans="2543~2545" text="C:" type="Solution" line="17" />
<COMMENT id="C15" spans="2577~2579" text="C:" line="18" type="Solution" />
<COMMENT id="C16" spans="2610~2612" text="C:" type="Solution" line="19" />
<COMMENT id="C17" spans="3051~3053" text="C:" type="Statement" line="20" />
<COMMENT id="C18" spans="3155~3157" text="C:" type="Statement" line="21" />
<COMMENT id="C19" spans="3455~3457" text="C:" type="Statement" line="22" />
<COMMENT id="C20" spans="3681~3683" text="C:" type="Statement" line="24" />
<COMMENT id="C21" spans="3826~3828" text="C:" type="Solution" line="25" />
<COMMENT id="C22" spans="4200~4202" text="C:" line="26" type="Solution" />
<COMMENT id="C23" spans="4282~4284" text="C:" line="27" type="Solution" />
<COMMENT id="C24" spans="4391~4393" text="C:" type="Statement" line="28" />
<COMMENT id="C25" spans="4563~4565" text="C:" type="Solution" line="29" />
<COMMENT id="C26" spans="4916~4918" text="C:" line="30" type="Solution" />
<COMMENT id="C27" spans="4996~4998" text="C:" type="Statement" line="31" />
<COMMENT id="C28" spans="5051~5053" text="C:" type="Solution" line="32" />
<COMMENT id="C29" spans="5231~5233" text="C:" type="Solution" line="33" />
<COMMENT id="C30" spans="5287~5289" text="C:" type="Statement" line="35" />
<COMMENT id="C31" spans="5349~5351" text="C:" type="Solution" line="36" />
<COMMENT id="C32" spans="5540~5542" text="C:" type="Inquiry" line="37" />
<COMMENT id="C33" spans="5578~5580" text="C:" type="Inquiry" line="38" />
<COMMENT id="C34" spans="5675~5677" text="C:" type="Statement" line="39" />
<COMMENT id="C35" spans="5750~5752" text="C:" type="Solution" line="40" />
<COMMENT id="C36" spans="5971~5973" text="C:" type="Statement" line="41" />
<COMMENT id="C37" spans="5997~5999" text="C:" type="Reference" line="42" />
<COMMENT id="C38" spans="6149~6151" text="C:" type="Solution" line="43" />
<COMMENT id="C39" spans="6275~6277" text="C:" type="Solution" line="45" />
<COMMENT id="C40" spans="6656~6658" text="C:" type="Solution" line="46" />
<COMMENT id="C41" spans="6910~6912" text="C:" type="Solution" line="47" />
<COMMENT id="C42" spans="7223~7225" text="C:" type="Solution" line="48" />
<COMMENT id="C43" spans="7824~7826" text="C:" type="Solution" line="49" />
<COMMENT id="C44" spans="8210~8212" text="C:" type="Solution" line="50" />
<COMMENT id="C45" spans="8986~8988" text="C:" type="Solution" line="51" />
<COMMENT id="C46" spans="9238~9240" text="C:" type="Solution" line="52" />
<COMMENT id="C47" spans="9358~9360" text="C:" type="Solution" line="53" />
<COMMENT id="C48" spans="9514~9516" text="C:" type="Solution" line="54" />
<COMMENT id="C49" spans="9665~9667" text="C:" type="Solution" line="56" />
<COMMENT id="C50" spans="10281~10283" text="C:" type="Solution" line="57" />
<COMMENT id="C51" spans="10860~10862" text="C:" type="Solution" line="58" />
<COMMENT id="C52" spans="11216~11218" text="C:" type="Statement" line="59" />
<COMMENT id="C53" spans="11359~11361" text="C:" type="Solution" line="60" />
<COMMENT id="C54" spans="11766~11768" text="C:" type="Solution" line="61" />
<COMMENT id="C55" spans="11942~11944" text="C:" type="Solution" line="62" />
<COMMENT id="C56" spans="12269~12271" text="C:" type="Removed" line="63" />
<COMMENT id="C57" spans="12282~12284" text="C:" type="Solution" line="64" />
<COMMENT id="C58" spans="12751~12753" text="C:" type="Statement" line="65" />
<COMMENT id="C59" spans="12878~12880" text="C:" type="Solution" line="67" />
<COMMENT id="C60" spans="13096~13098" text="C:" type="Solution" line="68" />
<COMMENT id="C61" spans="13413~13415" text="C:" type="Solution" line="69" />
<COMMENT id="C62" spans="13950~13952" text="C:" type="Solution" line="70" />
<COMMENT id="C63" spans="14155~14157" text="C:" type="Statement" line="71" />
<COMMENT id="C64" spans="14242~14244" text="C:" type="Statement" line="72" />
<COMMENT id="C65" spans="15040~15042" text="C:" type="Statement" line="73" />
<COMMENT id="C66" spans="16401~16403" text="C:" type="Statement" line="74" />
<COMMENT id="C67" spans="16437~16439" text="C:" type="Reference" line="75" />
<COMMENT id="C68" spans="16591~16593" text="C:" type="Statement" line="76" />
<COMMENT id="C69" spans="16806~16808" text="C:" type="Reference" line="78" />
<COMMENT id="C70" spans="17436~17438" text="C:" type="Inquiry" line="79" />
<COMMENT id="C71" spans="17594~17596" text="C:" type="Solution" line="80" />
<COMMENT id="C72" spans="17726~17728" text="C:" type="Solution" line="81" />
<COMMENT id="C73" spans="18175~18177" text="C:" type="Solution" line="82" />
<COMMENT id="C74" spans="18498~18500" text="C:" type="Statement" line="83" />
<COMMENT id="C75" spans="18979~18981" text="C:" type="Statement" line="84" />
<COMMENT id="C76" spans="19228~19230" text="C:" type="Solution" line="85" />
<COMMENT id="C77" spans="19620~19622" text="C:" type="Statement" line="86" />
<COMMENT id="C78" spans="19633~19635" text="C:" type="Solution" line="87" />
<COMMENT id="C79" spans="19837~19839" text="C:" type="Solution" line="89" />
<COMMENT id="C80" spans="20107~20109" text="C:" type="Solution" line="90" />
<COMMENT id="C81" spans="20204~20206" text="C:" type="Statement" line="91" />
<COMMENT id="C82" spans="20356~20358" text="C:" type="Solution" line="92" />
<COMMENT id="C83" spans="20911~20913" text="C:" type="Solution" line="93" />
<COMMENT id="C84" spans="21208~21210" text="C:" type="Statement" line="94" />
<COMMENT id="C85" spans="22411~22413" text="C:" type="Statement" line="95" />
<COMMENT id="C86" spans="22518~22520" text="C:" type="Removed" line="96" />
<COMMENT id="C87" spans="22531~22533" text="C:" type="Solution" line="97" />
<COMMENT id="C88" spans="22921~22923" text="C:" type="Statement" line="98" />
<COMMENT id="C89" spans="23054~23056" text="C:" type="Solution" line="100" />
<COMMENT id="C90" spans="23286~23288" text="C:" type="Solution" line="101" />
<COMMENT id="C91" spans="24141~24143" text="C:" type="Solution" line="102" />
<COMMENT id="C92" spans="24961~24963" text="C:" type="Solution" line="103" />
<COMMENT id="C93" spans="25045~25047" text="C:" type="Reference" line="104" />
<COMMENT id="C94" spans="25188~25190" text="C:" type="Solution" line="105" />
<COMMENT id="C95" spans="25515~25517" text="C:" type="Statement" line="106" />
<COMMENT id="C96" spans="25565~25567" text="C:" type="Solution" line="107" />
<COMMENT id="C97" spans="25591~25593" text="C:" type="Statement" line="108" />
<COMMENT id="C98" spans="25684~25686" text="C:" type="Solution" line="109" />
<COMMENT id="C99" spans="26333~26335" text="C:" type="Solution" line="111" />
<COMMENT id="C100" spans="26458~26460" text="C:" type="Solution" line="112" />
<COMMENT id="C101" spans="26708~26710" text="C:" type="Solution" line="113" />
<COMMENT id="C102" spans="26913~26915" text="C:" type="Solution" line="114" />
<COMMENT id="C103" spans="27150~27152" text="C:" type="Solution" line="115" />
<COMMENT id="C104" spans="27277~27279" text="C:" type="Solution" line="116" />
<COMMENT id="C105" spans="27657~27659" text="C:" type="Statement" line="117" />
<COMMENT id="C106" spans="27721~27723" text="C:" type="Solution" line="118" />
<COMMENT id="C107" spans="27734~27736" text="C:" type="Statement" line="119" />
<COMMENT id="C108" spans="27800~27802" text="C:" type="Solution" line="120" />
<COMMENT id="C109" spans="27997~27999" text="C:" type="Solution" line="122" />
<COMMENT id="C110" spans="28048~28050" text="C:" type="Solution" line="123" />
<COMMENT id="C111" spans="28847~28849" text="C:" type="Solution" line="124" />
<COMMENT id="C112" spans="29032~29034" text="C:" type="Solution" line="125" />
<COMMENT id="C113" spans="29299~29301" text="C:" type="Reference" line="126" />
<COMMENT id="C114" spans="30785~30787" text="C:" type="Solution" line="127" />
<COMMENT id="C115" spans="31010~31012" text="C:" type="Solution" line="128" />
<COMMENT id="C116" spans="31108~31110" text="C:" type="Statement" line="129" />
<COMMENT id="C117" spans="31237~31239" text="C:" type="Solution" line="130" />
<COMMENT id="C118" spans="31803~31805" text="C:" type="Statement" line="131" />
<COMMENT id="C119" spans="32186~32188" text="C:" type="Solution" line="133" />
<COMMENT id="C120" spans="33983~33985" text="C:" type="Solution" line="134" />
<COMMENT id="C121" spans="36075~36077" text="C:" type="Solution" line="135" />
<COMMENT id="C122" spans="36285~36287" text="C:" type="Solution" line="136" />
<COMMENT id="C123" spans="36379~36381" text="C:" type="Solution" line="137" />
<COMMENT id="C124" spans="36755~36757" text="C:" type="Statement" line="138" />
<COMMENT id="C125" spans="36763~36765" text="C:" type="Statement" line="139" />
<COMMENT id="C126" spans="36784~36786" text="C:" type="Solution" line="140" />
<COMMENT id="C127" spans="36805~36807" text="C:" type="Statement" line="141" />
<COMMENT id="C128" spans="36825~36827" text="C:" type="Solution" line="142" />
<COMMENT id="C129" spans="36974~36976" text="C:" type="Solution" line="144" />
<COMMENT id="C130" spans="37047~37049" text="C:" type="Statement" line="145" />
<COMMENT id="C131" spans="37173~37175" text="C:" type="Solution" line="146" />
<COMMENT id="C132" spans="38256~38258" text="C:" type="Solution" line="147" />
<COMMENT id="C133" spans="38595~38597" text="C:" type="Solution" line="148" />
<COMMENT id="C134" spans="38708~38710" text="C:" type="Solution" line="149" />
<COMMENT id="C135" spans="38928~38930" text="C:" type="Solution" line="150" />
<COMMENT id="C136" spans="39093~39095" text="C:" type="Inquiry" line="151" />
<COMMENT id="C137" spans="39363~39365" text="C:" type="Statement" line="152" />
<COMMENT id="C138" spans="39380~39382" text="C:" type="Statement" line="153" />
<COMMENT id="C139" spans="39567~39569" text="C:" type="Solution" line="155" />
<COMMENT id="C140" spans="41262~41264" text="C:" type="Solution" line="156" />
<COMMENT id="C141" spans="43599~43601" text="C:" type="Inquiry" line="157" />
<COMMENT id="C142" spans="44007~44009" text="C:" type="Solution" line="158" />
<COMMENT id="C143" spans="44237~44239" text="C:" type="Solution" line="159" />
<COMMENT id="C144" spans="45649~45651" text="C:" type="Solution" line="160" />
<COMMENT id="C145" spans="47890~47892" text="C:" type="Solution" line="161" />
<COMMENT id="C146" spans="48169~48171" text="C:" type="Inquiry" line="162" />
<COMMENT id="C147" spans="49534~49536" text="C:" type="Solution" line="163" />
<COMMENT id="C148" spans="49853~49855" text="C:" type="Solution" line="164" />
<COMMENT id="C149" spans="50575~50577" text="C:" type="Solution" line="166" />
<COMMENT id="C150" spans="50709~50711" text="C:" line="167" type="Solution" />
<COMMENT id="C151" spans="50962~50964" text="C:" type="Solution" line="168" />
<COMMENT id="C152" spans="51007~51009" text="C:" type="Solution" line="169" />
<COMMENT id="C153" spans="51119~51121" text="C:" type="Solution" line="170" />
<COMMENT id="C154" spans="51468~51470" text="C:" type="Solution" line="171" />
<COMMENT id="C155" spans="52316~52318" text="C:" type="Inquiry" line="172" />
<COMMENT id="C156" spans="52363~52365" text="C:" type="Statement" line="173" />
<COMMENT id="C157" spans="52388~52390" text="C:" type="Reference" line="174" />
<COMMENT id="C158" spans="52895~52897" text="C:" type="Solution" line="175" />
<COMMENT id="C159" spans="53120~53122" text="C:" type="Solution" line="177" />
<COMMENT id="C160" spans="53217~53219" text="C:" type="Solution" line="178" />
<COMMENT id="C161" spans="53419~53421" text="C:" type="Solution" line="179" />
<COMMENT id="C162" spans="53576~53578" text="C:" type="Reference" line="180" />
<COMMENT id="C163" spans="53654~53656" text="C:" type="Reference" line="181" />
<COMMENT id="C164" spans="53820~53822" text="C:" type="Statement" line="182" />
<COMMENT id="C165" spans="53843~53845" text="C:" type="Reference" line="183" />
<COMMENT id="C166" spans="54144~54146" text="C:" type="Solution" line="184" />
<COMMENT id="C167" spans="54309~54311" text="C:" type="Statement" line="185" />
<COMMENT id="C169" spans="54454~54456" text="C:" type="Solution" line="187" />
<COMMENT id="C170" spans="55876~55878" text="C:" type="Removed" line="188" />
<COMMENT id="C171" spans="55889~55891" text="C:" type="Statement" line="189" />
<COMMENT id="C172" spans="56009~56011" text="C:" type="Solution" line="190" />
<COMMENT id="C173" spans="56463~56465" text="C:" type="Inquiry" line="191" />
<COMMENT id="C174" spans="56719~56721" text="C:" line="192" type="Statement" />
<COMMENT id="C175" spans="56839~56841" text="C:" type="Statement" line="193" />
<COMMENT id="C176" spans="56915~56917" text="C:" type="Solution" line="194" />
<COMMENT id="C177" spans="57010~57012" text="C:" type="Solution" line="195" />
<COMMENT id="C178" spans="57305~57307" text="C:" type="Solution" line="196" />
<COMMENT id="C179" spans="57661~57663" text="C:" type="Solution" line="198" />
<COMMENT id="C180" spans="57805~57807" text="C:" type="Solution" line="199" />
<COMMENT id="C181" spans="58317~58319" text="C:" type="Solution" line="200" />
<COMMENT id="C182" spans="58455~58457" text="C:" type="Solution" line="201" />
<COMMENT id="C183" spans="58518~58520" text="C:" type="Statement" line="202" />
<COMMENT id="C184" spans="58615~58617" text="C:" type="Solution" line="203" />
<COMMENT id="C185" spans="59257~59259" text="C:" type="Solution" line="204" />
<COMMENT id="C186" spans="59701~59703" text="C:" line="205" type="Solution" />
<COMMENT id="C187" spans="60140~60142" text="C:" line="206" type="Solution" />
<COMMENT id="C188" spans="60473~60475" text="C:" type="Solution" line="208" />
<COMMENT id="C189" spans="62042~62044" text="C:" type="Statement" line="209" />
<COMMENT id="C190" spans="62106~62108" text="C:" type="Solution" line="210" />
<COMMENT id="C191" spans="63965~63967" text="C:" type="Solution" line="211" />
<COMMENT id="C192" spans="64196~64198" text="C:" type="Solution" line="212" />
<COMMENT id="C193" spans="65893~65895" text="C:" type="Statement" line="213" />
<COMMENT id="C194" spans="66019~66021" text="C:" type="Solution" line="214" />
<COMMENT id="C195" spans="67286~67288" text="C:" type="Solution" line="215" />
<COMMENT id="C196" spans="67929~67931" text="C:" type="Solution" line="216" />
<COMMENT id="C197" spans="68287~68289" text="C:" type="Solution" line="217" />
<COMMENT id="C198" spans="69389~69391" text="C:" type="Solution" line="219" />
<COMMENT id="C199" spans="69814~69816" text="C:" type="Solution" line="220" />
<COMMENT id="C200" spans="70885~70887" text="C:" type="Solution" line="221" />
<COMMENT id="C201" spans="71124~71126" text="C:" type="Solution" line="222" />
<COMMENT id="C202" spans="71627~71629" text="C:" type="Solution" line="223" />
<COMMENT id="C203" spans="72032~72034" text="C:" type="Solution" line="224" />
<COMMENT id="C204" spans="73686~73688" text="C:" type="Solution" line="225" />
<COMMENT id="C205" spans="74590~74592" text="C:" type="Statement" line="226" />
<COMMENT id="C206" spans="75377~75379" text="C:" type="Solution" line="227" />
<COMMENT id="C207" spans="75540~75542" text="C:" type="Statement" line="228" />
<COMMENT id="C209" spans="75607~75609" text="C:" type="Solution" line="230" />
<COMMENT id="C210" spans="75918~75920" text="C:" type="Solution" line="231" />
<COMMENT id="C211" spans="76117~76119" text="C:" type="Solution" line="232" />
<COMMENT id="C212" spans="81362~81364" text="C:" type="Solution" line="233" />
<COMMENT id="C213" spans="82563~82565" text="C:" type="Solution" line="234" />
<COMMENT id="C214" spans="82804~82806" text="C:" type="Statement" line="235" />
<COMMENT id="C215" spans="82864~82866" text="C:" type="Statement" line="236" />
<COMMENT id="C216" spans="82941~82943" text="C:" type="Statement" line="237" />
<COMMENT id="C217" spans="83022~83024" text="C:" type="Statement" line="238" />
<COMMENT id="C218" spans="83144~83146" text="C:" type="Solution" line="240" />
<COMMENT id="C219" spans="83886~83888" text="C:" type="Solution" line="241" />
<COMMENT id="C220" spans="84203~84205" text="C:" type="Solution" line="242" />
<COMMENT id="C221" spans="84398~84400" text="C:" type="Statement" line="243" />
<COMMENT id="C222" spans="84783~84785" text="C:" type="Solution" line="244" />
<COMMENT id="C223" spans="85589~85591" text="C:" type="Inquiry" line="245" />
<COMMENT id="C224" spans="85621~85623" text="C:" type="Solution" line="246" />
<COMMENT id="C225" spans="86094~86096" text="C:" type="Solution" line="247" />
<COMMENT id="C226" spans="86157~86159" text="C:" type="Solution" line="248" />
<COMMENT id="C227" spans="86295~86297" text="C:" type="Statement" line="250" />
<COMMENT id="C228" spans="86367~86369" text="C:" type="Solution" line="251" />
<COMMENT id="C229" spans="86536~86538" text="C:" type="Solution" line="252" />
<COMMENT id="C230" spans="86824~86826" text="C:" type="Solution" line="253" />
<COMMENT id="C231" spans="86920~86922" text="C:" type="Solution" line="254" />
<COMMENT id="C232" spans="87378~87380" text="C:" type="Solution" line="255" />
<COMMENT id="C233" spans="87481~87483" text="C:" type="Solution" line="256" />
<COMMENT id="C234" spans="87612~87614" text="C:" type="Statement" line="257" />
<COMMENT id="C235" spans="87776~87778" text="C:" type="Solution" line="259" />
<COMMENT id="C236" spans="88497~88499" text="C:" type="Solution" line="260" />
<COMMENT id="C237" spans="88882~88884" text="C:" type="Solution" line="261" />
<COMMENT id="C238" spans="89214~89216" text="C:" type="Solution" line="262" />
<COMMENT id="C239" spans="91205~91207" text="C:" type="Solution" line="263" />
<COMMENT id="C240" spans="91289~91291" text="C:" type="Solution" line="264" />
<COMMENT id="C241" spans="91373~91375" text="C:" type="Statement" line="265" />
<COMMENT id="C242" spans="91540~91542" text="C:" type="Statement" line="266" />
<COMMENT id="C243" spans="91614~91616" text="C:" type="Solution" line="267" />
<COMMENT id="C244" spans="91899~91901" text="C:" type="Solution" line="268" />
<COMMENT id="C245" spans="92316~92318" text="C:" type="Solution" line="270" />
<COMMENT id="C246" spans="92685~92687" text="C:" type="Solution" line="271" />
<COMMENT id="C247" spans="92774~92776" text="C:" type="Solution" line="272" />
<COMMENT id="C248" spans="92847~92849" text="C:" type="Reference" line="273" />
<COMMENT id="C249" spans="92950~92952" text="C:" type="Reference" line="274" />
<COMMENT id="C250" spans="93142~93144" text="C:" type="Statement" line="275" />
<COMMENT id="C251" spans="93200~93202" text="C:" type="Solution" line="276" />
<COMMENT id="C252" spans="93230~93232" text="C:" type="Solution" line="277" />
<COMMENT id="C253" spans="93302~93304" text="C:" type="Solution" line="278" />
<COMMENT id="C254" spans="93331~93333" text="C:" type="Solution" line="279" />
<COMMENT id="C168" spans="93585~93587" text="C:" type="Solution" line="281" />
<COMMENT id="C208" spans="93775~93777" text="C:" type="Statement" line="282" />
<COMMENT id="C255" spans="93989~93991" text="C:" type="Solution" line="283" />
<COMMENT id="C256" spans="94132~94134" text="C:" type="Statement" line="284" />
<COMMENT id="C257" spans="94261~94263" text="C:" type="Statement" line="285" />
<COMMENT id="C258" spans="94383~94385" text="C:" type="Solution" line="286" />
<COMMENT id="C259" spans="94555~94557" text="C:" type="Statement" line="287" />
<COMMENT id="C260" spans="94608~94610" text="C:" type="Inquiry" line="288" />
<COMMENT id="C261" spans="94652~94654" text="C:" type="Inquiry" line="289" />
<COMMENT id="C262" spans="94721~94723" text="C:" type="Solution" line="290" />
<COMMENT id="C263" spans="95100~95102" text="C:" type="Solution" line="292" />
<COMMENT id="C264" spans="95193~95195" text="C:" type="Solution" line="293" />
<COMMENT id="C265" spans="95323~95325" text="C:" type="Solution" line="294" />
<COMMENT id="C266" spans="95877~95879" text="C:" type="Statement" line="295" />
<COMMENT id="C267" spans="95972~95974" text="C:" type="Statement" line="296" />
<COMMENT id="C268" spans="96490~96492" text="C:" type="Solution" line="297" />
<COMMENT id="C269" spans="97053~97055" text="C:" type="Solution" line="298" />
<COMMENT id="C270" spans="97129~97131" text="C:" type="Solution" line="299" />
<COMMENT id="C271" spans="97242~97244" text="C:" type="Solution" line="300" />
<COMMENT id="C272" spans="97566~97568" text="C:" type="Solution" line="301" />
<COMMENT id="C273" spans="98100~98102" text="C:" type="Solution" line="303" />
<COMMENT id="C274" spans="98606~98608" text="C:" type="Solution" line="304" />
<COMMENT id="C275" spans="98982~98984" text="C:" type="Solution" line="305" />
<COMMENT id="C276" spans="99857~99859" text="C:" type="Solution" line="306" />
<COMMENT id="C277" spans="100775~100777" text="C:" type="Solution" line="307" />
<COMMENT id="C278" spans="101198~101200" text="C:" type="Solution" line="308" />
<COMMENT id="C279" spans="101880~101882" text="C:" type="Solution" line="309" />
<COMMENT id="C280" spans="102203~102205" text="C:" type="Solution" line="310" />
<COMMENT id="C281" spans="102917~102919" text="C:" type="Solution" line="311" />
<COMMENT id="C282" spans="103412~103414" text="C:" type="Solution" line="312" />
<COMMENT id="C283" spans="103883~103885" text="C:" type="Statement" line="314" />
<COMMENT id="C284" spans="103967~103969" text="C:" type="Solution" line="315" />
<COMMENT id="C285" spans="104763~104765" text="C:" type="Solution" line="316" />
<COMMENT id="C286" spans="105790~105792" text="C:" type="Solution" line="317" />
<COMMENT id="C287" spans="106694~106696" text="C:" type="Solution" line="318" />
<COMMENT id="C288" spans="107489~107491" text="C:" type="Solution" line="319" />
<COMMENT id="C289" spans="107859~107861" text="C:" type="Statement" line="320" />
<COMMENT id="C290" spans="108289~108291" text="C:" type="Solution" line="321" />
<COMMENT id="C291" spans="108518~108520" text="C:" type="Statement" line="322" />
<COMMENT id="C292" spans="108674~108676" text="C:" type="Solution" line="323" />
<COMMENT id="C293" spans="109158~109160" text="C:" type="Solution" line="325" />
<COMMENT id="C294" spans="109426~109428" text="C:" type="Inquiry" line="326" />
<COMMENT id="C295" spans="109448~109450" text="C:" type="Statement" line="327" />
<COMMENT id="C296" spans="109510~109512" text="C:" type="Removed" line="328" />
<COMMENT id="C297" spans="109523~109525" text="C:" type="Solution" line="329" />
<COMMENT id="C298" spans="110983~110985" text="C:" line="330" type="Statement" />
<COMMENT id="C299" spans="111139~111141" text="C:" line="331" type="Statement" />
<COMMENT id="C300" spans="111229~111231" text="C:" type="Statement" line="332" />
<COMMENT id="C301" spans="111365~111367" text="C:" type="Statement" line="333" />
<COMMENT id="C302" spans="111389~111391" text="C:" type="Statement" line="334" />
<COMMENT id="C303" spans="111435~111437" text="C:" type="Solution" line="336" />
<COMMENT id="C304" spans="111699~111701" text="C:" type="Solution" line="337" />
<COMMENT id="C305" spans="111859~111861" text="C:" type="Solution" line="338" />
<COMMENT id="C306" spans="112230~112232" text="C:" type="Solution" line="339" />
<COMMENT id="C307" spans="112260~112262" text="C:" type="Solution" line="340" />
<COMMENT id="C308" spans="112591~112593" text="C:" type="Inquiry" line="341" />
<COMMENT id="C309" spans="112666~112668" text="C:" type="Statement" line="342" />
<COMMENT id="C310" spans="112733~112735" text="C:" type="Solution" line="343" />
<COMMENT id="C311" spans="112867~112869" text="C:" line="344" type="Solution" />
<COMMENT id="C312" spans="112986~112988" text="C:" type="Solution" line="345" />
<COMMENT id="C313" spans="113129~113131" text="C:" type="Solution" line="347" />
<COMMENT id="C314" spans="113183~113185" text="C:" type="Solution" line="348" />
<COMMENT id="C315" spans="113330~113332" text="C:" type="Solution" line="349" />
<COMMENT id="C316" spans="113999~114001" text="C:" type="Solution" line="350" />
<COMMENT id="C317" spans="114849~114851" text="C:" type="Solution" line="351" />
<COMMENT id="C318" spans="115542~115544" text="C:" type="Statement" line="352" />
<COMMENT id="C319" spans="116097~116099" text="C:" type="Statement" line="353" />
<COMMENT id="C320" spans="116177~116179" text="C:" type="Inquiry" line="354" />
<COMMENT id="C321" spans="116214~116216" text="C:" type="Statement" line="355" />
<COMMENT id="C322" spans="116413~116415" text="C:" type="Solution" line="357" />
<COMMENT id="C323" spans="117330~117332" text="C:" line="358" type="Solution" />
<COMMENT id="C324" spans="119942~119944" text="C:" type="Solution" line="359" />
<COMMENT id="C325" spans="120084~120086" text="C:" line="360" type="Statement" />
<COMMENT id="C326" spans="120397~120399" text="C:" type="Solution" line="361" />
<COMMENT id="C327" spans="120755~120757" text="C:" type="Solution" line="362" />
<COMMENT id="C328" spans="121181~121183" text="C:" type="Solution" line="363" />
<COMMENT id="C329" spans="121531~121533" text="C:" type="Statement" line="364" />
<COMMENT id="C330" spans="121671~121673" text="C:" type="Solution" line="365" />
<COMMENT id="C331" spans="122338~122340" text="C:" type="Statement" line="366" />
<COMMENT id="C332" spans="122413~122415" text="C:" type="Solution" line="368" />
<COMMENT id="C333" spans="122503~122505" text="C:" type="Solution" line="369" />
<COMMENT id="C334" spans="122920~122922" text="C:" type="Solution" line="370" />
<COMMENT id="C335" spans="122975~122977" text="C:" type="Solution" line="371" />
<COMMENT id="C336" spans="122994~122996" text="C:" type="Solution" line="372" />
<COMMENT id="C337" spans="123034~123036" text="C:" type="Statement" line="373" />
<COMMENT id="C338" spans="123063~123065" text="C:" type="Solution" line="374" />
<COMMENT id="C339" spans="123214~123216" text="C:" type="Statement" line="375" />
<COMMENT id="C340" spans="123349~123351" text="C:" type="Solution" line="376" />
<COMMENT id="C341" spans="123643~123645" text="C:" type="Reference" line="377" />
<COMMENT id="C342" spans="123803~123805" text="C:" type="Solution" line="379" />
<COMMENT id="C343" spans="123960~123962" text="C:" type="Solution" line="380" />
<COMMENT id="C344" spans="125635~125637" text="C:" type="Statement" line="381" />
<COMMENT id="C345" spans="125737~125739" text="C:" type="Inquiry" line="382" />
<COMMENT id="C346" spans="125793~125795" text="C:" type="Solution" line="383" />
<COMMENT id="C347" spans="126072~126074" text="C:" type="Solution" line="384" />
<COMMENT id="C348" spans="126486~126488" text="C:" type="Statement" line="385" />
<COMMENT id="C349" spans="127164~127166" text="C:" type="Solution" line="386" />
<COMMENT id="C350" spans="127364~127366" text="C:" type="Solution" line="387" />
<COMMENT id="C351" spans="127456~127458" text="C:" type="Solution" line="388" />
<COMMENT id="C352" spans="127803~127805" text="C:" type="Solution" line="390" />
<COMMENT id="C353" spans="128610~128612" text="C:" type="Solution" line="391" />
<COMMENT id="C354" spans="128619~128621" text="C:" type="Solution" line="392" />
<COMMENT id="C355" spans="128677~128679" text="C:" type="Solution" line="393" />
<COMMENT id="C356" spans="129411~129413" text="C:" type="Solution" line="394" />
<COMMENT id="C357" spans="129586~129588" text="C:" type="Solution" line="395" />
<COMMENT id="C358" spans="130852~130854" text="C:" line="396" type="Statement" />
<COMMENT id="C359" spans="131317~131319" text="C:" type="Statement" line="397" />
<COMMENT id="C360" spans="131438~131440" text="C:" type="Statement" line="398" />
<COMMENT id="C361" spans="131592~131594" text="C:" type="Statement" line="399" />
<COMMENT id="C362" spans="131748~131750" text="C:" type="Solution" line="401" />
<COMMENT id="C363" spans="131799~131801" text="C:" line="402" type="Solution" />
<COMMENT id="C364" spans="132250~132252" text="C:" type="Solution" line="403" />
<COMMENT id="C365" spans="132452~132454" text="C:" type="Solution" line="404" />
<COMMENT id="C366" spans="133266~133268" text="C:" type="Solution" line="405" />
<COMMENT id="C367" spans="134373~134375" text="C:" type="Solution" line="406" />
<COMMENT id="C368" spans="134687~134689" text="C:" type="Solution" line="407" />
<COMMENT id="C369" spans="135574~135576" text="C:" type="Solution" line="408" />
<COMMENT id="C370" spans="135647~135649" text="C:" type="Solution" line="409" />
<COMMENT id="C371" spans="135765~135767" text="C:" type="Statement" line="410" />
<COMMENT id="C372" spans="136280~136282" text="C:" type="Solution" line="412" />
<COMMENT id="C373" spans="137286~137288" text="C:" type="Statement" line="413" />
<COMMENT id="C374" spans="137294~137296" text="C:" type="Statement" line="414" />
<COMMENT id="C375" spans="137337~137339" text="C:" type="Solution" line="415" />
<COMMENT id="C376" spans="137401~137403" text="C:" type="Solution" line="416" />
<COMMENT id="C377" spans="137614~137616" text="C:" type="Solution" line="417" />
<COMMENT id="C378" spans="137686~137688" text="C:" type="Solution" line="418" />
<COMMENT id="C379" spans="137711~137713" text="C:" type="Solution" line="419" />
<COMMENT id="C380" spans="137797~137799" text="C:" type="Inquiry" line="420" />
<COMMENT id="C381" spans="137852~137854" text="C:" type="Statement" line="421" />
<COMMENT id="C382" spans="137999~138001" text="C:" type="Solution" line="423" />
<COMMENT id="C383" spans="138203~138205" text="C:" type="Solution" line="424" />
<COMMENT id="C384" spans="138330~138332" text="C:" type="Solution" line="425" />
<COMMENT id="C385" spans="138370~138372" text="C:" type="Solution" line="426" />
<COMMENT id="C386" spans="139242~139244" text="C:" type="Solution" line="427" />
<COMMENT id="C387" spans="139935~139937" text="C:" type="Statement" line="428" />
<COMMENT id="C388" spans="140025~140027" text="C:" type="Statement" line="429" />
<COMMENT id="C389" spans="140116~140118" text="C:" type="Statement" line="430" />
<COMMENT id="C390" spans="140184~140186" text="C:" type="Solution" line="431" />
<COMMENT id="C391" spans="140466~140468" text="C:" type="Inquiry" line="432" />
<COMMENT id="C392" spans="140707~140709" text="C:" type="Solution" line="434" />
<COMMENT id="C393" spans="140769~140771" text="C:" type="Solution" line="435" />
<COMMENT id="C394" spans="141149~141151" text="C:" type="Solution" line="436" />
<COMMENT id="C395" spans="141716~141718" text="C:" type="Solution" line="437" />
<COMMENT id="C396" spans="142112~142114" text="C:" type="Solution" line="438" />
<COMMENT id="C397" spans="142215~142217" text="C:" type="Solution" line="439" />
<COMMENT id="C398" spans="142237~142239" text="C:" type="Solution" line="440" />
<COMMENT id="C399" spans="142485~142487" text="C:" type="Solution" line="441" />
<COMMENT id="C400" spans="142836~142838" text="C:" type="Solution" line="442" />
<COMMENT id="C401" spans="143157~143159" text="C:" type="Statement" line="443" />
<COMMENT id="C402" spans="143319~143321" text="C:" type="Solution" line="445" />
<COMMENT id="C403" spans="143636~143638" text="C:" type="Solution" line="446" />
<COMMENT id="C404" spans="144200~144202" text="C:" type="Reference" line="447" />
<COMMENT id="C405" spans="144304~144306" text="C:" type="Reference" line="448" />
<COMMENT id="C406" spans="144440~144442" text="C:" type="Solution" line="449" />
<COMMENT id="C407" spans="144831~144833" text="C:" type="Statement" line="450" />
<COMMENT id="C408" spans="144902~144904" text="C:" type="Statement" line="451" />
<COMMENT id="C409" spans="144960~144962" text="C:" type="Statement" line="452" />
<COMMENT id="C410" spans="145229~145231" text="C:" type="Statement" line="453" />
<COMMENT id="C411" spans="145673~145675" text="C:" type="Statement" line="454" />
<COMMENT id="C412" spans="146049~146051" text="C:" type="Solution" line="456" />
<COMMENT id="C413" spans="147295~147297" text="C:" type="Solution" line="457" />
<COMMENT id="C414" spans="147671~147673" text="C:" type="Solution" line="458" />
<COMMENT id="C415" spans="149018~149020" text="C:" type="Solution" line="459" />
<COMMENT id="C416" spans="150344~150346" text="C:" type="Statement" line="460" />
<COMMENT id="C417" spans="150387~150389" text="C:" type="Solution" line="461" />
<COMMENT id="C418" spans="151365~151367" text="C:" type="Statement" line="462" />
<COMMENT id="C419" spans="151456~151458" text="C:" type="Solution" line="463" />
<COMMENT id="C420" spans="151574~151576" text="C:" type="Statement" line="464" />
<COMMENT id="C421" spans="153890~153892" text="C:" type="Reference" line="466" />
<COMMENT id="C422" spans="154167~154169" text="C:" type="Solution" line="467" />
<COMMENT id="C423" spans="155211~155213" text="C:" type="Solution" line="468" />
<COMMENT id="C424" spans="156739~156741" text="C:" type="Statement" line="469" />
<COMMENT id="C425" spans="156760~156762" text="C:" type="Statement" line="470" />
<COMMENT id="C426" spans="156783~156785" text="C:" type="Statement" line="471" />
<COMMENT id="C427" spans="156804~156806" text="C:" type="Reference" line="472" />
<COMMENT id="C428" spans="158294~158296" text="C:" type="Solution" line="474" />
<COMMENT id="C429" spans="158515~158517" text="C:" type="Reference" line="475" />
<COMMENT id="C430" spans="158814~158816" text="C:" type="Solution" line="476" />
<COMMENT id="C431" spans="159116~159118" text="C:" type="Reference" line="477" />
<COMMENT id="C432" spans="159327~159329" text="C:" type="Solution" line="478" />
<COMMENT id="C433" spans="159545~159547" text="C:" type="Solution" line="479" />
<COMMENT id="C434" spans="159585~159587" text="C:" type="Inquiry" line="480" />
<COMMENT id="C435" spans="159615~159617" text="C:" type="Reference" line="481" />
<COMMENT id="C436" spans="159675~159677" text="C:" type="Statement" line="482" />
<COMMENT id="C437" spans="159803~159805" text="C:" type="Reference" line="483" />
<COMMENT id="C438" spans="159971~159973" text="C:" type="Solution" line="485" />
<COMMENT id="C439" spans="160445~160447" text="C:" type="Solution" line="486" />
<COMMENT id="C440" spans="160816~160818" text="C:" type="Solution" line="487" />
<COMMENT id="C441" spans="161052~161054" text="C:" type="Solution" line="488" />
<COMMENT id="C442" spans="161300~161302" text="C:" type="Inquiry" line="489" />
<COMMENT id="C443" spans="161461~161463" text="C:" type="Solution" line="490" />
<COMMENT id="C444" spans="161816~161818" text="C:" type="Inquiry" line="491" />
<COMMENT id="C445" spans="161843~161845" text="C:" type="Statement" line="492" />
<COMMENT id="C446" spans="161959~161961" text="C:" type="Statement" line="493" />
<COMMENT id="C447" spans="162093~162095" text="C:" type="Statement" line="494" />
<COMMENT id="C448" spans="162331~162333" text="C:" type="Solution" line="496" />
<COMMENT id="C449" spans="162788~162790" text="C:" line="497" type="Solution" />
<COMMENT id="C450" spans="162877~162879" text="C:" type="Solution" line="498" />
<COMMENT id="C451" spans="163349~163351" text="C:" type="Solution" line="499" />
<COMMENT id="C452" spans="163389~163391" text="C:" type="Statement" line="500" />
<COMMENT id="C453" spans="163399~163401" text="C:" type="Statement" line="501" />
<COMMENT id="C454" spans="163415~163417" text="C:" type="Statement" line="502" />
<COMMENT id="C455" spans="163526~163528" text="C:" type="Solution" line="503" />
<COMMENT id="C456" spans="163901~163903" text="C:" type="Statement" line="504" />
<COMMENT id="C457" spans="164079~164081" text="C:" type="Reference" line="505" />
<COMMENT id="C459" spans="165061~165063" text="C:" type="Solution" line="507" />
<COMMENT id="C460" spans="165316~165318" text="C:" type="Solution" line="508" />
<COMMENT id="C461" spans="165554~165556" text="C:" type="Solution" line="509" />
<COMMENT id="C462" spans="166538~166540" text="C:" type="Solution" line="510" />
<COMMENT id="C463" spans="166613~166615" text="C:" type="Solution" line="511" />
<COMMENT id="C464" spans="166731~166733" text="C:" type="Solution" line="512" />
<COMMENT id="C465" spans="166866~166868" text="C:" type="Solution" line="513" />
<COMMENT id="C466" spans="166956~166958" text="C:" type="Statement" line="514" />
<COMMENT id="C467" spans="167022~167024" text="C:" type="Inquiry" line="515" />
<COMMENT id="C468" spans="167045~167047" text="C:" type="Solution" line="516" />
<COMMENT id="C469" spans="167231~167233" text="C:" type="Solution" line="518" />
<COMMENT id="C470" spans="167386~167388" text="C:" type="Reference" line="519" />
<COMMENT id="C471" spans="167645~167647" text="C:" type="Solution" line="520" />
<COMMENT id="C472" spans="167766~167768" text="C:" type="Solution" line="521" />
<COMMENT id="C473" spans="168186~168188" text="C:" type="Solution" line="522" />
<COMMENT id="C474" spans="168686~168688" text="C:" type="Statement" line="523" />
<COMMENT id="C475" spans="168719~168721" text="C:" type="Statement" line="524" />
<COMMENT id="C476" spans="168759~168761" text="C:" type="Statement" line="525" />
<COMMENT id="C477" spans="168871~168873" text="C:" type="Solution" line="526" />
<COMMENT id="C478" spans="169621~169623" text="C:" type="Solution" line="527" />
<COMMENT id="C479" spans="170321~170323" text="C:" type="Solution" line="529" />
<COMMENT id="C480" spans="172966~172968" text="C:" type="Statement" line="530" />
<COMMENT id="C481" spans="173082~173084" text="C:" type="Solution" line="531" />
<COMMENT id="C482" spans="173724~173726" text="C:" type="Inquiry" line="532" />
<COMMENT id="C483" spans="174152~174154" text="C:" type="Solution" line="533" />
<COMMENT id="C484" spans="174284~174286" text="C:" type="Solution" line="534" />
<COMMENT id="C485" spans="175066~175068" text="C:" type="Solution" line="535" />
<COMMENT id="C486" spans="175916~175918" text="C:" type="Solution" line="536" />
<COMMENT id="C487" spans="178082~178084" text="C:" type="Solution" line="537" />
<COMMENT id="C488" spans="178161~178163" text="C:" type="Solution" line="538" />
<COMMENT id="C489" spans="178314~178316" text="C:" type="Statement" line="540" />
<COMMENT id="C490" spans="178339~178341" text="C:" type="Statement" line="541" />
<COMMENT id="C491" spans="178482~178484" text="C:" line="542" type="Statement" />
<COMMENT id="C492" spans="178597~178599" text="C:" type="Inquiry" line="543" />
<COMMENT id="C493" spans="178870~178872" text="C:" type="Statement" line="544" />
<COMMENT id="C494" spans="178893~178895" text="C:" type="Statement" line="545" />
<COMMENT id="C495" spans="179032~179034" text="C:" type="Statement" line="546" />
<COMMENT id="C496" spans="179501~179503" text="C:" type="Statement" line="547" />
<COMMENT id="C497" spans="179652~179654" text="C:" type="Statement" line="548" />
<COMMENT id="C498" spans="179665~179667" text="C:" type="Statement" line="549" />
<COMMENT id="C499" spans="179915~179917" text="C:" type="Statement" line="551" />
<COMMENT id="C500" spans="179987~179989" text="C:" type="Statement" line="552" />
<COMMENT id="C501" spans="180045~180047" text="C:" type="Statement" line="553" />
<COMMENT id="C502" spans="180111~180113" text="C:" type="Statement" line="554" />
<COMMENT id="C503" spans="180158~180160" text="C:" type="Inquiry" line="555" />
<COMMENT id="C504" spans="180215~180217" text="C:" type="Inquiry" line="556" />
<COMMENT id="C505" spans="180230~180232" text="C:" type="Statement" line="557" />
<COMMENT id="C506" spans="180249~180251" text="C:" type="Statement" line="558" />
<COMMENT id="C507" spans="180307~180309" text="C:" type="Inquiry" line="559" />
<COMMENT id="C508" spans="180327~180329" text="C:" type="Inquiry" line="560" />
<COMMENT id="C510" spans="180447~180449" text="C:" type="Solution" line="562" />
<COMMENT id="C511" spans="180609~180611" text="C:" type="Removed" line="563" />
<COMMENT id="C512" spans="180622~180624" text="C:" type="Inquiry" line="564" />
<COMMENT id="C513" spans="180814~180816" text="C:" type="Statement" line="565" />
<COMMENT id="C514" spans="180844~180846" text="C:" type="Inquiry" line="566" />
<COMMENT id="C515" spans="180901~180903" text="C:" type="Removed" line="567" />
<COMMENT id="C516" spans="180914~180916" text="C:" type="Inquiry" line="568" />
<COMMENT id="C517" spans="180991~180993" text="C:" type="Solution" line="569" />
<COMMENT id="C518" spans="181375~181377" text="C:" type="Statement" line="570" />
<COMMENT id="C519" spans="181399~181401" text="C:" type="Solution" line="571" />
<COMMENT id="C520" spans="181798~181800" text="C:" type="Solution" line="573" />
<COMMENT id="C521" spans="181946~181948" text="C:" type="Solution" line="574" />
<COMMENT id="C522" spans="182218~182220" text="C:" type="Solution" line="575" />
<COMMENT id="C523" spans="182440~182442" text="C:" type="Solution" line="576" />
<COMMENT id="C524" spans="182806~182808" text="C:" type="Solution" line="577" />
<COMMENT id="C525" spans="183408~183410" text="C:" type="Statement" line="578" />
<COMMENT id="C526" spans="183432~183434" text="C:" type="Statement" line="579" />
<COMMENT id="C527" spans="183494~183496" text="C:" type="Statement" line="580" />
<COMMENT id="C528" spans="184026~184028" text="C:" type="Solution" line="581" />
<COMMENT id="C529" spans="184420~184422" text="C:" type="Solution" line="583" />
<COMMENT id="C530" spans="184497~184499" text="C:" type="Reference" line="584" />
<COMMENT id="C531" spans="184649~184651" text="C:" type="Solution" line="585" />
<COMMENT id="C532" spans="185119~185121" text="C:" type="Solution" line="586" />
<COMMENT id="C533" spans="185655~185657" text="C:" type="Statement" line="587" />
<COMMENT id="C534" spans="185667~185669" text="C:" line="588" type="Reference" />
<COMMENT id="C535" spans="185957~185959" text="C:" type="Solution" line="589" />
<COMMENT id="C536" spans="186065~186067" text="C:" type="Statement" line="590" />
<COMMENT id="C537" spans="186074~186076" text="C:" type="Statement" line="591" />
<COMMENT id="C538" spans="186249~186251" text="C:" type="Statement" line="592" />
<COMMENT id="C539" spans="186530~186532" text="C:" type="Reference" line="594" />
<COMMENT id="C540" spans="186724~186726" text="C:" type="Inquiry" line="595" />
<COMMENT id="C541" spans="186772~186774" text="C:" type="Solution" line="596" />
<COMMENT id="C542" spans="187239~187241" text="C:" type="Statement" line="597" />
<COMMENT id="C543" spans="187248~187250" text="C:" type="Statement" line="598" />
<COMMENT id="C544" spans="187275~187277" text="C:" type="Solution" line="599" />
<COMMENT id="C545" spans="187570~187572" text="C:" type="Statement" line="600" />
<COMMENT id="C546" spans="187606~187608" text="C:" type="Inquiry" line="601" />
<COMMENT id="C547" spans="187624~187626" text="C:" type="Statement" line="602" />
<COMMENT id="C548" spans="187795~187797" text="C:" type="Statement" line="604" />
<COMMENT id="C549" spans="187935~187937" text="C:" type="Statement" line="605" />
<COMMENT id="C550" spans="188071~188073" text="C:" type="Inquiry" line="606" />
<COMMENT id="C551" spans="188142~188144" text="C:" type="Statement" line="607" />
<COMMENT id="C552" spans="188581~188583" text="C:" type="Removed" line="608" />
<COMMENT id="C553" spans="188594~188596" text="C:" type="Statement" line="609" />
<COMMENT id="C554" spans="188772~188774" text="C:" type="Statement" line="610" />
<COMMENT id="C555" spans="188808~188810" text="C:" type="Statement" line="611" />
<COMMENT id="C556" spans="189076~189078" text="C:" type="Statement" line="612" />
<COMMENT id="C557" spans="189167~189169" text="C:" type="Statement" line="613" />
<COMMENT id="C558" spans="189383~189385" text="C:" type="Reference" line="615" />
<COMMENT id="C559" spans="189928~189930" text="C:" type="Solution" line="616" />
<COMMENT id="C560" spans="190565~190567" text="C:" type="Removed" line="617" />
<COMMENT id="C561" spans="190578~190580" text="C:" type="Statement" line="618" />
<COMMENT id="C562" spans="190727~190729" text="C:" line="619" type="Statement" />
<COMMENT id="C563" spans="190861~190863" text="C:" type="Statement" line="620" />
<COMMENT id="C564" spans="191760~191762" text="C:" type="Statement" line="621" />
<COMMENT id="C565" spans="191846~191848" text="C:" type="Statement" line="622" />
<COMMENT id="C566" spans="192259~192261" text="C:" type="Removed" line="623" />
<COMMENT id="C567" spans="192272~192274" text="C:" type="Inquiry" line="624" />
<COMMENT id="C568" spans="192481~192483" text="C:" type="Inquiry" line="626" />
<COMMENT id="C569" spans="192564~192566" text="C:" type="Inquiry" line="627" />
<COMMENT id="C570" spans="192615~192617" text="C:" type="Removed" line="628" />
<COMMENT id="C571" spans="192628~192630" text="C:" type="Inquiry" line="629" />
<COMMENT id="C572" spans="192672~192674" text="C:" type="Statement" line="630" />
<COMMENT id="C573" spans="192771~192773" text="C:" type="Inquiry" line="631" />
<COMMENT id="C574" spans="192816~192818" text="C:" type="Statement" line="632" />
<COMMENT id="C575" spans="192976~192978" text="C:" type="Statement" line="633" />
<COMMENT id="C576" spans="193050~193052" text="C:" type="Statement" line="634" />
<COMMENT id="C577" spans="193182~193184" text="C:" type="Statement" line="635" />
<COMMENT id="C578" spans="193563~193565" text="C:" type="Removed" line="637" />
<COMMENT id="C579" spans="193576~193578" text="C:" type="Statement" line="638" />
<COMMENT id="C580" spans="193733~193735" text="C:" type="Solution" line="639" />
<COMMENT id="C581" spans="193861~193863" text="C:" type="Solution" line="640" />
<COMMENT id="C582" spans="194148~194150" text="C:" type="Solution" line="641" />
<COMMENT id="C583" spans="194519~194521" text="C:" type="Statement" line="642" />
<COMMENT id="C584" spans="194594~194596" text="C:" type="Statement" line="643" />
<COMMENT id="C585" spans="194668~194670" text="C:" type="Statement" line="644" />
<COMMENT id="C586" spans="194709~194711" text="C:" type="Statement" line="645" />
<COMMENT id="C587" spans="194745~194747" text="C:" type="Solution" line="646" />
<COMMENT id="C588" spans="195234~195236" text="C:" type="Solution" line="648" />
<COMMENT id="C589" spans="195549~195551" text="C:" type="Solution" line="649" />
<COMMENT id="C590" spans="196056~196058" text="C:" type="Solution" line="650" />
<COMMENT id="C591" spans="196086~196088" text="C:" type="Solution" line="651" />
<COMMENT id="C592" spans="196230~196232" text="C:" type="Removed" line="652" />
<COMMENT id="C458" spans="196243~196245" text="C:" type="Statement" line="653" />
<COMMENT id="C509" spans="196488~196490" text="C:" type="Statement" line="654" />
<COMMENT id="C593" spans="196685~196687" text="C:" type="Solution" line="655" />
<COMMENT id="C594" spans="197054~197056" text="C:" type="Removed" line="656" />
<COMMENT id="C595" spans="197067~197069" text="C:" type="Solution" line="657" />
<COMMENT id="C596" spans="197741~197743" text="C:" type="Solution" line="659" />
<COMMENT id="C597" spans="197878~197880" text="C:" type="Solution" line="660" />
<COMMENT id="C598" spans="198090~198092" text="C:" type="Solution" line="661" />
<COMMENT id="C599" spans="198716~198718" text="C:" type="Inquiry" line="662" />
<COMMENT id="C600" spans="198863~198865" text="C:" type="Statement" line="663" />
<COMMENT id="C601" spans="198919~198921" text="C:" type="Removed" line="664" />
<COMMENT id="C602" spans="198932~198934" text="C:" type="Statement" line="665" />
<COMMENT id="C603" spans="199292~199294" text="C:" type="Statement" line="666 " />
<COMMENT id="C604" spans="199460~199462" text="C:" type="Statement" line="667" />
<COMMENT id="C605" spans="199503~199505" text="C:" type="Statement" line="668" />
<COMMENT id="C606" spans="199664~199666" text="C:" type="Solution" line="670" />
<COMMENT id="C607" spans="199736~199738" text="C:" type="Statement" line="671" />
<COMMENT id="C608" spans="199811~199813" text="C:" type="Solution" line="672" />
<COMMENT id="C609" spans="200308~200310" text="C:" type="Solution" line="673" />
<COMMENT id="C610" spans="200539~200541" text="C:" type="Reference" line="674" />
<COMMENT id="C611" spans="200612~200614" text="C:" type="Statement" line="675" />
<COMMENT id="C612" spans="200654~200656" text="C:" type="Statement" line="676" />
<COMMENT id="C613" spans="200754~200756" text="C:" type="Statement" line="677" />
<COMMENT id="C614" spans="200802~200804" text="C:" type="Removed" line="678" />
<COMMENT id="C615" spans="200815~200817" text="C:" type="Statement" line="679" />
<COMMENT id="C616" spans="201014~201016" text="C:" type="Solution" line="681" />
<COMMENT id="C617" spans="201195~201197" text="C:" type="Reference" line="682" />
<COMMENT id="C618" spans="201341~201343" text="C:" type="Removed" line="683" />
<COMMENT id="C619" spans="201354~201356" text="C:" type="Solution" line="684" />
<COMMENT id="C620" spans="201488~201490" text="C:" type="Solution" line="685" />
<COMMENT id="C621" spans="201606~201608" text="C:" type="Statement" line="686" />
<COMMENT id="C622" spans="201747~201749" text="C:" type="Statement" line="687" />
<COMMENT id="C623" spans="201991~201993" text="C:" type="Solution" line="688" />
<COMMENT id="C624" spans="202078~202080" text="C:" line="689" type="Statement" />
<COMMENT id="C625" spans="202136~202138" text="C:" type="Statement" line="690" />
<COMMENT id="C626" spans="202360~202362" text="C:" type="Solution" line="692" />
<COMMENT id="C627" spans="202619~202621" text="C:" line="693" type="Statement" />
<COMMENT id="C628" spans="203536~203538" text="C:" type="Statement" line="694" />
<COMMENT id="C629" spans="203782~203784" text="C:" type="Statement" line="695" />
<COMMENT id="C630" spans="204014~204016" text="C:" type="Solution" line="696" />
<COMMENT id="C631" spans="204199~204201" text="C:" type="Inquiry" line="697" />
<COMMENT id="C632" spans="204413~204415" text="C:" type="Solution" line="698" />
<COMMENT id="C633" spans="205025~205027" text="C:" type="Statement" line="699" />
<COMMENT id="C634" spans="205387~205389" text="C:" type="Solution" line="700" />
<COMMENT id="C635" spans="206233~206235" text="C:" type="Statement" line="701" />
<COMMENT id="C636" spans="206385~206387" text="C:" type="Reference" line="703" />
<COMMENT id="C637" spans="206464~206466" text="C:" type="Inquiry" line="704" />
<COMMENT id="C638" spans="206490~206492" text="C:" type="Statement" line="705" />
<COMMENT id="C639" spans="206613~206615" text="C:" type="Solution" line="706" />
<COMMENT id="C640" spans="207187~207189" text="C:" type="Solution" line="707" />
<COMMENT id="C641" spans="207277~207279" text="C:" type="Statement" line="708" />
<COMMENT id="C642" spans="207365~207367" text="C:" type="Statement" line="709" />
<COMMENT id="C643" spans="207429~207431" text="C:" type="Statement" line="710" />
<COMMENT id="C644" spans="207447~207449" text="C:" type="Statement" line="711" />
<COMMENT id="C645" spans="207629~207631" text="C:" type="Reference" line="712" />
<COMMENT id="C646" spans="207885~207887" text="C:" type="Reference" line="714" />
<COMMENT id="C647" spans="207953~207955" text="C:" type="Inquiry" line="715" />
<COMMENT id="C648" spans="208009~208011" text="C:" type="Statement" line="716" />
<COMMENT id="C649" spans="208527~208529" text="C:" type="Solution" line="717" />
<COMMENT id="C650" spans="208645~208647" text="C:" type="Inquiry" line="718" />
<COMMENT id="C651" spans="208679~208681" text="C:" type="Statement" line="719" />
<COMMENT id="C652" spans="208848~208850" text="C:" type="Statement" line="720" />
<COMMENT id="C653" spans="208922~208924" text="C:" type="Solution" line="721" />
<COMMENT id="C654" spans="209031~209033" text="C:" type="Solution" line="722" />
<COMMENT id="C655" spans="209290~209292" text="C:" type="Solution" line="723" />
<COMMENT id="C656" spans="209584~209586" text="C:" type="Solution" line="725" />
<COMMENT id="C657" spans="211448~211450" text="C:" type="Inquiry" line="726" />
<COMMENT id="C658" spans="211619~211621" text="C:" type="Statement" line="727" />
<COMMENT id="C659" spans="211639~211641" text="C:" type="Statement" line="728" />
<COMMENT id="C660" spans="211773~211775" text="C:" type="Solution" line="729" />
<COMMENT id="C661" spans="211925~211927" text="C:" type="Solution" line="730" />
<COMMENT id="C662" spans="212367~212369" text="C:" type="Inquiry" line="731" />
<COMMENT id="C663" spans="212520~212522" text="C:" type="Reference" line="732" />
<COMMENT id="C664" spans="212793~212795" text="C:" type="Statement" line="733" />
<COMMENT id="C665" spans="213101~213103" text="C:" type="Statement" line="734" />
<COMMENT id="C666" spans="213274~213276" text="C:" type="Statement" line="736" />
<COMMENT id="C667" spans="213552~213554" text="C:" type="Statement" line="737" />
<COMMENT id="C668" spans="213775~213777" text="C:" type="Statement" line="738" />
<COMMENT id="C669" spans="214092~214094" text="C:" type="Inquiry" line="739" />
<COMMENT id="C670" spans="214222~214224" text="C:" type="Solution" line="740" />
<COMMENT id="C671" spans="215184~215186" text="C:" type="Statement" line="741" />
<COMMENT id="C672" spans="215311~215313" text="C:" type="Statement" line="742" />
<COMMENT id="C673" spans="215429~215431" text="C:" line="743" type="Solution" />
<COMMENT id="C674" spans="215822~215824" text="C:" type="Statement" line="744" />
<COMMENT id="C675" spans="215885~215887" text="C:" type="Statement" line="745" />
<COMMENT id="C676" spans="216270~216272" text="C:" type="Solution" line="747" />
<COMMENT id="C677" spans="216377~216379" text="C:" type="Solution" line="748" />
<COMMENT id="C678" spans="217346~217348" text="C:" type="Reference" line="749" />
<COMMENT id="C679" spans="217448~217450" text="C:" type="Statement" line="750" />
<COMMENT id="C680" spans="217648~217650" text="C:" type="Statement" line="751" />
<COMMENT id="C681" spans="217905~217907" text="C:" type="Statement" line="752" />
<COMMENT id="C682" spans="218031~218033" text="C:" type="Reference" line="753" />
<COMMENT id="C683" spans="218044~218046" text="C:" type="Solution" line="754" />
<COMMENT id="C684" spans="218328~218330" text="C:" type="Solution" line="755" />
<COMMENT id="C685" spans="219477~219479" text="C:" type="Statement" line="756" />
<COMMENT id="C686" spans="220653~220655" text="C:" type="Statement" line="758" />
<COMMENT id="C687" spans="220663~220665" text="C:" type="Statement" line="759" />
<COMMENT id="C688" spans="221158~221160" text="C:" type="Inquiry" line="760" />
<COMMENT id="C689" spans="221235~221237" text="C:" type="Solution" line="761" />
<COMMENT id="C690" spans="221335~221337" text="C:" type="Statement" line="762" />
<COMMENT id="C691" spans="221560~221562" text="C:" type="Solution" line="763" />
<COMMENT id="C692" spans="222836~222838" text="C:" type="Solution" line="764" />
<COMMENT id="C693" spans="222899~222901" text="C:" type="Solution" line="765" />
<COMMENT id="C694" spans="222967~222969" text="C:" type="Statement" line="766" />
<COMMENT id="C695" spans="223010~223012" text="C:" type="Statement" line="767" />
<COMMENT id="C696" spans="223310~223312" text="C:" type="Solution" line="769" />
<COMMENT id="C697" spans="223499~223501" text="C:" type="Statement" line="770" />
<COMMENT id="C698" spans="223609~223611" text="C:" type="Inquiry" line="771" />
<COMMENT id="C699" spans="223783~223785" text="C:" type="Removed" line="772" />
<COMMENT id="C700" spans="223796~223798" text="C:" type="Inquiry" line="773" />
<COMMENT id="C701" spans="224132~224134" text="C:" type="Statement" line="774" />
<COMMENT id="C702" spans="224280~224282" text="C:" type="Inquiry" line="775" />
<COMMENT id="C703" spans="224368~224370" text="C:" type="Statement" line="776" />
<COMMENT id="C704" spans="224379~224381" text="C:" type="Statement" line="777" />
<COMMENT id="C705" spans="224443~224445" text="C:" type="Solution" line="778" />
<COMMENT id="C706" spans="224755~224757" text="C:" type="Statement" line="780" />
<COMMENT id="C707" spans="224817~224819" text="C:" type="Inquiry" line="781" />
<COMMENT id="C708" spans="224897~224899" text="C:" type="Statement" line="782" />
<COMMENT id="C709" spans="224915~224917" text="C:" type="Removed" line="783" />
<COMMENT id="C710" spans="224928~224930" text="C:" type="Statement" line="784" />
<COMMENT id="C711" spans="225005~225007" text="C:" type="Statement" line="785" />
<COMMENT id="C712" spans="225062~225064" text="C:" type="Statement" line="786" />
<COMMENT id="C713" spans="225095~225097" text="C:" type="Statement" line="787" />
<COMMENT id="C714" spans="225602~225604" text="C:" type="Statement" line="789" />
<COMMENT id="C715" spans="225654~225656" text="C:" type="Statement" line="790" />
<COMMENT id="C716" spans="225993~225995" text="C:" type="Solution" line="791" />
<COMMENT id="C717" spans="226048~226050" text="C:" type="Solution" line="792" />
<COMMENT id="C718" spans="226091~226093" text="C:" type="Inquiry" line="793" />
<COMMENT id="C719" spans="226118~226120" text="C:" type="Statement" line="794" />
<COMMENT id="C720" spans="226263~226265" text="C:" type="Statement" line="795" />
<COMMENT id="C721" spans="226296~226298" text="C:" type="Statement" line="796" />
<COMMENT id="C722" spans="226316~226318" text="C:" type="Inquiry" line="797" />
<COMMENT id="C723" spans="226355~226357" text="C:" type="Statement" line="798" />
<COMMENT id="C724" spans="226407~226409" text="C:" type="Statement" line="799" />
<COMMENT id="C725" spans="226418~226420" text="C:" type="Statement" line="800" />
<COMMENT id="C726" spans="226522~226524" text="C:" type="Solution" line="802" />
<COMMENT id="C727" spans="227014~227016" text="C:" type="Reference" line="803" />
<COMMENT id="C728" spans="228254~228256" text="C:" type="Solution" line="804" />
<COMMENT id="C729" spans="228599~228601" text="C:" type="Statement" line="805" />
<COMMENT id="C730" spans="228929~228931" text="C:" type="Solution" line="806" />
<COMMENT id="C731" spans="229338~229340" text="C:" type="Reference" line="807" />
<COMMENT id="C732" spans="230286~230288" text="C:" type="Inquiry" line="808" />
<COMMENT id="C733" spans="230463~230465" text="C:" type="Solution" line="809" />
<COMMENT id="C734" spans="230898~230900" text="C:" type="Solution" line="810" />
<COMMENT id="C735" spans="232006~232008" text="C:" type="Solution" line="811" />
<COMMENT id="C737" spans="232268~232270" text="C:" type="Solution" line="813" />
<COMMENT id="C738" spans="232323~232325" text="C:" type="Reference" line="814" />
<COMMENT id="C739" spans="232404~232406" text="C:" type="Statement" line="815" />
<COMMENT id="C740" spans="232858~232860" text="C:" type="Statement" line="816" />
<COMMENT id="C741" spans="233148~233150" text="C:" type="Solution" line="817" />
<COMMENT id="C742" spans="233220~233222" text="C:" type="Statement" line="818" />
<COMMENT id="C743" spans="233252~233254" text="C:" type="Statement" line="819" />
<COMMENT id="C744" spans="233351~233353" text="C:" type="Solution" line="820" />
<COMMENT id="C745" spans="233618~233620" text="C:" type="Solution" line="821" />
<COMMENT id="C746" spans="233877~233879" text="C:" type="Solution" line="822" />
<COMMENT id="C747" spans="234187~234189" text="C:" type="Solution" line="824" />
<COMMENT id="C748" spans="234359~234361" text="C:" line="825" type="Solution" />
<COMMENT id="C749" spans="234691~234693" text="C:" type="Solution" line="826" />
<COMMENT id="C750" spans="235264~235266" text="C:" type="Solution" line="827" />
<COMMENT id="C751" spans="235773~235775" text="C:" type="Solution" line="828" />
<COMMENT id="C752" spans="236134~236136" text="C:" type="Statement" line="829" />
<COMMENT id="C753" spans="236153~236155" text="C:" type="Solution" line="830" />
<COMMENT id="C754" spans="236601~236603" text="C:" type="Reference" line="831" />
<COMMENT id="C755" spans="236754~236756" text="C:" type="Removed" line="832" />
<COMMENT id="C756" spans="236767~236769" text="C:" type="Solution" line="833" />
<COMMENT id="C757" spans="237314~237316" text="C:" type="Solution" line="835" />
<COMMENT id="C758" spans="237450~237452" text="C:" type="Solution" line="836" />
<COMMENT id="C759" spans="237484~237486" text="C:" type="Reference" line="837" />
<COMMENT id="C760" spans="237872~237874" text="C:" type="Inquiry" line="838" />
<COMMENT id="C761" spans="237938~237940" text="C:" type="Statement" line="839" />
<COMMENT id="C762" spans="237963~237965" text="C:" type="Solution" line="840" />
<COMMENT id="C763" spans="238135~238137" text="C:" type="Solution" line="841" />
<COMMENT id="C764" spans="238616~238618" text="C:" type="Solution" line="842" />
<COMMENT id="C765" spans="238800~238802" text="C:" type="Solution" line="843" />
<COMMENT id="C766" spans="238881~238883" text="C:" type="Reference" line="844" />
<COMMENT id="C767" spans="239047~239049" text="C:" type="Solution" line="846" />
<COMMENT id="C768" spans="239133~239135" text="C:" type="Solution" line="847" />
<COMMENT id="C769" spans="239272~239274" text="C:" type="Reference" line="848" />
<COMMENT id="C770" spans="239409~239411" text="C:" type="Inquiry" line="849" />
<COMMENT id="C771" spans="239537~239539" text="C:" type="Reference" line="850" />
<COMMENT id="C772" spans="239865~239867" text="C:" type="Solution" line="851" />
<COMMENT id="C773" spans="239962~239964" text="C:" type="Statement" line="852" />
<COMMENT id="C774" spans="240041~240043" text="C:" type="Statement" line="853" />
<COMMENT id="C775" spans="240066~240068" text="C:" type="Inquiry" line="854" />
<COMMENT id="C776" spans="240087~240089" text="C:" type="Statement" line="855" />
<COMMENT id="C777" spans="240233~240235" text="C:" type="Solution" line="857" />
<COMMENT id="C778" spans="240497~240499" text="C:" type="Solution" line="858" />
<COMMENT id="C779" spans="240622~240624" text="C:" type="Solution" line="859" />
<COMMENT id="C780" spans="240926~240928" text="C:" type="Statement" line="860" />
<COMMENT id="C781" spans="241446~241448" text="C:" type="Solution" line="861" />
<COMMENT id="C782" spans="242073~242075" text="C:" type="Solution" line="862" />
<COMMENT id="C783" spans="242322~242324" text="C:" type="Solution" line="863" />
<COMMENT id="C784" spans="242762~242764" text="C:" type="Solution" line="864" />
<COMMENT id="C785" spans="243493~243495" text="C:" type="Solution" line="865" />
<COMMENT id="C786" spans="243602~243604" text="C:" type="Statement" line="866" />
<COMMENT id="C787" spans="243804~243806" text="C:" type="Solution" line="868" />
<COMMENT id="C788" spans="244038~244040" text="C:" type="Solution" line="869" />
<COMMENT id="C789" spans="245450~245452" text="C:" type="Solution" line="870" />
<COMMENT id="C790" spans="246282~246284" text="C:" type="Solution" line="871" />
<COMMENT id="C791" spans="246576~246578" text="C:" type="Solution" line="872" />
<COMMENT id="C792" spans="246738~246740" text="C:" type="Solution" line="873" />
<COMMENT id="C793" spans="247137~247139" text="C:" type="Solution" line="874" />
<COMMENT id="C794" spans="248616~248618" text="C:" type="Solution" line="875" />
<COMMENT id="C795" spans="249629~249631" text="C:" type="Statement" line="876" />
<COMMENT id="C796" spans="250380~250382" text="C:" type="Statement" line="877" />
<COMMENT id="C797" spans="250868~250870" text="C:" type="Solution" line="879" />
<COMMENT id="C798" spans="250969~250971" text="C:" type="Solution" line="880" />
<COMMENT id="C799" spans="251074~251076" text="C:" type="Solution" line="881" />
<COMMENT id="C800" spans="252080~252082" text="C:" type="Solution" line="882" />
<COMMENT id="C801" spans="252377~252379" text="C:" type="Solution" line="883" />
<COMMENT id="C802" spans="252742~252744" text="C:" type="Solution" line="884" />
<COMMENT id="C803" spans="253102~253104" text="C:" type="Reference" line="885" />
<COMMENT id="C804" spans="253328~253330" text="C:" type="Solution" line="886" />
<COMMENT id="C805" spans="254074~254076" text="C:" type="Solution" line="887" />
<COMMENT id="C806" spans="254362~254364" text="C:" type="Solution" line="888" />
<COMMENT id="C807" spans="254662~254664" text="C:" type="Statement" line="890" />
<COMMENT id="C808" spans="255020~255022" text="C:" line="891" type="Statement" />
<COMMENT id="C809" spans="255221~255223" text="C:" type="Solution" line="892" />
<COMMENT id="C810" spans="255674~255676" text="C:" type="Statement" line="893" />
<COMMENT id="C811" spans="255770~255772" text="C:" type="Solution" line="894" />
<COMMENT id="C812" spans="255885~255887" text="C:" type="Solution" line="895" />
<COMMENT id="C813" spans="256339~256341" text="C:" type="Solution" line="896" />
<COMMENT id="C814" spans="256545~256547" text="C:" type="Solution" line="897" />
<COMMENT id="C815" spans="256691~256693" text="C:" type="Statement" line="898" />
<COMMENT id="C816" spans="256716~256718" text="C:" type="Statement" line="899" />
<COMMENT id="C817" spans="256888~256890" text="C:" type="Solution" line="901" />
<COMMENT id="C818" spans="257439~257441" text="C:" type="Solution" line="902" />
<COMMENT id="C819" spans="257595~257597" text="C:" type="Solution" line="903" />
<COMMENT id="C820" spans="257637~257639" text="C:" type="Solution" line="904" />
<COMMENT id="C821" spans="257689~257691" text="C:" type="Solution" line="905" />
<COMMENT id="C822" spans="257959~257961" text="C:" type="Statement" line="906" />
<COMMENT id="C823" spans="258083~258085" text="C:" type="Statement" line="907" />
<COMMENT id="C824" spans="258129~258131" text="C:" type="Inquiry" line="908" />
<COMMENT id="C825" spans="258176~258178" text="C:" type="Solution" line="909" />
<COMMENT id="C826" spans="258590~258592" text="C:" type="Statement" line="910" />
<COMMENT id="C827" spans="258752~258754" text="C:" type="Solution" line="912" />
<COMMENT id="C828" spans="259609~259611" text="C:" type="Statement" line="913" />
<COMMENT id="C829" spans="259723~259725" text="C:" type="Solution" line="914" />
<COMMENT id="C830" spans="260178~260180" text="C:" type="Solution" line="915" />
<COMMENT id="C831" spans="260450~260452" text="C:" type="Solution" line="916" />
<COMMENT id="C832" spans="260925~260927" text="C:" type="Solution" line="917" />
<COMMENT id="C833" spans="263116~263118" text="C:" type="Solution" line="918" />
<COMMENT id="C834" spans="263477~263479" text="C:" type="Removed" line="919" />
<COMMENT id="C835" spans="263490~263492" text="C:" type="Solution" line="920" />
<COMMENT id="C836" spans="263589~263591" text="C:" type="Solution" line="921" />
<COMMENT id="C837" spans="264155~264157" text="C:" type="Solution" line="923" />
<COMMENT id="C838" spans="264272~264274" text="C:" type="Solution" line="924" />
<COMMENT id="C839" spans="264600~264602" text="C:" type="Statement" line="925" />
<COMMENT id="C840" spans="264614~264616" text="C:" type="Solution" line="926" />
<COMMENT id="C841" spans="264766~264768" text="C:" type="Solution" line="927" />
<COMMENT id="C842" spans="265477~265479" text="C:" type="Solution" line="928" />
<COMMENT id="C843" spans="265725~265727" text="C:" type="Solution" line="929" />
<COMMENT id="C844" spans="266098~266100" text="C:" type="Statement" line="930" />
<COMMENT id="C845" spans="266226~266228" text="C:" type="Removed" line="931" />
<COMMENT id="C846" spans="266483~266485" text="C:" type="Statement" line="933" />
<COMMENT id="C847" spans="266562~266564" text="C:" type="Statement" line="934" />
<COMMENT id="C848" spans="266852~266854" text="C:" type="Reference" line="935" />
<COMMENT id="C849" spans="266999~267001" text="C:" type="Inquiry" line="936" />
<COMMENT id="C850" spans="267023~267025" text="C:" type="Statement" line="937" />
<COMMENT id="C851" spans="267278~267280" text="C:" type="Solution" line="938" />
<COMMENT id="C852" spans="268144~268146" text="C:" type="Statement" line="939" />
<COMMENT id="C853" spans="268194~268196" text="C:" type="Statement" line="940" />
<COMMENT id="C854" spans="268284~268286" text="C:" line="941" type="Solution" />
<COMMENT id="C855" spans="268466~268468" text="C:" type="Statement" line="942" />
<COMMENT id="C856" spans="268757~268759" text="C:" type="Solution" line="944" />
<COMMENT id="C857" spans="269063~269065" text="C:" type="Removed" line="945" />
<COMMENT id="C858" spans="269076~269078" text="C:" type="Solution" line="946" />
<COMMENT id="C859" spans="269907~269909" text="C:" type="Solution" line="947" />
<COMMENT id="C860" spans="272840~272842" text="C:" type="Solution" line="948" />
<COMMENT id="C861" spans="273032~273034" text="C:" type="Solution" line="949" />
<COMMENT id="C862" spans="273207~273209" text="C:" type="Statement" line="950" />
<COMMENT id="C863" spans="273705~273707" text="C:" type="Statement" line="951" />
<COMMENT id="C864" spans="273795~273797" text="C:" type="Statement" line="952" />
<COMMENT id="C865" spans="274423~274425" text="C:" type="Solution" line="953" />
<COMMENT id="C866" spans="275109~275111" text="C:" type="Removed" line="955" />
<COMMENT id="C867" spans="275122~275124" text="C:" type="Solution" line="956" />
<COMMENT id="C868" spans="275152~275154" text="C:" type="Inquiry" line="957" />
<COMMENT id="C869" spans="275224~275226" text="C:" type="Solution" line="958" />
<COMMENT id="C870" spans="275754~275756" text="C:" type="Statement" line="959" />
<COMMENT id="C871" spans="275819~275821" text="C:" type="Solution" line="960" />
<COMMENT id="C872" spans="276312~276314" text="C:" type="Solution" line="961" />
<COMMENT id="C873" spans="276755~276757" text="C:" type="Inquiry" line="962" />
<COMMENT id="C874" spans="276882~276884" text="C:" type="Solution" line="963" />
<COMMENT id="C875" spans="277766~277768" text="C:" type="Removed" line="964" />
<COMMENT id="C876" spans="277870~277872" text="C:" type="Solution" line="966" />
<COMMENT id="C877" spans="278038~278040" text="C:" type="Solution" line="967" />
<COMMENT id="C878" spans="278194~278196" text="C:" type="Solution" line="968" />
<COMMENT id="C879" spans="278354~278356" text="C:" type="Solution" line="969" />
<COMMENT id="C880" spans="278714~278716" text="C:" type="Solution" line="970" />
<COMMENT id="C881" spans="279023~279025" text="C:" type="Solution" line="971" />
<COMMENT id="C882" spans="279240~279242" text="C:" type="Statement" line="972" />
<COMMENT id="C883" spans="279441~279443" text="C:" type="Statement" line="973" />
<COMMENT id="C884" spans="279594~279596" text="C:" type="Statement" line="974" />
<COMMENT id="C885" spans="279639~279641" text="C:" type="Inquiry" line="975" />
<COMMENT id="C886" spans="279797~279799" text="C:" type="Solution" line="977" />
<COMMENT id="C887" spans="280190~280192" text="C:" type="Solution" line="978" />
<COMMENT id="C888" spans="280383~280385" text="C:" type="Solution" line="979" />
<COMMENT id="C889" spans="280695~280697" text="C:" type="Solution" line="980" />
<COMMENT id="C890" spans="280805~280807" text="C:" type="Solution" line="981" />
<COMMENT id="C891" spans="281005~281007" text="C:" type="Statement" line="982" />
<COMMENT id="C892" spans="281096~281098" text="C:" type="Solution" line="983" />
<COMMENT id="C893" spans="282022~282024" text="C:" type="Statement" line="984" />
<COMMENT id="C894" spans="282041~282043" text="C:" type="Statement" line="985" />
<COMMENT id="C895" spans="282125~282127" text="C:" type="Solution" line="986" />
<COMMENT id="C896" spans="282853~282855" text="C:" type="Solution" line="988" />
<COMMENT id="C897" spans="283553~283555" text="C:" type="Inquiry" line="989" />
<COMMENT id="C898" spans="283668~283670" text="C:" type="Solution" line="990" />
<COMMENT id="C899" spans="290715~290717" text="C:" type="Solution" line="991" />
<COMMENT id="C900" spans="290777~290779" text="C:" type="Solution" line="992" />
<COMMENT id="C901" spans="291223~291225" text="C:" type="Solution" line="993" />
<COMMENT id="C902" spans="291819~291821" text="C:" type="Solution" line="994" />
<COMMENT id="C903" spans="292092~292094" text="C:" type="Solution" line="995" />
<COMMENT id="C904" spans="292654~292656" text="C:" type="Statement" line="996" />
<COMMENT id="C905" spans="292913~292915" text="C:" type="Solution" line="997" />
<COMMENT id="C906" spans="293099~293101" text="C:" type="Statement" line="999" />
<COMMENT id="C907" spans="293198~293200" text="C:" type="Removed" line="1000" />
<COMMENT id="C736" spans="293211~293213" text="C:" type="Inquiry" line="1001" />
<COMMENT id="C908" spans="293381~293383" text="C:" type="Statement" line="1002" />
<COMMENT id="C909" spans="293411~293413" text="C:" type="Statement" line="1003" />
<COMMENT id="C910" spans="293502~293504" text="C:" line="1004" type="Solution" />
<COMMENT id="C911" spans="293683~293685" text="C:" type="Statement" line="1005" />
<COMMENT id="C912" spans="293707~293709" text="C:" type="Statement" line="1006" />
<COMMENT id="C913" spans="293773~293775" text="C:" type="Reference" line="1007" />
<COMMENT id="C914" spans="297756~297758" text="C:" type="Solution" line="1009" />
<COMMENT id="C915" spans="298019~298021" text="C:" type="Inquiry" line="1010" />
<COMMENT id="C916" spans="298067~298069" text="C:" type="Inquiry" line="1011" />
<COMMENT id="C917" spans="298226~298228" text="C:" type="Statement" line="1012" />
<COMMENT id="C918" spans="298288~298290" text="C:" type="Reference" line="1013" />
<COMMENT id="C919" spans="302022~302024" text="C:" type="Statement" line="1014" />
<COMMENT id="C920" spans="302044~302046" text="C:" type="Solution" line="1015" />
<COMMENT id="C921" spans="302423~302425" text="C:" type="Inquiry" line="1016" />
<COMMENT id="C922" spans="302659~302661" text="C:" type="Solution" line="1017" />
<COMMENT id="C923" spans="303156~303158" text="C:" type="Statement" line="1018" />
<COMMENT id="C924" spans="303541~303543" text="C:" type="Solution" line="1020" />
<COMMENT id="C925" spans="303647~303649" text="C:" type="Solution" line="1021" />
<COMMENT id="C926" spans="303776~303778" text="C:" type="Solution" line="1022" />
<COMMENT id="C927" spans="303831~303833" text="C:" type="Solution" line="1023" />
<COMMENT id="C928" spans="303984~303986" text="C:" type="Solution" line="1024" />
<COMMENT id="C929" spans="304098~304100" text="C:" type="Statement" line="1025" />
<COMMENT id="C930" spans="304141~304143" text="C:" type="Solution" line="1026" />
<COMMENT id="C931" spans="304263~304265" text="C:" type="Statement" line="1027" />
<COMMENT id="C932" spans="304357~304359" text="C:" type="Statement" line="1028" />
<COMMENT id="C933" spans="304684~304686" text="C:" type="Statement" line="1029" />
<COMMENT id="C934" spans="304975~304977" text="C:" type="Solution" line="1031" />
<COMMENT id="C935" spans="305257~305259" text="C:" type="Solution" line="1032" />
<COMMENT id="C936" spans="305647~305649" text="C:" type="Solution" line="1033" />
<COMMENT id="C937" spans="305793~305795" text="C:" type="Solution" line="1034" />
<COMMENT id="C938" spans="305939~305941" text="C:" line="1035" type="Solution" />
<COMMENT id="C939" spans="305962~305964" text="C:" type="Solution" line="1036" />
<COMMENT id="C940" spans="306085~306087" text="C:" type="Statement" line="1037" />
<COMMENT id="C941" spans="306099~306101" text="C:" type="Statement" line="1038" />
<COMMENT id="C942" spans="306201~306203" text="C:" type="Inquiry" line="1039" />
<COMMENT id="C943" spans="306560~306562" text="C:" type="Solution" line="1041" />
<COMMENT id="C944" spans="306605~306607" text="C:" type="Solution" line="1042" />
<COMMENT id="C945" spans="306759~306761" text="C:" type="Statement" line="1043" />
<COMMENT id="C946" spans="306821~306823" text="C:" type="Inquiry" line="1044" />
<COMMENT id="C947" spans="306967~306969" text="C:" type="Solution" line="1045" />
<COMMENT id="C948" spans="306998~307000" text="C:" type="Statement" line="1046" />
<COMMENT id="C949" spans="307031~307033" text="C:" type="Statement" line="1047" />
<COMMENT id="C950" spans="307077~307079" text="C:" type="Solution" line="1048" />
<COMMENT id="C951" spans="307278~307280" text="C:" type="Statement" line="1049" />
<COMMENT id="C952" spans="307312~307314" text="C:" type="Statement" line="1050" />
<COMMENT id="C953" spans="307376~307378" text="C:" type="Inquiry" line="1052" />
<COMMENT id="C954" spans="307472~307474" text="C:" type="Solution" line="1053" />
<COMMENT id="C955" spans="307509~307511" text="C:" type="Inquiry" line="1054" />
<COMMENT id="C956" spans="307719~307721" text="C:" type="Reference" line="1055" />
<COMMENT id="C957" spans="307732~307734" text="C:" type="Solution" line="1056" />
<COMMENT id="C958" spans="307798~307800" text="C:" type="Statement" line="1057" />
<COMMENT id="C959" spans="307838~307840" text="C:" type="Statement" line="1058" />
<COMMENT id="C960" spans="308073~308075" text="C:" type="Solution" line="1059" />
<COMMENT id="C961" spans="308139~308141" text="C:" type="Statement" line="1060" />
<COMMENT id="C962" spans="308166~308168" text="C:" type="Statement" line="1061" />
<COMMENT id="C963" spans="308249~308251" text="C:" type="Solution" line="1063" />
<COMMENT id="C964" spans="308391~308393" text="C:" type="Solution" line="1064" />
<COMMENT id="C965" spans="308751~308753" text="C:" type="Solution" line="1065" />
<COMMENT id="C966" spans="308985~308987" text="C:" type="Solution" line="1066" />
<COMMENT id="C967" spans="309167~309169" text="C:" type="Inquiry" line="1067" />
<COMMENT id="C968" spans="309459~309461" text="C:" type="Solution" line="1068" />
<COMMENT id="C969" spans="310575~310577" text="C:" type="Solution" line="1069" />
<COMMENT id="C970" spans="310884~310886" text="C:" type="Solution" line="1070" />
<COMMENT id="C971" spans="311074~311076" text="C:" type="Statement" line="1071" />
<COMMENT id="C972" spans="311404~311406" text="C:" type="Statement" line="1072" />
<COMMENT id="C973" spans="311849~311851" text="C:" type="Inquiry" line="1074" />
<COMMENT id="C974" spans="311892~311894" text="C:" type="Statement" line="1075" />
<COMMENT id="C975" spans="311937~311939" text="C:" type="Statement" line="1076" />
<COMMENT id="C976" spans="311963~311965" text="C:" type="Inquiry" line="1077" />
<COMMENT id="C977" spans="311999~312001" text="C:" type="Statement" line="1078" />
<COMMENT id="C978" spans="312018~312020" text="C:" type="Solution" line="1079" />
<COMMENT id="C979" spans="312398~312400" text="C:" type="Solution" line="1080" />
<COMMENT id="C980" spans="312507~312509" text="C:" type="Statement" line="1081" />
<COMMENT id="C981" spans="312662~312664" text="C:" type="Reference" line="1082" />
<COMMENT id="C982" spans="312838~312840" text="C:" type="Reference" line="1083" />
<COMMENT id="C983" spans="312975~312977" text="C:" type="Solution" line="1085" />
<COMMENT id="C984" spans="313043~313045" text="C:" type="Solution" line="1086" />
<COMMENT id="C985" spans="313131~313133" text="C:" type="Statement" line="1087" />
<COMMENT id="C986" spans="313222~313224" text="C:" type="Statement" line="1088" />
<COMMENT id="C987" spans="313253~313255" text="C:" type="Solution" line="1089" />
<COMMENT id="C988" spans="313498~313500" text="C:" type="Statement" line="1090" />
<COMMENT id="C989" spans="313542~313544" text="C:" type="Statement" line="1091" />
<COMMENT id="C990" spans="314045~314047" text="C:" type="Statement" line="1092" />
<COMMENT id="C991" spans="314078~314080" text="C:" type="Statement" line="1093" />
<COMMENT id="C992" spans="314304~314306" text="C:" type="Inquiry" line="1094" />
<COMMENT id="C993" spans="314496~314498" text="C:" type="Statement" line="1096" />
<COMMENT id="C994" spans="314589~314591" text="C:" type="Removed" line="1097" />
<COMMENT id="C995" spans="314725~314727" text="C:" type="Solution" line="1099" />
<COMMENT id="C996" spans="314810~314812" text="C:" type="Solution" line="1100" />
<COMMENT id="C997" spans="315213~315215" text="C:" type="Solution" line="1101" />
<COMMENT id="C998" spans="315658~315660" text="C:" type="Solution" line="1102" />
<COMMENT id="C999" spans="315867~315869" text="C:" type="Solution" line="1103" />
<COMMENT id="C1000" spans="316260~316262" text="C:" type="Solution" line="1104" />
<COMMENT id="C1001" spans="316404~316406" text="C:" type="Solution" line="1105" />
<COMMENT id="C1002" spans="316558~316560" text="C:" type="Solution" line="1106" />
<COMMENT id="C1003" spans="316656~316658" text="C:" type="Solution" line="1107" />
<COMMENT id="C1004" spans="316691~316693" text="C:" type="Solution" line="1108" />
<COMMENT id="C1005" spans="317724~317726" text="C:" type="Solution" line="1110" />
<COMMENT id="C1006" spans="317773~317775" text="C:" type="Removed" line="1111" />
<COMMENT id="C1007" spans="317862~317864" text="C:" type="Solution" line="1112" />
<COMMENT id="C1008" spans="317909~317911" text="C:" type="Inquiry" line="1113" />
<COMMENT id="C1009" spans="318075~318077" text="C:" type="Statement" line="1114" />
<COMMENT id="C1010" spans="318096~318098" text="C:" type="Statement" line="1115" />
<COMMENT id="C1011" spans="318148~318150" text="C:" type="Solution" line="1116" />
<COMMENT id="C1012" spans="318227~318229" text="C:" type="Statement" line="1117" />
<COMMENT id="C1013" spans="318354~318356" text="C:" type="Solution" line="1118" />
<COMMENT id="C1014" spans="319095~319097" text="C:" type="Statement" line="1119" />
<COMMENT id="C1015" spans="319263~319265" text="C:" type="Solution" line="1121" />
<COMMENT id="C1016" spans="319407~319409" text="C:" type="Solution" line="1122" />
<COMMENT id="C1017" spans="319462~319464" text="C:" type="Statement" line="1123" />
<COMMENT id="C1018" spans="319473~319475" text="C:" type="Statement" line="1124" />
<COMMENT id="C1019" spans="319483~319485" text="C:" type="Solution" line="1125" />
<COMMENT id="C1020" spans="319629~319631" text="C:" type="Statement" line="1126" />
<COMMENT id="C1021" spans="319637~319639" text="C:" type="Statement" line="1127" />
<COMMENT id="C1022" spans="319691~319693" text="C:" type="Statement" line="1128" />
<COMMENT id="C1023" spans="319702~319704" text="C:" type="Statement" line="1129" />
<COMMENT id="C1024" spans="319868~319870" text="C:" type="Statement" line="1130" />
<COMMENT id="C1025" spans="320384~320386" text="C:" type="Solution" line="1132" />
<COMMENT id="C1026" spans="320540~320542" text="C:" type="Solution" line="1133" />
<COMMENT id="C1027" spans="320730~320732" text="C:" type="Statement" line="1134" />
<COMMENT id="C1028" spans="320776~320778" text="C:" type="Solution" line="1135" />
<COMMENT id="C1029" spans="320825~320827" text="C:" type="Solution" line="1136" />
<COMMENT id="C1030" spans="321103~321105" text="C:" type="Solution" line="1137" />
<COMMENT id="C1031" spans="321210~321212" text="C:" type="Reference" line="1138" />
<COMMENT id="C1032" spans="321268~321270" text="C:" type="Inquiry" line="1139" />
<COMMENT id="C1033" spans="321354~321356" text="C:" type="Solution" line="1140" />
<COMMENT id="C1034" spans="321428~321430" text="C:" type="Statement" line="1141" />
<COMMENT id="C1035" spans="321516~321518" text="C:" type="Solution" line="1143" />
<COMMENT id="C1036" spans="321541~321543" text="C:" type="Solution" line="1144" />
<COMMENT id="C1037" spans="322521~322523" text="C:" type="Solution" line="1145" />
<COMMENT id="C1038" spans="322545~322547" text="C:" type="Reference" line="1146" />
<COMMENT id="C1039" spans="322723~322725" text="C:" type="Statement" line="1147" />
<COMMENT id="C1040" spans="322741~322743" text="C:" type="Statement" line="1148" />
<COMMENT id="C1041" spans="323163~323165" text="C:" type="Statement" line="1149" />
<COMMENT id="C1042" spans="323341~323343" text="C:" type="Solution" line="1150" />
<COMMENT id="C1043" spans="323890~323892" text="C:" type="Solution" line="1151" />
<COMMENT id="C1044" spans="324129~324131" text="C:" type="Solution" line="1152" />
<COMMENT id="C1045" spans="324639~324641" text="C:" type="Inquiry" line="1154" />
<COMMENT id="C1046" spans="324757~324759" text="C:" type="Solution" line="1155" />
<COMMENT id="C1047" spans="324799~324801" text="C:" type="Solution" line="1156" />
<COMMENT id="C1048" spans="324973~324975" text="C:" type="Solution" line="1157" />
<COMMENT id="C1049" spans="325068~325070" text="C:" type="Solution" line="1158" />
<COMMENT id="C1050" spans="325101~325103" text="C:" type="Statement" line="1159" />
<COMMENT id="C1051" spans="325131~325133" text="C:" type="Statement" line="1160" />
<COMMENT id="C1052" spans="325241~325243" text="C:" type="Statement" line="1161" />
<COMMENT id="C1053" spans="325260~325262" text="C:" type="Inquiry" line="1162" />
<COMMENT id="C1054" spans="325291~325293" text="C:" type="Solution" line="1163" />
<COMMENT id="C1055" spans="325419~325421" text="C:" type="Statement" line="1165" />
<COMMENT id="C1056" spans="325449~325451" text="C:" type="Reference" line="1166" />
<COMMENT id="C1057" spans="325551~325553" text="C:" type="Inquiry" line="1167" />
<COMMENT id="C1058" spans="325573~325575" text="C:" type="Statement" line="1168" />
<COMMENT id="C1059" spans="325643~325645" text="C:" type="Solution" line="1169" />
<COMMENT id="C1060" spans="325766~325768" text="C:" type="Inquiry" line="1170" />
<COMMENT id="C1061" spans="325883~325885" text="C:" type="Solution" line="1171" />
<COMMENT id="C1062" spans="325946~325948" text="C:" type="Statement" line="1172" />
<COMMENT id="C1063" spans="325996~325998" text="C:" type="Solution" line="1173" />
<COMMENT id="C1064" spans="326205~326207" text="C:" type="Statement" line="1174" />
<COMMENT id="C1065" spans="326377~326379" text="C:" type="Statement" line="1176" />
<COMMENT id="C1066" spans="326426~326428" text="C:" type="Statement" line="1177" />
<COMMENT id="C1067" spans="326493~326495" text="C:" type="Inquiry" line="1178" />
<COMMENT id="C1068" spans="326519~326521" text="C:" type="Statement" line="1179" />
<COMMENT id="C1069" spans="326559~326561" text="C:" type="Solution" line="1180" />
<COMMENT id="C1070" spans="326624~326626" text="C:" type="Statement" line="1181" />
<COMMENT id="C1071" spans="326680~326682" text="C:" type="Statement" line="1182" />
<COMMENT id="C1072" spans="326779~326781" text="C:" type="Solution" line="1183" />
<COMMENT id="C1073" spans="326981~326983" text="C:" type="Solution" line="1185" />
<COMMENT id="C1074" spans="327025~327027" text="C:" type="Reference" line="1186" />
<COMMENT id="C1075" spans="327282~327284" text="C:" type="Statement" line="1187" />
<COMMENT id="C1076" spans="327320~327322" text="C:" type="Inquiry" line="1188" />
<COMMENT id="C1077" spans="327573~327575" text="C:" type="Solution" line="1189" />
<COMMENT id="C1078" spans="327811~327813" text="C:" type="Reference" line="1190" />
<COMMENT id="C1079" spans="329105~329107" text="C:" type="Solution" line="1191" />
<COMMENT id="C1080" spans="329596~329598" text="C:" type="Solution" line="1192" />
<COMMENT id="C1081" spans="329693~329695" text="C:" type="Solution" line="1193" />
<COMMENT id="C1082" spans="329856~329858" text="C:" type="Solution" line="1194" />
<COMMENT id="C1083" spans="330012~330014" text="C:" type="Solution" line="1196" />
<COMMENT id="C1084" spans="330206~330208" text="C:" type="Statement" line="1197" />
<COMMENT id="C1085" spans="330244~330246" text="C:" type="Statement" line="1198" />
<COMMENT id="C1086" spans="330274~330276" text="C:" type="Statement" line="1199" />
<COMMENT id="C1087" spans="330293~330295" text="C:" type="Statement" line="1200" />
<COMMENT id="C1088" spans="330397~330399" text="C:" type="Statement" line="1201" />
<COMMENT id="C1089" spans="330526~330528" text="C:" type="Statement" line="1202" />
<COMMENT id="C1090" spans="330607~330609" text="C:" type="Inquiry" line="1203" />
<COMMENT id="C1091" spans="330617~330619" text="C:" type="Inquiry" line="1204" />
<COMMENT id="C1092" spans="330632~330634" text="C:" type="Reference" line="1205" />
<COMMENT id="C1093" spans="330844~330846" text="C:" type="Solution" line="1207" />
<COMMENT id="C1094" spans="331003~331005" text="C:" type="Solution" line="1208" />
<COMMENT id="C1095" spans="331228~331230" text="C:" type="Inquiry" line="1209" />
<COMMENT id="C1096" spans="331661~331663" text="C:" type="Solution" line="1210" />
<COMMENT id="C1097" spans="332004~332006" text="C:" type="Statement" line="1211" />
<COMMENT id="C1098" spans="338053~338055" text="C:" type="Statement" line="1212" />
<COMMENT id="C1099" spans="338124~338126" text="C:" type="Statement" line="1213" />
<COMMENT id="C1100" spans="338713~338715" text="C:" type="Statement" line="1214" />
<COMMENT id="C1101" spans="339202~339204" text="C:" type="Statement" line="1215" />
<COMMENT id="C1102" spans="339287~339289" text="C:" type="Statement" line="1216" />
<COMMENT id="C1103" spans="339419~339421" text="C:" type="Solution" line="1218" />
<COMMENT id="C1104" spans="339516~339518" text="C:" type="Solution" line="1219" />
<COMMENT id="C1105" spans="340014~340016" text="C:" type="Solution" line="1220" />
<COMMENT id="C1106" spans="340162~340164" text="C:" type="Solution" line="1221" />
<COMMENT id="C1107" spans="340623~340625" text="C:" type="Statement" line="1222" />
<COMMENT id="C1108" spans="340680~340682" text="C:" type="Statement" line="1223" />
<COMMENT id="C1109" spans="340874~340876" text="C:" type="Solution" line="1224" />
<COMMENT id="C1110" spans="341134~341136" text="C:" type="Statement" line="1225" />
<COMMENT id="C1111" spans="341174~341176" text="C:" type="Statement" line="1226" />
<COMMENT id="C1112" spans="341237~341239" text="C:" type="Statement" line="1227" />
<COMMENT id="C1114" spans="341353~341355" text="C:" type="Statement" line="1229" />
<COMMENT id="C1115" spans="341385~341387" text="C:" type="Reference" line="1230" />
<COMMENT id="C1116" spans="341424~341426" text="C:" type="Statement" line="1231" />
<COMMENT id="C1117" spans="341672~341674" text="C:" type="Statement" line="1232" />
<COMMENT id="C1118" spans="341694~341696" text="C:" type="Reference" line="1233" />
<COMMENT id="C1119" spans="341885~341887" text="C:" type="Statement" line="1234" />
<COMMENT id="C1120" spans="341910~341912" text="C:" type="Statement" line="1235" />
<COMMENT id="C1121" spans="341987~341989" text="C:" type="Statement" line="1236" />
<COMMENT id="C1122" spans="342051~342053" text="C:" type="Statement" line="1237" />
<COMMENT id="C1123" spans="342125~342127" text="C:" line="1239" type="Solution" />
<COMMENT id="C1124" spans="342745~342747" text="C:" type="Solution" line="1240" />
<COMMENT id="C1125" spans="343042~343044" text="C:" type="Solution" line="1241" />
<COMMENT id="C1126" spans="343393~343395" text="C:" type="Reference" line="1242" />
<COMMENT id="C1127" spans="343572~343574" text="C:" type="Statement" line="1243" />
<COMMENT id="C1128" spans="343614~343616" text="C:" type="Statement" line="1244" />
<COMMENT id="C1129" spans="351514~351516" text="C:" type="Solution" line="1245" />
<COMMENT id="C1130" spans="351638~351640" text="C:" type="Inquiry" line="1246" />
<COMMENT id="C1131" spans="351731~351733" text="C:" type="Statement" line="1247" />
<COMMENT id="C1132" spans="351788~351790" text="C:" type="Reference" line="1248" />
<COMMENT id="C1133" spans="351961~351963" text="C:" type="Statement" line="1250" />
<COMMENT id="C1134" spans="352075~352077" text="C:" type="Removed" line="1251" />
<COMMENT id="C1135" spans="352088~352090" text="C:" type="Statement" line="1252" />
<COMMENT id="C1136" spans="352100~352102" text="C:" type="Statement" line="1253" />
<COMMENT id="C1137" spans="352125~352127" text="C:" type="Inquiry" line="1254" />
<COMMENT id="C1138" spans="352149~352151" text="C:" line="1255" type="Statement" />
<COMMENT id="C1139" spans="352240~352242" text="C:" type="Solution" line="1256" />
<COMMENT id="C1140" spans="352461~352463" text="C:" type="Solution" line="1257" />
<COMMENT id="C1141" spans="352488~352490" text="C:" type="Statement" line="1258" />
<COMMENT id="C1142" spans="352523~352525" text="C:" type="Statement" line="1259" />
<COMMENT id="C1143" spans="352623~352625" text="C:" type="Inquiry" line="1261" />
<COMMENT id="C1144" spans="352846~352848" text="C:" type="Inquiry" line="1262" />
<COMMENT id="C1145" spans="352952~352954" text="C:" type="Inquiry" line="1263" />
<COMMENT id="C1146" spans="353148~353150" text="C:" type="Solution" line="1264" />
<COMMENT id="C1147" spans="354172~354174" text="C:" type="Solution" line="1265" />
<COMMENT id="C1148" spans="354200~354202" text="C:" type="Solution" line="1266" />
<COMMENT id="C1149" spans="354338~354340" text="C:" type="Statement" line="1267" />
<COMMENT id="C1150" spans="354361~354363" text="C:" type="Reference" line="1268" />
<COMMENT id="C1151" spans="354426~354428" text="C:" type="Inquiry" line="1269" />
<COMMENT id="C1152" spans="354526~354528" text="C:" type="Statement" line="1270" />
<COMMENT id="C1153" spans="354685~354687" text="C:" type="Solution" line="1272" />
<COMMENT id="C1154" spans="355576~355578" text="C:" type="Solution" line="1273" />
<COMMENT id="C1155" spans="355701~355703" text="C:" type="Solution" line="1274" />
<COMMENT id="C1156" spans="356019~356021" text="C:" type="Statement" line="1275" />
<COMMENT id="C1157" spans="356194~356196" text="C:" type="Reference" line="1276" />
<COMMENT id="C1158" spans="356497~356499" text="C:" type="Solution" line="1277" />
<COMMENT id="C1159" spans="356657~356659" text="C:" type="Solution" line="1278" />
<COMMENT id="C1160" spans="357477~357479" text="C:" type="Statement" line="1279" />
<COMMENT id="C1161" spans="357759~357761" text="C:" type="Statement" line="1280" />
<COMMENT id="C1162" spans="357960~357962" text="C:" type="Removed" line="1281" />
<COMMENT id="C1163" spans="358056~358058" text="C:" type="Statement" line="1283" />
<COMMENT id="C1164" spans="358158~358160" text="C:" type="Solution" line="1284" />
<COMMENT id="C1165" spans="358468~358470" text="C:" type="Inquiry" line="1285" />
<COMMENT id="C1166" spans="358716~358718" text="C:" type="Reference" line="1286" />
<COMMENT id="C1167" spans="359025~359027" text="C:" type="Solution" line="1287" />
<COMMENT id="C1168" spans="359175~359177" text="C:" type="Solution" line="1288" />
<COMMENT id="C1169" spans="359423~359425" text="C:" type="Statement" line="1289" />
<COMMENT id="C1170" spans="359534~359536" text="C:" type="Statement" line="1290" />
<COMMENT id="C1171" spans="359576~359578" text="C:" type="Solution" line="1291" />
<COMMENT id="C1172" spans="359737~359739" text="C:" line="1292" type="Statement" />
<COMMENT id="C1173" spans="360068~360070" text="C:" type="Inquiry" line="1294" />
<COMMENT id="C1174" spans="360124~360126" text="C:" type="Removed" line="1295" />
<COMMENT id="C1175" spans="360137~360139" text="C:" type="Reference" line="1296" />
<COMMENT id="C1176" spans="360347~360349" text="C:" type="Solution" line="1297" />
<COMMENT id="C1177" spans="360802~360804" text="C:" type="Solution" line="1298" />
<COMMENT id="C1178" spans="360983~360985" text="C:" type="Solution" line="1299" />
<COMMENT id="C1179" spans="361169~361171" text="C:" line="1300" type="Reference" />
<COMMENT id="C1180" spans="361250~361252" text="C:" type="Statement" line="1301" />
<COMMENT id="C1181" spans="361273~361275" text="C:" type="Statement" line="1302" />
<COMMENT id="C1182" spans="361882~361884" text="C:" type="Solution" line="1303" />
<COMMENT id="C1183" spans="362283~362285" text="C:" type="Solution" line="1305" />
<COMMENT id="C1184" spans="364315~364317" text="C:" type="Solution" line="1306" />
<COMMENT id="C1185" spans="365587~365589" text="C:" type="Solution" line="1307" />
<COMMENT id="C1186" spans="365624~365626" text="C:" type="Inquiry" line="1308" />
<COMMENT id="C1187" spans="365710~365712" text="C:" type="Statement" line="1309" />
<COMMENT id="C1188" spans="365759~365761" text="C:" type="Statement" line="1310" />
<COMMENT id="C1189" spans="365940~365942" text="C:" type="Statement" line="1311" />
<COMMENT id="C1190" spans="366596~366598" text="C:" type="Statement" line="1312" />
<COMMENT id="C1191" spans="366716~366718" text="C:" type="Statement" line="1313" />
<COMMENT id="C1192" spans="367154~367156" text="C:" type="Solution" line="1314" />
<COMMENT id="C1193" spans="367914~367916" text="C:" type="Statement" line="1316" />
<COMMENT id="C1194" spans="368393~368395" text="C:" type="Inquiry" line="1317" />
<COMMENT id="C1195" spans="368593~368595" text="C:" type="Statement" line="1318" />
<COMMENT id="C1196" spans="368715~368717" text="C:" type="Solution" line="1319" />
<COMMENT id="C1197" spans="369107~369109" text="C:" type="Statement" line="1320" />
<COMMENT id="C1198" spans="369234~369236" text="C:" type="Statement" line="1321" />
<COMMENT id="C1199" spans="369458~369460" text="C:" type="Statement" line="1322" />
<COMMENT id="C1200" spans="369912~369914" text="C:" type="Statement" line="1323" />
<COMMENT id="C1201" spans="370128~370130" text="C:" type="Solution" line="1324" />
<COMMENT id="C1202" spans="370467~370469" text="C:" type="Solution" line="1325" />
<COMMENT id="C1203" spans="371103~371105" text="C:" type="Statement" line="1327" />
<COMMENT id="C1204" spans="371123~371125" text="C:" type="Statement" line="1328" />
<COMMENT id="C1205" spans="371191~371193" text="C:" type="Inquiry" line="1329" />
<COMMENT id="C1206" spans="371257~371259" text="C:" type="Reference" line="1330" />
<COMMENT id="C1207" spans="371378~371380" text="C:" type="Statement" line="1331" />
<COMMENT id="C1208" spans="371405~371407" text="C:" type="Removed" line="1332" />
<COMMENT id="C1209" spans="371409~371411" text="C:" type="Statement" line="1333" />
<COMMENT id="C1210" spans="371485~371487" text="C:" type="Reference" line="1334" />
<COMMENT id="C1211" spans="371681~371683" text="C:" type="Inquiry" line="1335" />
<COMMENT id="C1212" spans="371793~371795" text="C:" type="Statement" line="1336" />
<COMMENT id="C1213" spans="371922~371924" text="C:" type="Statement" line="1338" />
<COMMENT id="C1214" spans="371963~371965" text="C:" type="Solution" line="1339" />
<COMMENT id="C1215" spans="372464~372466" text="C:" type="Statement" line="1340" />
<COMMENT id="C1217" spans="372559~372561" text="C:" type="Solution" line="1341" />
<COMMENT id="C1218" spans="372789~372791" text="C:" type="Statement" line="1342" />
<COMMENT id="C1219" spans="372837~372839" text="C:" type="Statement" line="1343" />
<COMMENT id="C1220" spans="372848~372850" text="C:" type="Statement" line="1344" />
<COMMENT id="C1221" spans="372861~372863" text="C:" type="Statement" line="1345" />
<COMMENT id="C1222" spans="373353~373355" text="C:" type="Solution" line="1346" />
<COMMENT id="C1223" spans="374019~374021" text="C:" type="Statement" line="1348" />
<COMMENT id="C1224" spans="374049~374051" text="C:" type="Reference" line="1349" />
<COMMENT id="C1225" spans="374070~374072" text="C:" type="Solution" line="1350" />
<COMMENT id="C1226" spans="374297~374299" text="C:" type="Statement" line="1351" />
<COMMENT id="C1227" spans="374333~374335" text="C:" type="Statement" line="1352" />
<COMMENT id="C1228" spans="374371~374373" text="C:" type="Statement" line="1353" />
<COMMENT id="C1229" spans="374496~374498" text="C:" type="Solution" line="1354" />
<COMMENT id="C1230" spans="374872~374874" text="C:" type="Inquiry" line="1355" />
<COMMENT id="C1231" spans="374947~374949" text="C:" type="Solution" line="1356" />
<COMMENT id="C1232" spans="375118~375120" text="C:" type="Statement" line="1357" />
<COMMENT id="C1233" spans="375426~375428" text="C:" type="Statement" line="1359" />
<COMMENT id="C1234" spans="375816~375818" text="C:" type="Removed" line="1360" />
<COMMENT id="C1235" spans="375829~375831" text="C:" type="Statement" line="1361" />
<COMMENT id="C1236" spans="375890~375892" text="C:" type="Statement" line="1362" />
<COMMENT id="C1237" spans="376019~376021" text="C:" type="Statement" line="1363" />
<COMMENT id="C1238" spans="376749~376751" text="C:" type="Statement" line="1364" />
<COMMENT id="C1239" spans="377417~377419" text="C:" type="Statement" line="1365" />
<COMMENT id="C1240" spans="377589~377591" text="C:" type="Statement" line="1366" />
<COMMENT id="C1241" spans="377889~377891" text="C:" type="Statement" line="1367" />
<COMMENT id="C1242" spans="377967~377969" text="C:" type="Statement" line="1368" />
<COMMENT id="C1243" spans="378129~378131" text="C:" type="Removed" line="1370" />
<COMMENT id="C1244" spans="378142~378144" text="C:" type="Solution" line="1371" />
<COMMENT id="C1245" spans="378327~378329" text="C:" type="Solution" line="1372" />
<COMMENT id="C1246" spans="378576~378578" text="C:" type="Statement" line="1373" />
<COMMENT id="C1247" spans="378989~378991" text="C:" type="Statement" line="1374" />
<COMMENT id="C1248" spans="379050~379052" text="C:" type="Statement" line="1375" />
<COMMENT id="C1249" spans="379091~379093" text="C:" type="Statement" line="1376" />
<COMMENT id="C1250" spans="379523~379525" text="C:" type="Reference" line="1377" />
<COMMENT id="C1251" spans="380033~380035" text="C:" type="Reference" line="1378" />
<COMMENT id="C1252" spans="380081~380083" text="C:" type="Reference" line="1379" />
<COMMENT id="C1253" spans="380454~380456" text="C:" type="Statement" line="1381" />
<COMMENT id="C1254" spans="380827~380829" text="C:" type="Statement" line="1382" />
<COMMENT id="C1255" spans="381031~381033" text="C:" type="Inquiry" line="1383" />
<COMMENT id="C1256" spans="381078~381080" text="C:" type="Inquiry" line="1384" />
<COMMENT id="C1257" spans="381127~381129" text="C:" line="1385" type="Solution" />
<COMMENT id="C1258" spans="381280~381282" text="C:" type="Solution" line="1386" />
<COMMENT id="C1259" spans="381342~381344" text="C:" type="Statement" line="1387" />
<COMMENT id="C1260" spans="381362~381364" text="C:" type="Statement" line="1388" />
<COMMENT id="C1261" spans="381408~381410" text="C:" type="Statement" line="1389" />
<COMMENT id="C1262" spans="381491~381493" text="C:" type="Statement" line="1390" />
<COMMENT id="C1263" spans="381627~381629" text="C:" type="Solution" line="1392" />
<COMMENT id="C1264" spans="381752~381754" text="C:" type="Reference" line="1393" />
<COMMENT id="C1265" spans="381937~381939" text="C:" type="Solution" line="1394" />
<COMMENT id="C1266" spans="382105~382107" text="C:" type="Statement" line="1395" />
<COMMENT id="C1267" spans="382287~382289" text="C:" type="Solution" line="1396" />
<COMMENT id="C1268" spans="382584~382586" text="C:" type="Statement" line="1397" />
<COMMENT id="C1269" spans="382637~382639" text="C:" line="1398" type="Statement" />
<COMMENT id="C1270" spans="383316~383318" text="C:" type="Statement" line="1399" />
<COMMENT id="C1271" spans="383773~383775" text="C:" type="Statement" line="1400" />
<COMMENT id="C1272" spans="383849~383851" text="C:" type="Statement" line="1401" />
<COMMENT id="C1273" spans="384219~384221" text="C:" type="Statement" line="1403" />
<COMMENT id="C1274" spans="384293~384295" text="C:" line="1404" type="Solution" />
<COMMENT id="C1275" spans="384379~384381" text="C:" type="Solution" line="1405" />
<COMMENT id="C1276" spans="384427~384429" text="C:" type="Statement" line="1406" />
<COMMENT id="C1277" spans="384444~384446" text="C:" type="Statement" line="1407" />
<COMMENT id="C1278" spans="384505~384507" text="C:" type="Statement" line="1409" />
<COMMENT id="C1279" spans="384545~384547" text="C:" type="Inquiry" line="1410" />
<COMMENT id="C1280" spans="384661~384663" text="C:" type="Statement" line="1411" />
<COMMENT id="C1281" spans="384685~384687" text="C:" type="Statement" line="1412" />
<COMMENT id="C1282" spans="384724~384726" text="C:" type="Statement" line="1413" />
<COMMENT id="C1283" spans="384795~384797" text="C:" type="Statement" line="1414" />
<COMMENT id="C1284" spans="384824~384826" text="C:" type="Statement" line="1415" />
<COMMENT id="C1285" spans="385007~385009" text="C:" type="Solution" line="1416" />
<COMMENT id="C1286" spans="385755~385757" text="C:" type="Statement" line="1417" />
<COMMENT id="C1287" spans="385775~385777" text="C:" type="Reference" line="1418" />
<COMMENT id="C1288" spans="386397~386399" text="C:" type="Solution" line="1420" />
<COMMENT id="C1289" spans="386549~386551" text="C:" type="Statement" line="1421" />
<COMMENT id="C1290" spans="386624~386626" text="C:" type="Statement" line="1422" />
<COMMENT id="C1291" spans="386663~386665" text="C:" type="Statement" line="1423" />
<COMMENT id="C1292" spans="386678~386680" text="C:" type="Statement" line="1424" />
<COMMENT id="C1293" spans="386708~386710" text="C:" type="Inquiry" line="1425" />
<COMMENT id="C1294" spans="386783~386785" text="C:" type="Inquiry" line="1426" />
<COMMENT id="C1295" spans="386938~386940" text="C:" type="Statement" line="1427" />
<COMMENT id="C1296" spans="386952~386954" text="C:" line="1428" type="Solution" />
<COMMENT id="C1297" spans="387029~387031" text="C:" type="Statement" line="1430" />
<COMMENT id="C1298" spans="387089~387091" text="C:" type="Statement" line="1431" />
<COMMENT id="C1299" spans="387122~387124" text="C:" type="Statement" line="1432" />
<COMMENT id="C1300" spans="387407~387409" text="C:" type="Statement" line="1433" />
<COMMENT id="C1301" spans="387978~387980" text="C:" type="Solution" line="1434" />
<COMMENT id="C1302" spans="388596~388598" text="C:" type="Solution" line="1435" />
<COMMENT id="C1303" spans="388931~388933" text="C:" type="Statement" line="1436" />
<COMMENT id="C1304" spans="389277~389279" text="C:" type="Statement" line="1437" />
<COMMENT id="C1305" spans="389357~389359" text="C:" type="Statement" line="1438" />
<COMMENT id="C1306" spans="389492~389494" text="C:" type="Solution" line="1439" />
<COMMENT id="C1307" spans="392953~392955" text="C:" type="Statement" line="1441" />
<COMMENT id="C1308" spans="393010~393012" text="C:" type="Inquiry" line="1442" />
<COMMENT id="C1309" spans="393280~393282" text="C:" type="Statement" line="1443" />
<COMMENT id="C1310" spans="393383~393385" text="C:" type="Statement" line="1444" />
<COMMENT id="C1311" spans="393407~393409" text="C:" type="Statement" line="1445" />
<COMMENT id="C1312" spans="393432~393434" text="C:" line="1446" type="Solution" />
<COMMENT id="C1313" spans="393510~393512" text="C:" type="Statement" line="1447" />
<COMMENT id="C1314" spans="393567~393569" text="C:" type="Statement" line="1448" />
<COMMENT id="C1315" spans="393727~393729" text="C:" type="Statement" line="1449" />
<COMMENT id="C1316" spans="393783~393785" text="C:" type="Solution" line="1450" />
<COMMENT id="C1317" spans="393875~393877" text="C:" type="Reference" line="1452" />
<COMMENT id="C1318" spans="393962~393964" text="C:" type="Removed" line="1453" />
<COMMENT id="C1319" spans="393975~393977" text="C:" type="Statement" line="1454" />
<COMMENT id="C1320" spans="394016~394018" text="C:" type="Statement" line="1455" />
<COMMENT id="C1321" spans="394133~394135" text="C:" type="Solution" line="1456" />
<COMMENT id="C1322" spans="394655~394657" text="C:" type="Solution" line="1457" />
<COMMENT id="C1323" spans="394850~394852" text="C:" type="Statement" line="1458" />
<COMMENT id="C1324" spans="394929~394931" text="C:" type="Statement" line="1459" />
<COMMENT id="C1325" spans="395225~395227" text="C:" type="Statement" line="1460" />
<COMMENT id="C1326" spans="395268~395270" text="C:" type="Statement" line="1461" />
<COMMENT id="C1327" spans="395518~395520" text="C:" type="Reference" line="1463" />
<COMMENT id="C1328" spans="395893~395895" text="C:" type="Solution" line="1464" />
<COMMENT id="C1329" spans="396264~396266" text="C:" line="1465" type="Solution" />
<COMMENT id="C1330" spans="396926~396928" text="C:" type="Statement" line="1466" />
<COMMENT id="C1331" spans="396970~396972" text="C:" type="Statement" line="1467" />
<COMMENT id="C1332" spans="397013~397015" text="C:" type="Solution" line="1468" />
<COMMENT id="C1333" spans="397974~397976" text="C:" type="Solution" line="1469" />
<COMMENT id="C1334" spans="398010~398012" text="C:" type="Solution" line="1470" />
<COMMENT id="C1335" spans="398435~398437" text="C:" type="Statement" line="1471" />
<COMMENT id="C1336" spans="399162~399164" text="C:" type="Solution" line="1472" />
<COMMENT id="C1337" spans="399646~399648" text="C:" type="Statement" line="1474" />
<COMMENT id="C1338" spans="399891~399893" text="C:" type="Solution" line="1475" />
<COMMENT id="C1339" spans="399985~399987" text="C:" type="Solution" line="1476" />
<COMMENT id="C1340" spans="400036~400038" text="C:" line="1477" type="Statement" />
<COMMENT id="C1341" spans="400059~400061" text="C:" type="Solution" line="1478" />
<COMMENT id="C1342" spans="401431~401433" text="C:" type="Inquiry" line="1479" />
<COMMENT id="C1343" spans="401464~401466" text="C:" type="Statement" line="1480" />
<COMMENT id="C1344" spans="401480~401482" text="C:" type="Statement" line="1481" />
<COMMENT id="C1345" spans="401912~401914" text="C:" type="Statement" line="1482" />
<COMMENT id="C1346" spans="401967~401969" text="C:" type="Statement" line="1483" />
<COMMENT id="C1347" spans="402575~402577" text="C:" type="Solution" line="1485" />
<COMMENT id="C1348" spans="402951~402953" text="C:" type="Solution" line="1486" />
<COMMENT id="C1349" spans="403047~403049" text="C:" type="Solution" line="1487" />
<COMMENT id="C1350" spans="403487~403489" text="C:" type="Statement" line="1488" />
<COMMENT id="C1351" spans="403506~403508" text="C:" type="Statement" line="1489" />
<COMMENT id="C1352" spans="403523~403525" text="C:" type="Solution" line="1490" />
<COMMENT id="C1353" spans="403748~403750" text="C:" type="Statement" line="1491" />
<COMMENT id="C1354" spans="404064~404066" text="C:" type="Statement" line="1492" />
<COMMENT id="C1355" spans="404175~404177" text="C:" type="Statement" line="1493" />
<COMMENT id="C1356" spans="404752~404754" text="C:" type="Solution" line="1495" />
<COMMENT id="C1357" spans="404818~404820" text="C:" type="Solution" line="1496" />
<COMMENT id="C1358" spans="407127~407129" text="C:" type="Statement" line="1497" />
<COMMENT id="C1359" spans="407142~407144" text="C:" type="Statement" line="1498" />
<COMMENT id="C1360" spans="407159~407161" text="C:" type="Removed" line="1499" />
<COMMENT id="C1361" spans="407172~407174" text="C:" type="Statement" line="1500" />
<COMMENT id="C1362" spans="407213~407215" text="C:" type="Statement" line="1501" />
<COMMENT id="C1363" spans="407241~407243" text="C:" type="Statement" line="1502" />
<COMMENT id="C1364" spans="407308~407310" text="C:" type="Statement" line="1503" />
<COMMENT id="C1365" spans="407371~407373" text="C:" type="Solution" line="1505" />
<COMMENT id="C1366" spans="407545~407547" text="C:" type="Solution" line="1506" />
<COMMENT id="C1367" spans="407695~407697" text="C:" type="Statement" line="1507" />
<COMMENT id="C1368" spans="407751~407753" text="C:" type="Solution" line="1508" />
<COMMENT id="C1369" spans="408219~408221" text="C:" type="Statement" line="1509" />
<COMMENT id="C1370" spans="408305~408307" text="C:" type="Solution" line="1510" />
<COMMENT id="C1371" spans="408914~408916" text="C:" type="Statement" line="1511" />
<COMMENT id="C1372" spans="408935~408937" text="C:" type="Solution" line="1512" />
<COMMENT id="C1373" spans="409851~409853" text="C:" type="Statement" line="1513" />
<COMMENT id="C1374" spans="409883~409885" text="C:" type="Statement" line="1514" />
<COMMENT id="C1375" spans="409986~409988" text="C:" type="Statement" line="1516" />
<COMMENT id="C1376" spans="410070~410072" text="C:" type="Solution" line="1517" />
<COMMENT id="C1377" spans="410488~410490" text="C:" type="Statement" line="1518" />
<COMMENT id="C1378" spans="411156~411158" text="C:" type="Removed" line="1519" />
<COMMENT id="C1379" spans="411169~411171" text="C:" type="Inquiry" line="1520" />
<COMMENT id="C1380" spans="411585~411587" text="C:" type="Statement" line="1521" />
<COMMENT id="C1381" spans="411669~411671" text="C:" type="Statement" line="1522" />
<COMMENT id="C1382" spans="411941~411943" text="C:" type="Solution" line="1523" />
<COMMENT id="C1383" spans="412581~412583" text="C:" type="Removed" line="1524" />
<COMMENT id="C1384" spans="412594~412596" text="C:" type="Solution" line="1525" />
<COMMENT id="C1385" spans="413628~413630" text="C:" type="Statement" line="1527" />
<COMMENT id="C1386" spans="414046~414048" text="C:" type="Statement" line="1528" />
<COMMENT id="C1387" spans="414127~414129" text="C:" type="Statement" line="1529" />
<COMMENT id="C1388" spans="414314~414316" text="C:" type="Reference" line="1530" />
<COMMENT id="C1389" spans="414499~414501" text="C:" type="Solution" line="1531" />
<COMMENT id="C1390" spans="414675~414677" text="C:" type="Statement" line="1532" />
<COMMENT id="C1391" spans="414735~414737" text="C:" type="Statement" line="1533" />
<COMMENT id="C1392" spans="414798~414800" text="C:" type="Statement" line="1535" />
<COMMENT id="C1393" spans="414861~414863" text="C:" type="Statement" line="1536" />
<COMMENT id="C1394" spans="414916~414918" text="C:" type="Statement" line="1537" />
<COMMENT id="C1395" spans="415055~415057" text="C:" type="Statement" line="1538" />
<COMMENT id="C1396" spans="415195~415197" text="C:" type="Statement" line="1539" />
<COMMENT id="C1397" spans="415287~415289" text="C:" type="Solution" line="1540" />
<COMMENT id="C1398" spans="415779~415781" text="C:" type="Statement" line="1541" />
<COMMENT id="C1399" spans="415846~415848" text="C:" type="Inquiry" line="1542" />
<COMMENT id="C1400" spans="415871~415873" text="C:" type="Statement" line="1543" />
<COMMENT id="C1401" spans="416064~416066" text="C:" type="Solution" line="1545" />
<COMMENT id="C1402" spans="416110~416112" text="C:" type="Statement" line="1546" />
<COMMENT id="C1403" spans="416253~416255" text="C:" type="Solution" line="1547" />
<COMMENT id="C1404" spans="416330~416332" text="C:" type="Solution" line="1548" />
<COMMENT id="C1405" spans="416460~416462" text="C:" type="Statement" line="1549" />
<COMMENT id="C1406" spans="416644~416646" text="C:" type="Statement" line="1550" />
<COMMENT id="C1407" spans="416892~416894" text="C:" type="Statement" line="1551" />
<COMMENT id="C1408" spans="416926~416928" text="C:" type="Statement" line="1552" />
<COMMENT id="C1409" spans="417029~417031" text="C:" type="Solution" line="1553" />
<COMMENT id="C1410" spans="417158~417160" text="C:" type="Statement" line="1554" />
<COMMENT id="C1411" spans="417351~417353" text="C:" type="Removed" line="1556" />
<COMMENT id="C1412" spans="417364~417366" text="C:" type="Statement" line="1557" />
<COMMENT id="C1413" spans="417403~417405" text="C:" type="Solution" line="1558" />
<COMMENT id="C1414" spans="417473~417475" text="C:" type="Removed" line="1559" />
<COMMENT id="C1415" spans="417486~417488" text="C:" type="Removed" line="1560" />
<COMMENT id="C1416" spans="417499~417501" text="C:" type="Reference" line="1561" />
<COMMENT id="C1417" spans="418714~418716" text="C:" type="Statement" line="1562" />
<COMMENT id="C1418" spans="420052~420054" text="C:" type="Statement" line="1563" />
<COMMENT id="C1419" spans="421449~421451" text="C:" type="Solution" line="1565" />
<COMMENT id="C1420" spans="421577~421579" text="C:" type="Solution" line="1566" />
<COMMENT id="C1421" spans="421637~421639" text="C:" type="Statement" line="1567" />
<COMMENT id="C1422" spans="421852~421854" text="C:" type="Statement" line="1568" />
<COMMENT id="C1423" spans="422041~422043" text="C:" type="Statement" line="1569" />
<COMMENT id="C1424" spans="422051~422053" text="C:" type="Solution" line="1570" />
<COMMENT id="C1425" spans="422148~422150" text="C:" type="Statement" line="1571" />
<COMMENT id="C1426" spans="422321~422323" text="C:" type="Inquiry" line="1573" />
<COMMENT id="C1427" spans="422478~422480" text="C:" type="Statement" line="1574" />
<COMMENT id="C1428" spans="422487~422489" text="C:" type="Solution" line="1575" />
<COMMENT id="C1429" spans="424034~424036" text="C:" type="Statement" line="1577" />
<COMMENT id="C1430" spans="424925~424927" text="C:" type="Statement" line="1578" />
<COMMENT id="C1431" spans="424972~424974" text="C:" type="Solution" line="1579" />
<COMMENT id="C1432" spans="425079~425081" text="C:" type="Solution" line="1580" />
<COMMENT id="C1433" spans="425105~425107" text="C:" type="Inquiry" line="1581" />
<COMMENT id="C1434" spans="425134~425136" text="C:" type="Removed" line="1582" />
<COMMENT id="C1435" spans="425147~425149" text="C:" type="Statement" line="1583" />
<COMMENT id="C1436" spans="426467~426469" text="C:" type="Reference" line="1584" />
<COMMENT id="C1437" spans="426675~426677" text="C:" type="Statement" line="1585" />
<COMMENT id="C1438" spans="426710~426712" text="C:" type="Statement" line="1586" />
<COMMENT id="C1439" spans="426894~426896" text="C:" type="Inquiry" line="1588" />
<COMMENT id="C1440" spans="426946~426948" text="C:" type="Statement" line="1589" />
<COMMENT id="C1441" spans="426954~426956" text="C:" type="Statement" line="1590" />
<COMMENT id="C1442" spans="427022~427024" text="C:" type="Solution" line="1591" />
<COMMENT id="C1443" spans="427125~427127" text="C:" type="Statement" line="1592" />
<COMMENT id="C1444" spans="427311~427313" text="C:" line="1593" type="Solution" />
<COMMENT id="C1445" spans="427389~427391" text="C:" type="Inquiry" line="1594" />
<COMMENT id="C1446" spans="427422~427424" text="C:" type="Statement" line="1595" />
<COMMENT id="C1447" spans="427645~427647" text="C:" type="Solution" line="1596" />
<COMMENT id="C1448" spans="427680~427682" text="C:" type="Solution" line="1597" />
<COMMENT id="C1449" spans="427837~427839" text="C:" type="Statement" line="1599" />
<COMMENT id="C1450" spans="427880~427882" text="C:" type="Statement" line="1600" />
<COMMENT id="C1451" spans="427913~427915" text="C:" type="Statement" line="1601" />
<COMMENT id="C1452" spans="427922~427924" text="C:" type="Statement" line="1602" />
<COMMENT id="C1453" spans="427930~427932" text="C:" type="Statement" line="1603" />
<COMMENT id="C1454" spans="427943~427945" text="C:" type="Statement" line="1604" />
<COMMENT id="C1455" spans="427952~427954" text="C:" type="Statement" line="1605" />
<COMMENT id="C1456" spans="427991~427993" text="C:" type="Inquiry" line="1606" />
<COMMENT id="C1457" spans="428003~428005" text="C:" type="Inquiry" line="1607" />
<COMMENT id="C1458" spans="428037~428039" text="C:" type="Statement" line="1608" />
<COMMENT id="C1459" spans="428196~428198" text="C:" type="Solution" line="1610" />
<COMMENT id="C1460" spans="428591~428593" text="C:" type="Reference" line="1611" />
<COMMENT id="C1461" spans="428881~428883" text="C:" type="Reference" line="1612" />
<COMMENT id="C1462" spans="429080~429082" text="C:" type="Statement" line="1613" />
<COMMENT id="C1463" spans="429450~429452" text="C:" type="Statement" line="1614" />
<COMMENT id="C1464" spans="429478~429480" text="C:" type="Statement" line="1615" />
<COMMENT id="C1465" spans="429488~429490" text="C:" type="Statement" line="1616" />
<COMMENT id="C1466" spans="429546~429548" text="C:" type="Statement" line="1617" />
<COMMENT id="C1467" spans="429606~429608" text="C:" type="Statement" line="1618" />
<COMMENT id="C1468" spans="429634~429636" text="C:" type="Solution" line="1619" />
<COMMENT id="C1469" spans="429738~429740" text="C:" type="Statement" line="1621" />
<COMMENT id="C1470" spans="429790~429792" text="C:" type="Statement" line="1622" />
<COMMENT id="C1471" spans="429833~429835" text="C:" type="Reference" line="1623" />
<COMMENT id="C1472" spans="430236~430238" text="C:" type="Statement" line="1624" />
<COMMENT id="C1473" spans="430348~430350" text="C:" type="Reference" line="1625" />
<COMMENT id="C1474" spans="430529~430531" text="C:" type="Inquiry" line="1626" />
<COMMENT id="C1475" spans="430556~430558" text="C:" line="1627" type="Solution" />
<COMMENT id="C1476" spans="430609~430611" text="C:" type="Statement" line="1628" />
<COMMENT id="C1477" spans="430625~430627" text="C:" type="Statement" line="1629" />
<COMMENT id="C1478" spans="430701~430703" text="C:" type="Statement" line="1630" />
<COMMENT id="C1479" spans="430797~430799" text="C:" type="Statement" line="1632" />
<COMMENT id="C1480" spans="430853~430855" text="C:" type="Solution" line="1633" />
<COMMENT id="C1481" spans="430938~430940" text="C:" type="Statement" line="1634" />
<COMMENT id="C1482" spans="431157~431159" text="C:" type="Statement" line="1635" />
<COMMENT id="C1483" spans="431270~431272" text="C:" type="Reference" line="1636" />
<COMMENT id="C1484" spans="431610~431612" text="C:" type="Solution" line="1637" />
<COMMENT id="C1485" spans="431833~431835" text="C:" type="Statement" line="1638" />
<COMMENT id="C1486" spans="431935~431937" text="C:" type="Solution" line="1640" />
<COMMENT id="C1487" spans="431951~431953" text="C:" type="Solution" line="1641" />
<COMMENT id="C1488" spans="432035~432037" text="C:" type="Reference" line="1642" />
<COMMENT id="C1489" spans="432343~432345" text="C:" type="Statement" line="1643" />
<COMMENT id="C1490" spans="432350~432352" text="C:" type="Solution" line="1644" />
<COMMENT id="C1491" spans="432376~432378" text="C:" type="Statement" line="1645" />
<COMMENT id="C1492" spans="432386~432388" text="C:" type="Statement" line="1646" />
<COMMENT id="C1493" spans="432416~432418" text="C:" type="Statement" line="1647" />
<COMMENT id="C1494" spans="432490~432492" text="C:" type="Inquiry" line="1648" />
<COMMENT id="C1495" spans="432540~432542" text="C:" line="1649" type="Solution" />
<COMMENT id="C1496" spans="432805~432807" text="C:" type="Solution" line="1651" />
<COMMENT id="C1497" spans="432859~432861" text="C:" line="1652" type="Reference" />
<COMMENT id="C1498" spans="432996~432998" text="C:" type="Solution" line="1653" />
<COMMENT id="C1499" spans="433374~433376" text="C:" type="Solution" line="1654" />
<COMMENT id="C1500" spans="433800~433802" text="C:" type="Statement" line="1655" />
<COMMENT id="C1501" spans="433842~433844" text="C:" type="Statement" line="1656" />
<COMMENT id="C1502" spans="434182~434184" text="C:" type="Statement" line="1657" />
<COMMENT id="C1503" spans="434204~434206" text="C:" type="Statement" line="1658" />
<COMMENT id="C1504" spans="434879~434881" text="C:" type="Reference" line="1660" />
<COMMENT id="C1505" spans="435522~435524" text="C:" type="Statement" line="1661" />
<COMMENT id="C1506" spans="435555~435557" text="C:" type="Inquiry" line="1662" />
<COMMENT id="C1507" spans="435604~435606" text="C:" type="Statement" line="1663" />
<COMMENT id="C1508" spans="435771~435773" text="C:" type="Statement" line="1664" />
<COMMENT id="C1509" spans="435786~435788" text="C:" type="Statement" line="1665" />
<COMMENT id="C1510" spans="435801~435803" text="C:" type="Statement" line="1666" />
<COMMENT id="C1511" spans="435882~435884" text="C:" type="Statement" line="1667" />
<COMMENT id="C1512" spans="435893~435895" text="C:" type="Statement" line="1668" />
<COMMENT id="C1513" spans="435945~435947" text="C:" type="Statement" line="1669" />
<COMMENT id="C1514" spans="436047~436049" text="C:" type="Solution" line="1671" />
<COMMENT id="C1515" spans="436223~436225" text="C:" type="Solution" line="1672" />
<COMMENT id="C1516" spans="436399~436401" text="C:" type="Solution" line="1673" />
<COMMENT id="C1517" spans="437326~437328" text="C:" type="Solution" line="1674" />
<COMMENT id="C1518" spans="437383~437385" text="C:" type="Statement" line="1675" />
<COMMENT id="C1519" spans="437466~437468" text="C:" type="Solution" line="1676" />
<COMMENT id="C1520" spans="437518~437520" text="C:" type="Inquiry" line="1677" />
<COMMENT id="C1521" spans="437601~437603" text="C:" type="Statement" line="1678" />
<COMMENT id="C1522" spans="437664~437666" text="C:" type="Solution" line="1679" />
<COMMENT id="C1523" spans="437828~437830" text="C:" type="Solution" line="1680" />
<COMMENT id="C1524" spans="437950~437952" text="C:" type="Solution" line="1682" />
<COMMENT id="C1525" spans="438048~438050" text="C:" type="Statement" line="1683" />
<COMMENT id="C1526" spans="438087~438089" text="C:" type="Statement" line="1684" />
<COMMENT id="C1527" spans="438150~438152" text="C:" type="Solution" line="1685" />
<COMMENT id="C1528" spans="438271~438273" text="C:" type="Statement" line="1686" />
<COMMENT id="C1529" spans="438429~438431" text="C:" type="Statement" line="1687" />
<COMMENT id="C1530" spans="438470~438472" text="C:" type="Statement" line="1688" />
<COMMENT id="C1531" spans="438489~438491" text="C:" type="Inquiry" line="1689" />
<COMMENT id="C1532" spans="438572~438574" text="C:" type="Solution" line="1690" />
<COMMENT id="C1533" spans="438635~438637" text="C:" type="Statement" line="1691" />
<COMMENT id="C1534" spans="438770~438772" text="C:" type="Statement" line="1693" />
<COMMENT id="C1535" spans="438787~438789" text="C:" type="Solution" line="1694" />
<COMMENT id="C1536" spans="438983~438985" text="C:" type="Statement" line="1695" />
<COMMENT id="C1537" spans="439012~439014" text="C:" type="Solution" line="1696" />
<COMMENT id="C1538" spans="440206~440208" text="C:" type="Statement" line="1697" />
<COMMENT id="C1539" spans="440305~440307" text="C:" type="Statement" line="1698" />
<COMMENT id="C1540" spans="440313~440315" text="C:" type="Statement" line="1699" />
<COMMENT id="C1541" spans="440445~440447" text="C:" type="Solution" line="1700" />
<COMMENT id="C1542" spans="440471~440473" text="C:" type="Solution" line="1701" />
<COMMENT id="C1543" spans="440520~440522" text="C:" type="Statement" line="1702" />
<COMMENT id="C1544" spans="440568~440570" text="C:" type="Solution" line="1704" />
<COMMENT id="C1545" spans="440703~440705" text="C:" type="Statement" line="1705" />
<COMMENT id="C1546" spans="440725~440727" text="C:" type="Solution" line="1706" />
<COMMENT id="C1547" spans="440832~440834" text="C:" type="Solution" line="1707" />
<COMMENT id="C1548" spans="440892~440894" text="C:" type="Statement" line="1708" />
<COMMENT id="C1549" spans="440907~440909" text="C:" type="Solution" line="1709" />
<COMMENT id="C1550" spans="440965~440967" text="C:" type="Solution" line="1710" />
<COMMENT id="C1551" spans="441160~441162" text="C:" type="Statement" line="1711" />
<COMMENT id="C1552" spans="441215~441217" text="C:" type="Inquiry" line="1712" />
<COMMENT id="C1553" spans="441300~441302" text="C:" type="Solution" line="1713" />
<COMMENT id="C1554" spans="441616~441618" text="C:" type="Solution" line="1715" />
<COMMENT id="C1555" spans="441796~441798" text="C:" type="Solution" line="1716" />
<COMMENT id="C1556" spans="442048~442050" text="C:" type="Solution" line="1718" />
<COMMENT id="C1557" spans="442371~442373" text="C:" type="Solution" line="1719" />
<COMMENT id="C1558" spans="442737~442739" text="C:" type="Solution" line="1720" />
<COMMENT id="C1559" spans="442937~442939" text="C:" type="Statement" line="1721" />
<COMMENT id="C1560" spans="443078~443080" text="C:" type="Reference" line="1722" />
<COMMENT id="C1561" spans="443146~443148" text="C:" type="Solution" line="1723" />
<COMMENT id="C1113" spans="443380~443382" text="C:" type="Statement" line="1724" />
<COMMENT id="C1216" spans="443414~443416" text="C:" type="Solution" line="1725" />
<COMMENT id="C1562" spans="443438~443440" text="C:" type="Inquiry" line="1726" />
<COMMENT id="C1563" spans="443484~443486" text="C:" type="Solution" line="1727" />
<COMMENT id="C1564" spans="443654~443656" text="C:" type="Solution" line="1729" />
<COMMENT id="C1565" spans="444319~444321" text="C:" type="Statement" line="1730" />
<COMMENT id="C1566" spans="444442~444444" text="C:" type="Statement" line="1731" />
<COMMENT id="C1567" spans="444662~444664" text="C:" type="Statement" line="1732" />
<COMMENT id="C1568" spans="445027~445029" text="C:" type="Statement" line="1733" />
<COMMENT id="C1569" spans="445549~445551" text="C:" type="Solution" line="1734" />
<COMMENT id="C1570" spans="445665~445667" text="C:" type="Statement" line="1735" />
<COMMENT id="C1571" spans="445709~445711" text="C:" type="Solution" line="1736" />
<COMMENT id="C1572" spans="445773~445775" text="C:" type="Solution" line="1737" />
<COMMENT id="C1573" spans="446443~446445" text="C:" type="Solution" line="1738" />
<COMMENT id="C1574" spans="446650~446652" text="C:" type="Solution" line="1740" />
<COMMENT id="C1575" spans="446811~446813" text="C:" type="Solution" line="1741" />
<COMMENT id="C1576" spans="446964~446966" text="C:" type="Statement" line="1742" />
<COMMENT id="C1577" spans="447200~447202" text="C:" type="Solution" line="1743" />
<COMMENT id="C1578" spans="447241~447243" text="C:" type="Solution" line="1744" />
<COMMENT id="C1579" spans="447300~447302" text="C:" type="Solution" line="1745" />
<COMMENT id="C1580" spans="447464~447466" text="C:" type="Solution" line="1746" />
<COMMENT id="C1581" spans="447628~447630" text="C:" type="Solution" line="1748" />
<COMMENT id="C1582" spans="447949~447951" text="C:" type="Solution" line="1749" />
<COMMENT id="C1583" spans="448234~448236" text="C:" type="Solution" line="1750" />
<COMMENT id="C1584" spans="449387~449389" text="C:" type="Solution" line="1751" />
<COMMENT id="C1585" spans="449443~449445" text="C:" type="Solution" line="1752" />
<COMMENT id="C1586" spans="449592~449594" text="C:" type="Solution" line="1753" />
<COMMENT id="C1587" spans="449613~449615" text="C:" type="Solution" line="1754" />
<COMMENT id="C1588" spans="449745~449747" text="C:" type="Statement" line="1755" />
<COMMENT id="C1589" spans="449788~449790" text="C:" type="Solution" line="1756" />
<COMMENT id="C1590" spans="449916~449918" text="C:" type="Statement" line="1757" />
<COMMENT id="C1591" spans="450006~450008" text="C:" type="Solution" line="1759" />
<COMMENT id="C1592" spans="450026~450028" text="C:" type="Solution" line="1760" />
<COMMENT id="C1593" spans="450178~450180" text="C:" type="Solution" line="1761" />
<COMMENT id="C1594" spans="450262~450264" text="C:" type="Statement" line="1762" />
<COMMENT id="C1595" spans="450335~450337" text="C:" line="1763" type="Solution" />
<COMMENT id="C1596" spans="450358~450360" text="C:" type="Solution" line="1764" />
<COMMENT id="C1597" spans="450394~450396" text="C:" type="Solution" line="1765" />
<COMMENT id="C1598" spans="450497~450499" text="C:" type="Solution" line="1766" />
<COMMENT id="C1599" spans="450530~450532" text="C:" type="Statement" line="1767" />
<COMMENT id="C1600" spans="450553~450555" text="C:" type="Statement" line="1768" />
<COMMENT id="C1601" spans="450714~450716" text="C:" type="Reference" line="1770" />
<COMMENT id="C1602" spans="450914~450916" text="C:" type="Statement" line="1771" />
<COMMENT id="C1603" spans="450952~450954" text="C:" type="Statement" line="1772" />
<COMMENT id="C1604" spans="451080~451082" text="C:" type="Solution" line="1774" />
<COMMENT id="C1605" spans="451152~451154" text="C:" type="Solution" line="1775" />
<COMMENT id="C1606" spans="451216~451218" text="C:" type="Statement" line="1776" />
<COMMENT id="C1607" spans="451224~451226" text="C:" type="Statement" line="1777" />
<COMMENT id="C1608" spans="451254~451256" text="C:" type="Solution" line="1778" />
<COMMENT id="C1609" spans="451386~451388" text="C:" type="Solution" line="1780" />
<COMMENT id="C1610" spans="451612~451614" text="C:" type="Solution" line="1781" />
<COMMENT id="C1611" spans="452582~452584" text="C:" line="1782" type="Solution" />
<COMMENT id="C1612" spans="452969~452971" text="C:" type="Statement" line="1783" />
<COMMENT id="C1613" spans="453633~453635" text="C:" type="Statement" line="1784" />
<COMMENT id="C1614" spans="453896~453898" text="C:" type="Statement" line="1785" />
<COMMENT id="C1615" spans="454194~454196" text="C:" type="Solution" line="1786" />
<COMMENT id="C1616" spans="454319~454321" text="C:" type="Statement" line="1787" />
<COMMENT id="C1617" spans="454491~454493" text="C:" type="Solution" line="1788" />
<COMMENT id="C1618" spans="455378~455380" text="C:" type="Statement" line="1789" />
<COMMENT id="C1619" spans="455630~455632" text="C:" type="Solution" line="1791" />
<COMMENT id="C1620" spans="455748~455750" text="C:" type="Inquiry" line="1792" />
<COMMENT id="C1621" spans="455848~455850" text="C:" type="Solution" line="1793" />
<COMMENT id="C1622" spans="455990~455992" text="C:" type="Statement" line="1794" />
<COMMENT id="C1623" spans="456107~456109" text="C:" type="Statement" line="1795" />
<COMMENT id="C1624" spans="456629~456631" text="C:" type="Solution" line="1796" />
<COMMENT id="C1625" spans="456921~456923" text="C:" type="Solution" line="1797" />
<COMMENT id="C1626" spans="457103~457105" text="C:" type="Statement" line="1798" />
<COMMENT id="C1627" spans="457111~457113" text="C:" type="Statement" line="1799" />
<COMMENT id="C1628" spans="457188~457190" text="C:" type="Solution" line="1800" />
<COMMENT id="C1629" spans="457493~457495" text="C:" type="Solution" line="1802" />
<COMMENT id="C1630" spans="457930~457932" text="C:" type="Reference" line="1803" />
<COMMENT id="C1631" spans="458098~458100" text="C:" type="Solution" line="1804" />
<COMMENT id="C1632" spans="458665~458667" text="C:" type="Statement" line="1805" />
<COMMENT id="C1633" spans="458692~458694" text="C:" type="Inquiry" line="1806" />
<COMMENT id="C1634" spans="458719~458721" text="C:" type="Statement" line="1807" />
<COMMENT id="C1635" spans="458746~458748" text="C:" type="Solution" line="1808" />
<COMMENT id="C1636" spans="458969~458971" text="C:" type="Statement" line="1809" />
<COMMENT id="C1637" spans="459119~459121" text="C:" type="Statement" line="1811" />
<COMMENT id="C1638" spans="459200~459202" text="C:" line="1812" type="Solution" />
<COMMENT id="C1639" spans="459330~459332" text="C:" type="Solution" line="1813" />
<COMMENT id="C1640" spans="459554~459556" text="C:" type="Statement" line="1814" />
<COMMENT id="C1641" spans="459894~459896" text="C:" type="Inquiry" line="1815" />
<COMMENT id="C1642" spans="459935~459937" text="C:" type="Statement" line="1816" />
<COMMENT id="C1643" spans="459942~459944" text="C:" type="Statement" line="1817" />
<COMMENT id="C1644" spans="460025~460027" text="C:" type="Statement" line="1818" />
<COMMENT id="C1645" spans="460064~460066" text="C:" type="Statement" line="1819" />
<COMMENT id="C1646" spans="460267~460269" text="C:" type="Solution" line="1821" />
<COMMENT id="C1647" spans="461084~461086" text="C:" type="Statement" line="1822" />
<COMMENT id="C1648" spans="461817~461819" text="C:" type="Solution" line="1823" />
<COMMENT id="C1649" spans="462312~462314" text="C:" type="Solution" line="1824" />
<COMMENT id="C1650" spans="462452~462454" text="C:" type="Solution" line="1825" />
<COMMENT id="C1651" spans="462650~462652" text="C:" type="Statement" line="1826" />
<COMMENT id="C1652" spans="462682~462684" text="C:" type="Statement" line="1827" />
<COMMENT id="C1653" spans="462792~462794" text="C:" type="Statement" line="1828" />
<COMMENT id="C1654" spans="463300~463302" text="C:" type="Solution" line="1830" />
<COMMENT id="C1655" spans="463471~463473" text="C:" type="Statement" line="1831" />
<COMMENT id="C1656" spans="463873~463875" text="C:" type="Solution" line="1833" />
<COMMENT id="C1657" spans="464144~464146" text="C:" type="Reference" line="1834" />
<COMMENT id="C1658" spans="464453~464455" text="C:" type="Statement" line="1835" />
<COMMENT id="C1659" spans="464691~464693" text="C:" type="Inquiry" line="1836" />
<COMMENT id="C1660" spans="464735~464737" text="C:" type="Statement" line="1837" />
<COMMENT id="C1661" spans="464743~464745" text="C:" type="Statement" line="1838" />
<COMMENT id="C1662" spans="464779~464781" text="C:" type="Inquiry" line="1839" />
<COMMENT id="C1663" spans="464837~464839" text="C:" type="Solution" line="1840" />
<COMMENT id="C1664" spans="465105~465107" text="C:" type="Solution" line="1842" />
<COMMENT id="C1665" spans="465671~465673" text="C:" line="1843" type="Reference" />
<COMMENT id="C1666" spans="465887~465889" text="C:" type="Statement" line="1844" />
<COMMENT id="C1667" spans="465907~465909" text="C:" type="Statement" line="1845" />
<COMMENT id="C1668" spans="466137~466139" text="C:" type="Solution" line="1847" />
<COMMENT id="C1669" spans="467529~467531" text="C:" type="Solution" line="1848" />
<COMMENT id="C1670" spans="467805~467807" text="C:" type="Solution" line="1849" />
<COMMENT id="C1671" spans="468167~468169" text="C:" type="Solution" line="1850" />
<COMMENT id="C1672" spans="469253~469255" text="C:" type="Statement" line="1851" />
<COMMENT id="C1673" spans="469367~469369" text="C:" type="Statement" line="1852" />
<COMMENT id="C1674" spans="469763~469765" text="C:" type="Solution" line="1853" />
<COMMENT id="C1675" spans="470783~470785" text="C:" type="Statement" line="1854" />
<COMMENT id="C1676" spans="470855~470857" text="C:" type="Statement" line="1855" />
<COMMENT id="C1677" spans="470967~470969" text="C:" type="Statement" line="1856" />
<COMMENT id="C1678" spans="471197~471199" text="C:" type="Solution" line="1858" />
<COMMENT id="C1679" spans="471289~471291" text="C:" type="Solution" line="1859" />
<COMMENT id="C1680" spans="471503~471505" text="C:" type="Solution" line="1860" />
<COMMENT id="C1681" spans="471680~471682" text="C:" type="Statement" line="1861" />
<COMMENT id="C1682" spans="471741~471743" text="C:" type="Statement" line="1862" />
<COMMENT id="C1683" spans="471751~471753" text="C:" type="Inquiry" line="1863" />
<COMMENT id="C1684" spans="471798~471800" text="C:" type="Solution" line="1864" />
<COMMENT id="C1685" spans="471985~471987" text="C:" type="Statement" line="1865" />
<COMMENT id="C1686" spans="471998~472000" text="C:" type="Statement" line="1866" />
<COMMENT id="C1687" spans="472144~472146" text="C:" type="Solution" line="1868" />
<COMMENT id="C1688" spans="472158~472160" text="C:" type="Solution" line="1869" />
<COMMENT id="C1689" spans="473149~473151" text="C:" type="Solution" line="1870" />
<COMMENT id="C1690" spans="473500~473502" text="C:" type="Solution" line="1871" />
<COMMENT id="C1691" spans="473650~473652" text="C:" type="Reference" line="1872" />
<COMMENT id="C1692" spans="473765~473767" text="C:" type="Solution" line="1873" />
<COMMENT id="C1693" spans="473886~473888" text="C:" type="Solution" line="1874" />
<COMMENT id="C1694" spans="473907~473909" text="C:" type="Statement" line="1875" />
<COMMENT id="C1695" spans="474232~474234" text="C:" type="Inquiry" line="1876" />
<COMMENT id="C1696" spans="474295~474297" text="C:" type="Statement" line="1877" />
<COMMENT id="C1697" spans="474515~474517" text="C:" type="Reference" line="1879" />
<COMMENT id="C1698" spans="474602~474604" text="C:" type="Solution" line="1880" />
<COMMENT id="C1699" spans="474783~474785" text="C:" type="Statement" line="1881" />
<COMMENT id="C1700" spans="475789~475791" text="C:" type="Solution" line="1882" />
<COMMENT id="C1701" spans="477202~477204" text="C:" type="Statement" line="1883" />
<COMMENT id="C1702" spans="477217~477219" text="C:" type="Statement" line="1884" />
<COMMENT id="C1703" spans="477260~477262" text="C:" type="Statement" line="1885" />
<COMMENT id="C1704" spans="477329~477331" text="C:" type="Statement" line="1886" />
<COMMENT id="C1705" spans="477358~477360" text="C:" type="Solution" line="1887" />
<COMMENT id="C1706" spans="477573~477575" text="C:" type="Statement" line="1888" />
<COMMENT id="C1708" spans="477809~477811" text="C:" type="Solution" line="1890" />
<COMMENT id="C1709" spans="478037~478039" text="C:" type="Statement" line="1891" />
<COMMENT id="C1710" spans="478352~478354" text="C:" type="Statement" line="1892" />
<COMMENT id="C1711" spans="478692~478694" text="C:" type="Statement" line="1893" />
<COMMENT id="C1712" spans="478730~478732" text="C:" type="Statement" line="1894" />
<COMMENT id="C1713" spans="479002~479004" text="C:" type="Statement" line="1895" />
<COMMENT id="C1714" spans="479054~479056" text="C:" type="Solution" line="1897" />
<COMMENT id="C1715" spans="479364~479366" text="C:" type="Solution" line="1898" />
<COMMENT id="C1716" spans="479949~479951" text="C:" type="Solution" line="1899" />
<COMMENT id="C1717" spans="480624~480626" text="C:" type="Solution" line="1900" />
<COMMENT id="C1718" spans="480947~480949" text="C:" type="Solution" line="1901" />
<COMMENT id="C1719" spans="481260~481262" text="C:" type="Statement" line="1902" />
<COMMENT id="C1720" spans="481294~481296" text="C:" type="Statement" line="1903" />
<COMMENT id="C1721" spans="481462~481464" text="C:" type="Statement" line="1904" />
<COMMENT id="C1722" spans="481507~481509" text="C:" type="Statement" line="1905" />
<COMMENT id="C1723" spans="481561~481563" text="C:" type="Solution" line="1906" />
<COMMENT id="C1724" spans="481950~481952" text="C:" type="Solution" line="1908" />
<COMMENT id="C1725" spans="482087~482089" text="C:" type="Solution" line="1909" />
<COMMENT id="C1726" spans="482689~482691" text="C:" type="Solution" line="1910" />
<COMMENT id="C1727" spans="482985~482987" text="C:" type="Reference" line="1911" />
<COMMENT id="C1728" spans="483276~483278" text="C:" type="Solution" line="1913" />
<COMMENT id="C1729" spans="483568~483570" text="C:" type="Reference" line="1914" />
<COMMENT id="C1730" spans="483735~483737" text="C:" type="Solution" line="1915" />
<COMMENT id="C1731" spans="484091~484093" text="C:" type="Statement" line="1916" />
<COMMENT id="C1732" spans="484159~484161" text="C:" type="Inquiry" line="1917" />
<COMMENT id="C1733" spans="484213~484215" text="C:" type="Statement" line="1918" />
<COMMENT id="C1734" spans="484286~484288" text="C:" type="Solution" line="1919" />
<COMMENT id="C1735" spans="484539~484541" text="C:" type="Inquiry" line="1920" />
<COMMENT id="C1736" spans="484594~484596" text="C:" type="Statement" line="1921" />
<COMMENT id="C1737" spans="484627~484629" text="C:" type="Statement" line="1922" />
<COMMENT id="C1738" spans="484709~484711" text="C:" type="Solution" line="1924" />
<COMMENT id="C1739" spans="484759~484761" text="C:" type="Statement" line="1925" />
<COMMENT id="C1740" spans="484782~484784" text="C:" type="Statement" line="1926" />
<COMMENT id="C1741" spans="484842~484844" text="C:" type="Statement" line="1927" />
<COMMENT id="C1742" spans="484912~484914" text="C:" type="Inquiry" line="1928" />
<COMMENT id="C1743" spans="484993~484995" text="C:" type="Statement" line="1929" />
<COMMENT id="C1744" spans="485024~485026" text="C:" type="Inquiry" line="1930" />
<COMMENT id="C1745" spans="485090~485092" text="C:" type="Inquiry" line="1931" />
<COMMENT id="C1746" spans="485124~485126" text="C:" type="Solution" line="1932" />
<COMMENT id="C1747" spans="485262~485264" text="C:" type="Statement" line="1933" />
<COMMENT id="C1748" spans="485445~485447" text="C:" type="Statement" line="1935" />
<COMMENT id="C1749" spans="486315~486317" text="C:" type="Solution" line="1936" />
<COMMENT id="C1750" spans="486707~486709" text="C:" type="Solution" line="1937" />
<COMMENT id="C1751" spans="487236~487238" text="C:" type="Reference" line="1938" />
<COMMENT id="C1752" spans="487602~487604" text="C:" type="Solution" line="1939" />
<COMMENT id="C1753" spans="488326~488328" text="C:" type="Statement" line="1940" />
<COMMENT id="C1754" spans="488341~488343" text="C:" type="Statement" line="1941" />
<COMMENT id="C1755" spans="488407~488409" text="C:" type="Reference" line="1942" />
<COMMENT id="C1756" spans="488446~488448" text="C:" type="Statement" line="1943" />
<COMMENT id="C1757" spans="489096~489098" text="C:" type="Solution" line="1945" />
<COMMENT id="C1758" spans="490166~490168" text="C:" type="Statement" line="1946" />
<COMMENT id="C1759" spans="490364~490366" text="C:" type="Statement" line="1947" />
<COMMENT id="C1760" spans="490544~490546" text="C:" type="Solution" line="1948" />
<COMMENT id="C1761" spans="490792~490794" text="C:" type="Statement" line="1950" />
<COMMENT id="C1762" spans="491753~491755" text="C:" type="Solution" line="1951" />
<COMMENT id="C1763" spans="492202~492204" text="C:" type="Statement" line="1953" />
<COMMENT id="C1764" spans="492410~492412" text="C:" type="Statement" line="1955" />
<COMMENT id="C1765" spans="493150~493152" text="C:" type="Inquiry" line="1956" />
<COMMENT id="C1766" spans="494825~494827" text="C:" type="Statement" line="1957" />
<COMMENT id="C1767" spans="496220~496222" text="C:" type="Statement" line="1958" />
<COMMENT id="C1768" spans="496727~496729" text="C:" type="Statement" line="1959" />
<COMMENT id="C1769" spans="496998~497000" text="C:" type="Statement" line="1960" />
<COMMENT id="C1770" spans="497069~497071" text="C:" type="Statement" line="1961" />
<COMMENT id="C1771" spans="497179~497181" text="C:" type="Statement" line="1962" />
<COMMENT id="C1772" spans="497282~497284" text="C:" type="Statement" line="1963" />
<COMMENT id="C1773" spans="497452~497454" text="C:" type="Statement" line="1964" />
<COMMENT id="C1774" spans="497884~497886" text="C:" type="Solution" line="1966" />
<COMMENT id="C1775" spans="498337~498339" text="C:" type="Solution" line="1967" />
<COMMENT id="C1776" spans="498494~498496" text="C:" type="Solution" line="1968" />
<COMMENT id="C1777" spans="498688~498690" text="C:" type="Solution" line="1969" />
<COMMENT id="C1778" spans="498892~498894" text="C:" type="Reference" line="1970" />
<COMMENT id="C1779" spans="498939~498941" text="C:" type="Reference" line="1971" />
<COMMENT id="C1780" spans="499059~499061" text="C:" type="Solution" line="1972" />
<COMMENT id="C1781" spans="502148~502150" text="C:" type="Statement" line="1973" />
<COMMENT id="C1782" spans="502161~502163" text="C:" type="Statement" line="1974" />
<COMMENT id="C1783" spans="502175~502177" text="C:" type="Inquiry" line="1975" />
<COMMENT id="C1784" spans="502288~502290" text="C:" type="Solution" line="1977" />
<COMMENT id="C1785" spans="502543~502545" text="C:" type="Inquiry" line="1978" />
<COMMENT id="C1786" spans="502684~502686" text="C:" type="Solution" line="1979" />
<COMMENT id="C1787" spans="502837~502839" text="C:" type="Solution" line="1980" />
<COMMENT id="C1788" spans="503209~503211" text="C:" type="Solution" line="1981" />
<COMMENT id="C1789" spans="504119~504121" text="C:" type="Statement" line="1982" />
<COMMENT id="C1790" spans="504410~504412" text="C:" type="Inquiry" line="1983" />
<COMMENT id="C1791" spans="504450~504452" text="C:" type="Statement" line="1984" />
<COMMENT id="C1792" spans="504623~504625" text="C:" type="Statement" line="1985" />
<COMMENT id="C1793" spans="504869~504871" text="C:" type="Solution" line="1987" />
<COMMENT id="C1794" spans="504910~504912" text="C:" type="Solution" line="1988" />
<COMMENT id="C1795" spans="504929~504931" text="C:" type="Solution" line="1989" />
<COMMENT id="C1796" spans="504957~504959" text="C:" type="Solution" line="1990" />
<COMMENT id="C1797" spans="504967~504969" text="C:" type="Statement" line="1991" />
<COMMENT id="C1798" spans="505029~505031" text="C:" type="Solution" line="1992" />
<COMMENT id="C1799" spans="505061~505063" text="C:" type="Inquiry" line="1993" />
<COMMENT id="C1800" spans="505134~505136" text="C:" type="Inquiry" line="1994" />
<COMMENT id="C1801" spans="505156~505158" text="C:" type="Statement" line="1995" />
<COMMENT id="C1802" spans="505287~505289" text="C:" type="Solution" line="1997" />
<COMMENT id="C1803" spans="505407~505409" text="C:" type="Statement" line="1998" />
<COMMENT id="C1804" spans="505799~505801" text="C:" type="Solution" line="1999" />
<COMMENT id="C1805" spans="506024~506026" text="C:" line="2000" type="Solution" />
<COMMENT id="C1806" spans="506278~506280" text="C:" type="Statement" line="2001" />
<COMMENT id="C1807" spans="506520~506522" text="C:" type="Statement" line="2002" />
<COMMENT id="C1808" spans="506538~506540" text="C:" type="Statement" line="2003" />
<COMMENT id="C1809" spans="506974~506976" text="C:" type="Statement" line="2004" />
<COMMENT id="C1810" spans="507020~507022" text="C:" type="Solution" line="2005" />
<COMMENT id="C1811" spans="507581~507583" text="C:" type="Statement" line="2006" />
<COMMENT id="C1812" spans="507846~507848" text="C:" type="Solution" line="2008" />
<COMMENT id="C1813" spans="507921~507923" text="C:" type="Solution" line="2009" />
<COMMENT id="C1814" spans="507952~507954" text="C:" type="Solution" line="2010" />
<COMMENT id="C1815" spans="508012~508014" text="C:" type="Solution" line="2011" />
<COMMENT id="C1816" spans="508053~508055" text="C:" type="Statement" line="2012" />
<COMMENT id="C1817" spans="508072~508074" text="C:" type="Statement" line="2013" />
<COMMENT id="C1818" spans="508077~508079" text="C:" type="Statement" line="2014" />
<COMMENT id="C1819" spans="508097~508099" text="C:" type="Statement" line="2015" />
<COMMENT id="C1820" spans="508127~508129" text="C:" type="Statement" line="2016" />
<COMMENT id="C1821" spans="508206~508208" text="C:" type="Statement" line="2017" />
<COMMENT id="C1822" spans="508319~508321" text="C:" type="Solution" line="2019" />
<COMMENT id="C1823" spans="508577~508579" text="C:" type="Solution" line="2020" />
<COMMENT id="C1824" spans="509074~509076" text="C:" type="Solution" line="2021" />
<COMMENT id="C1825" spans="509927~509929" text="C:" type="Solution" line="2022" />
<COMMENT id="C1826" spans="509969~509971" text="C:" type="Solution" line="2023" />
<COMMENT id="C1827" spans="510241~510243" text="C:" type="Statement" line="2024" />
<COMMENT id="C1828" spans="510273~510275" text="C:" type="Solution" line="2025" />
<COMMENT id="C1829" spans="510437~510439" text="C:" type="Solution" line="2026" />
<COMMENT id="C1830" spans="510881~510883" text="C:" type="Solution" line="2027" />
<COMMENT id="C1831" spans="510956~510958" text="C:" type="Solution" line="2028" />
<COMMENT id="C1832" spans="511176~511178" text="C:" type="Solution" line="2030" />
<COMMENT id="C1833" spans="511308~511310" text="C:" line="2031" type="Reference" />
<COMMENT id="C1834" spans="511557~511559" text="C:" type="Reference" line="2032" />
<COMMENT id="C1835" spans="511645~511647" text="C:" type="Solution" line="2033" />
<COMMENT id="C1836" spans="512105~512107" text="C:" type="Reference" line="2034" />
<COMMENT id="C1837" spans="512453~512455" text="C:" type="Solution" line="2035" />
<COMMENT id="C1838" spans="512717~512719" text="C:" type="Statement" line="2036" />
<COMMENT id="C1839" spans="512966~512968" text="C:" type="Statement" line="2037" />
<COMMENT id="C1840" spans="513106~513108" text="C:" type="Solution" line="2038" />
<COMMENT id="C1841" spans="513636~513638" text="C:" type="Solution" line="2039" />
<COMMENT id="C1842" spans="513888~513890" text="C:" type="Solution" line="2041" />
<COMMENT id="C1843" spans="513912~513914" text="C:" type="Solution" line="2042" />
<COMMENT id="C1844" spans="514092~514094" text="C:" type="Solution" line="2043" />
<COMMENT id="C1845" spans="514993~514995" text="C:" type="Solution" line="2044" />
<COMMENT id="C1846" spans="515000~515002" text="C:" type="Statement" line="2045" />
<COMMENT id="C1847" spans="515075~515077" text="C:" type="Statement" line="2047" />
<COMMENT id="C1848" spans="515174~515176" text="C:" type="Solution" line="2048" />
<COMMENT id="C1849" spans="515902~515904" text="C:" type="Solution" line="2049" />
<COMMENT id="C1850" spans="516394~516396" text="C:" type="Inquiry" line="2050" />
<COMMENT id="C1851" spans="516459~516461" text="C:" type="Solution" line="2051" />
<COMMENT id="C1852" spans="518796~518798" text="C:" type="Solution" line="2052" />
<COMMENT id="C1853" spans="521350~521352" text="C:" type="Statement" line="2053" />
<COMMENT id="C1854" spans="521479~521481" text="C:" type="Statement" line="2054" />
<COMMENT id="C1855" spans="521532~521534" text="C:" type="Solution" line="2055" />
<COMMENT id="C1856" spans="521879~521881" text="C:" type="Statement" line="2056" />
<COMMENT id="C1857" spans="522058~522060" text="C:" type="Statement" line="2058" />
<COMMENT id="C1858" spans="522339~522341" text="C:" type="Statement" line="2059" />
<COMMENT id="C1859" spans="522482~522484" text="C:" type="Reference" line="2060" />
<COMMENT id="C1860" spans="522525~522527" text="C:" type="Statement" line="2061" />
<COMMENT id="C1861" spans="522598~522600" text="C:" type="Solution" line="2062" />
<COMMENT id="C1862" spans="522927~522929" text="C:" type="Statement" line="2063" />
<COMMENT id="C1863" spans="523050~523052" text="C:" type="Statement" line="2064" />
<COMMENT id="C1864" spans="523081~523083" text="C:" type="Statement" line="2065" />
<COMMENT id="C1865" spans="523291~523293" text="C:" type="Statement" line="2066" />
<COMMENT id="C1866" spans="523336~523338" text="C:" type="Statement" line="2067" />
<COMMENT id="C1867" spans="523573~523575" text="C:" type="Solution" line="2069" />
<COMMENT id="C1868" spans="523921~523923" text="C:" type="Statement" line="2070" />
<COMMENT id="C1869" spans="524009~524011" text="C:" type="Reference" line="2071" />
<COMMENT id="C1870" spans="524119~524121" text="C:" type="Solution" line="2072" />
<COMMENT id="C1871" spans="525307~525309" text="C:" type="Statement" line="2073" />
<COMMENT id="C1872" spans="525358~525360" text="C:" type="Statement" line="2074" />
<COMMENT id="C1873" spans="525432~525434" text="C:" type="Statement" line="2075" />
<COMMENT id="C1874" spans="525507~525509" text="C:" type="Removed" line="2076" />
<COMMENT id="C1875" spans="525520~525522" text="C:" type="Removed" line="2077" />
<COMMENT id="C1876" spans="525533~525535" text="C:" type="Inquiry" line="2078" />
<COMMENT id="C1877" spans="525718~525720" text="C:" type="Statement" line="2080" />
<COMMENT id="C1878" spans="526034~526036" text="C:" type="Statement" line="2081" />
<COMMENT id="C1879" spans="526067~526069" text="C:" type="Inquiry" line="2082" />
<COMMENT id="C1880" spans="526222~526224" text="C:" type="Statement" line="2083" />
<COMMENT id="C1881" spans="526272~526274" text="C:" type="Inquiry" line="2084" />
<COMMENT id="C1882" spans="526314~526316" text="C:" type="Statement" line="2085" />
<COMMENT id="C1883" spans="526333~526335" text="C:" type="Statement" line="2086" />
<COMMENT id="C1884" spans="526380~526382" text="C:" type="Statement" line="2087" />
<COMMENT id="C1885" spans="526400~526402" text="C:" line="2088" type="Solution" />
<COMMENT id="C1886" spans="526488~526490" text="C:" type="Statement" line="2089" />
<COMMENT id="C1887" spans="526549~526551" text="C:" type="Statement" line="2091" />
<COMMENT id="C1888" spans="526655~526657" text="C:" type="Statement" line="2092" />
<COMMENT id="C1889" spans="526780~526782" text="C:" type="Statement" line="2093" />
<COMMENT id="C1890" spans="527150~527152" text="C:" type="Solution" line="2094" />
<COMMENT id="C1891" spans="527439~527441" text="C:" type="Solution" line="2095" />
<COMMENT id="C1892" spans="527502~527504" text="C:" type="Statement" line="2096" />
<COMMENT id="C1893" spans="527515~527517" text="C:" type="Removed" line="2097" />
<COMMENT id="C1894" spans="527528~527530" text="C:" type="Statement" line="2098" />
<COMMENT id="C1895" spans="527580~527582" text="C:" type="Statement" line="2099" />
<COMMENT id="C1896" spans="527637~527639" text="C:" type="Solution" line="2100" />
<COMMENT id="C1897" spans="527873~527875" text="C:" type="Statement" line="2102" />
<COMMENT id="C1898" spans="527953~527955" text="C:" type="Statement" line="2103" />
<COMMENT id="C1899" spans="528019~528021" text="C:" type="Solution" line="2104" />
<COMMENT id="C1900" spans="528129~528131" text="C:" type="Solution" line="2105" />
<COMMENT id="C1901" spans="528187~528189" text="C:" type="Statement" line="2106" />
<COMMENT id="C1902" spans="528217~528219" text="C:" type="Statement" line="2107" />
<COMMENT id="C1903" spans="528273~528275" text="C:" type="Statement" line="2108" />
<COMMENT id="C1904" spans="528334~528336" text="C:" type="Inquiry" line="2109" />
<COMMENT id="C1905" spans="528352~528354" text="C:" type="Statement" line="2110" />
<COMMENT id="C1906" spans="528375~528377" text="C:" type="Statement" line="2111" />
<COMMENT id="C1907" spans="528408~528410" text="C:" type="Removed" line="2113" />
<COMMENT id="C1908" spans="528421~528423" text="C:" type="Solution" line="2114" />
<COMMENT id="C1909" spans="528687~528689" text="C:" type="Reference" line="2115" />
<COMMENT id="C1910" spans="528845~528847" text="C:" type="Inquiry" line="2116" />
<COMMENT id="C1911" spans="528915~528917" text="C:" type="Solution" line="2117" />
<COMMENT id="C1912" spans="529017~529019" text="C:" type="Statement" line="2118" />
<COMMENT id="C1913" spans="529245~529247" text="C:" type="Statement" line="2119" />
<COMMENT id="C1914" spans="529301~529303" text="C:" type="Statement" line="2120" />
<COMMENT id="C1915" spans="529493~529495" text="C:" type="Solution" line="2121" />
<COMMENT id="C1916" spans="529596~529598" text="C:" type="Statement" line="2122" />
<COMMENT id="C1917" spans="530132~530134" text="C:" type="Statement" line="2124" />
<COMMENT id="C1918" spans="530303~530305" text="C:" type="Statement" line="2125" />
<COMMENT id="C1919" spans="530330~530332" text="C:" type="Inquiry" line="2126" />
<COMMENT id="C1920" spans="530408~530410" text="C:" type="Statement" line="2127" />
<COMMENT id="C1921" spans="530592~530594" text="C:" type="Solution" line="2128" />
<COMMENT id="C1922" spans="531164~531166" text="C:" type="Statement" line="2129" />
<COMMENT id="C1923" spans="531182~531184" text="C:" type="Statement" line="2130" />
<COMMENT id="C1924" spans="531396~531398" text="C:" type="Statement" line="2131" />
<COMMENT id="C1925" spans="531872~531874" text="C:" type="Statement" line="2132" />
<COMMENT id="C1926" spans="532271~532273" text="C:" type="Statement" line="2133" />
<COMMENT id="C1927" spans="532568~532570" text="C:" type="Statement" line="2135" />
<COMMENT id="C1928" spans="532669~532671" text="C:" type="Statement" line="2136" />
<COMMENT id="C1929" spans="533480~533482" text="C:" type="Solution" line="2137" />
<COMMENT id="C1930" spans="533594~533596" text="C:" type="Statement" line="2138" />
<COMMENT id="C1931" spans="533650~533652" text="C:" type="Statement" line="2139" />
<COMMENT id="C1932" spans="533718~533720" text="C:" type="Statement" line="2140" />
<COMMENT id="C1933" spans="533729~533731" text="C:" type="Statement" line="2141" />
<COMMENT id="C1934" spans="533755~533757" text="C:" type="Statement" line="2142" />
<COMMENT id="C1935" spans="533814~533816" text="C:" type="Statement" line="2143" />
<COMMENT id="C1936" spans="533853~533855" text="C:" type="Statement" line="2144" />
<COMMENT id="C1937" spans="533976~533978" text="C:" type="Solution" line="2146" />
<COMMENT id="C1938" spans="534189~534191" text="C:" type="Statement" line="2147" />
<COMMENT id="C1939" spans="534214~534216" text="C:" type="Solution" line="2148" />
<COMMENT id="C1940" spans="534686~534688" text="C:" type="Removed" line="2149" />
<COMMENT id="C1941" spans="534699~534701" text="C:" type="Inquiry" line="2150" />
<COMMENT id="C1942" spans="534734~534736" text="C:" type="Removed" line="2151" />
<COMMENT id="C1943" spans="534747~534749" text="C:" type="Solution" line="2152" />
<COMMENT id="C1944" spans="534961~534963" text="C:" type="Solution" line="2153" />
<COMMENT id="C1945" spans="535373~535375" text="C:" type="Inquiry" line="2154" />
<COMMENT id="C1946" spans="535477~535479" text="C:" type="Solution" line="2155" />
<COMMENT id="C1947" spans="535932~535934" text="C:" type="Statement" line="2157" />
<COMMENT id="C1948" spans="535978~535980" text="C:" type="Statement" line="2158" />
<COMMENT id="C1949" spans="535995~535997" text="C:" type="Statement" line="2159" />
<COMMENT id="C1950" spans="536025~536027" text="C:" type="Statement" line="2160" />
<COMMENT id="C1951" spans="536066~536068" text="C:" type="Statement" line="2161" />
<COMMENT id="C1952" spans="536090~536092" text="C:" type="Statement" line="2162" />
<COMMENT id="C1953" spans="536124~536126" text="C:" type="Statement" line="2163" />
<COMMENT id="C1954" spans="536166~536168" text="C:" type="Statement" line="2164" />
<COMMENT id="C1955" spans="536193~536195" text="C:" type="Statement" line="2165" />
<COMMENT id="C1956" spans="536222~536224" text="C:" type="Statement" line="2166" />
<COMMENT id="C1957" spans="536460~536462" text="C:" type="Statement" line="2168" />
<COMMENT id="C1958" spans="536530~536532" text="C:" type="Solution" line="2169" />
<COMMENT id="C1959" spans="537410~537412" text="C:" type="Inquiry" line="2170" />
<COMMENT id="C1960" spans="537537~537539" text="C:" type="Inquiry" line="2171" />
<COMMENT id="C1961" spans="537827~537829" text="C:" type="Reference" line="2172" />
<COMMENT id="C1962" spans="537845~537847" text="C:" type="Statement" line="2173" />
<COMMENT id="C1963" spans="537910~537912" text="C:" type="Statement" line="2174" />
<COMMENT id="C1964" spans="537965~537967" text="C:" type="Statement" line="2175" />
<COMMENT id="C1965" spans="538093~538095" text="C:" type="Statement" line="2176" />
<COMMENT id="C1966" spans="538303~538305" text="C:" type="Statement" line="2177" />
<COMMENT id="C1967" spans="538832~538834" text="C:" type="Statement" line="2179" />
<COMMENT id="C1968" spans="538988~538990" text="C:" type="Statement" line="2180" />
<COMMENT id="C1969" spans="539055~539057" text="C:" type="Statement" line="2181" />
<COMMENT id="C1970" spans="539138~539140" text="C:" type="Statement" line="2182" />
<COMMENT id="C1971" spans="539170~539172" text="C:" type="Statement" line="2183" />
<COMMENT id="C1972" spans="539289~539291" text="C:" type="Inquiry" line="2184" />
<COMMENT id="C1973" spans="539321~539323" text="C:" type="Statement" line="2185" />
<COMMENT id="C1974" spans="539364~539366" text="C:" type="Statement" line="2186" />
<COMMENT id="C1975" spans="539433~539435" text="C:" type="Statement" line="2187" />
<COMMENT id="C1976" spans="539483~539485" text="C:" type="Inquiry" line="2188" />
<COMMENT id="C1977" spans="539604~539606" text="C:" type="Statement" line="2190" />
<COMMENT id="C1978" spans="539653~539655" text="C:" line="2191" type="Statement" />
<COMMENT id="C1979" spans="539744~539746" text="C:" type="Inquiry" line="2192" />
<COMMENT id="C1980" spans="539837~539839" text="C:" type="Inquiry" line="2193" />
<COMMENT id="C1981" spans="539883~539885" text="C:" type="Statement" line="2194" />
<COMMENT id="C1982" spans="539915~539917" text="C:" type="Inquiry" line="2195" />
<COMMENT id="C1983" spans="540004~540006" text="C:" type="Statement" line="2196" />
<COMMENT id="C1984" spans="540186~540188" text="C:" type="Reference" line="2197" />
<COMMENT id="C1985" spans="540296~540298" text="C:" type="Statement" line="2198" />
<COMMENT id="C1986" spans="540395~540397" text="C:" type="Statement" line="2199" />
<COMMENT id="C1987" spans="540572~540574" text="C:" type="Reference" line="2201" />
<COMMENT id="C1988" spans="541048~541050" text="C:" type="Statement" line="2202" />
<COMMENT id="C1989" spans="541156~541158" text="C:" type="Statement" line="2203" />
<COMMENT id="C1990" spans="541172~541174" text="C:" type="Inquiry" line="2204" />
<COMMENT id="C1991" spans="541300~541302" text="C:" type="Statement" line="2205" />
<COMMENT id="C1992" spans="541415~541417" text="C:" type="Statement" line="2206" />
<COMMENT id="C1993" spans="542084~542086" text="C:" type="Statement" line="2207" />
<COMMENT id="C1994" spans="542132~542134" text="C:" type="Solution" line="2208" />
<COMMENT id="C1995" spans="542653~542655" text="C:" type="Statement" line="2209" />
<COMMENT id="C1996" spans="542896~542898" text="C:" type="Inquiry" line="2210" />
<COMMENT id="C1997" spans="543225~543227" text="C:" type="Inquiry" line="2212" />
<COMMENT id="C1998" spans="543259~543261" text="C:" type="Solution" line="2213" />
<COMMENT id="C1999" spans="543516~543518" text="C:" type="Statement" line="2214" />
<COMMENT id="C2000" spans="543583~543585" text="C:" type="Statement" line="2215" />
<COMMENT id="C2001" spans="543661~543663" text="C:" type="Inquiry" line="2216" />
<COMMENT id="C2002" spans="543767~543769" text="C:" type="Statement" line="2217" />
<COMMENT id="C2003" spans="543820~543822" text="C:" line="2218" type="Statement" />
<COMMENT id="C2004" spans="544013~544015" text="C:" type="Removed" line="2219" />
<COMMENT id="C2005" spans="544026~544028" text="C:" type="Statement" line="2220" />
<COMMENT id="C2006" spans="544054~544056" text="C:" type="Statement" line="2221" />
<COMMENT id="C2007" spans="544121~544123" text="C:" type="Statement" line="2223" />
<COMMENT id="C2008" spans="544299~544301" text="C:" type="Reference" line="2224" />
<COMMENT id="C2009" spans="544951~544953" text="C:" type="Removed" line="2225" />
<COMMENT id="C2010" spans="544964~544966" text="C:" type="Statement" line="2226" />
<COMMENT id="C2011" spans="545278~545280" text="C:" line="2227" type="Removed" />
<COMMENT id="C2012" spans="545291~545293" text="C:" type="Statement" line="2228" />
<COMMENT id="C2013" spans="545688~545690" text="C:" line="2229" type="Statement" />
<COMMENT id="C2014" spans="545829~545831" text="C:" type="Inquiry" line="2230" />
<COMMENT id="C2015" spans="545865~545867" text="C:" type="Statement" line="2231" />
<COMMENT id="C2016" spans="545953~545955" text="C:" type="Statement" line="2232" />
<COMMENT id="C2017" spans="546073~546075" text="C:" type="Reference" line="2234" />
<COMMENT id="C2018" spans="546858~546860" text="C:" type="Statement" line="2235" />
<COMMENT id="C2019" spans="546947~546949" text="C:" type="Statement" line="2236" />
<COMMENT id="C2020" spans="546975~546977" text="C:" type="Statement" line="2237" />
<COMMENT id="C2021" spans="547010~547012" text="C:" type="Statement" line="2238" />
<COMMENT id="C2022" spans="547278~547280" text="C:" type="Statement" line="2239" />
<COMMENT id="C2023" spans="547326~547328" text="C:" type="Statement" line="2240" />
<COMMENT id="C2024" spans="547380~547382" text="C:" type="Statement" line="2241" />
<COMMENT id="C2025" spans="547412~547414" text="C:" type="Statement" line="2242" />
<COMMENT id="C2026" spans="547735~547737" text="C:" type="Solution" line="2244" />
<COMMENT id="C2027" spans="547790~547792" text="C:" type="Statement" line="2245" />
<COMMENT id="C2028" spans="547843~547845" text="C:" type="Statement" line="2246" />
<COMMENT id="C2029" spans="547871~547873" text="C:" type="Reference" line="2247" />
<COMMENT id="C2030" spans="548197~548199" text="C:" type="Statement" line="2248" />
<COMMENT id="C2031" spans="548260~548262" text="C:" type="Statement" line="2249" />
<COMMENT id="C2032" spans="548363~548365" text="C:" type="Statement" line="2250" />
<COMMENT id="C2033" spans="548385~548387" text="C:" type="Inquiry" line="2251" />
<COMMENT id="C2034" spans="548447~548449" text="C:" type="Statement" line="2252" />
<COMMENT id="C2035" spans="548549~548551" text="C:" type="Reference" line="2253" />
<COMMENT id="C2036" spans="548739~548741" text="C:" type="Solution" line="2255" />
<COMMENT id="C2037" spans="548772~548774" text="C:" type="Inquiry" line="2256" />
<COMMENT id="C2038" spans="548948~548950" text="C:" type="Solution" line="2257" />
<COMMENT id="C2039" spans="549051~549053" text="C:" type="Inquiry" line="2258" />
<COMMENT id="C2040" spans="549075~549077" text="C:" type="Statement" line="2259" />
<COMMENT id="C2041" spans="549227~549229" text="C:" type="Inquiry" line="2260" />
<COMMENT id="C2042" spans="549297~549298" text="C" type="Solution" line="2261" />
<COMMENT id="C2043" spans="549627~549629" text="C:" type="Statement" line="2262" />
<COMMENT id="C2044" spans="549745~549747" text="C:" type="Statement" line="2263" />
<COMMENT id="C2045" spans="550084~550086" text="C:" type="Solution" line="2264" />
<COMMENT id="C2046" spans="550159~550161" text="C:" type="Solution" line="2266" />
<COMMENT id="C2047" spans="550439~550441" text="C:" type="Solution" line="2267" />
<COMMENT id="C2048" spans="551012~551014" text="C:" type="Statement" line="2268" />
<COMMENT id="C2049" spans="551850~551852" text="C:" type="Solution" line="2269" />
<COMMENT id="C2050" spans="552637~552639" text="C:" type="Solution" line="2270" />
<COMMENT id="C2051" spans="552992~552994" text="C:" type="Removed" line="2271" />
<COMMENT id="C2052" spans="553005~553007" text="C:" type="Solution" line="2272" />
<COMMENT id="C2053" spans="553401~553403" text="C:" type="Solution" line="2273" />
<COMMENT id="C2054" spans="554243~554245" text="C:" type="Solution" line="2274" />
<COMMENT id="C2055" spans="554784~554786" text="C:" type="Statement" line="2275" />
<COMMENT id="C2056" spans="555417~555419" text="C:" type="Reference" line="2277" />
<COMMENT id="C2057" spans="557607~557609" text="C:" type="Statement" line="2278" />
<COMMENT id="C2058" spans="557786~557788" text="C:" type="Statement" line="2279" />
<COMMENT id="C2059" spans="557822~557824" text="C:" type="Statement" line="2280" />
<COMMENT id="C2060" spans="557897~557899" text="C:" type="Solution" line="2281" />
<COMMENT id="C2061" spans="558013~558015" text="C:" type="Statement" line="2282" />
<COMMENT id="C2062" spans="558055~558057" text="C:" type="Solution" line="2283" />
<COMMENT id="C2063" spans="558173~558175" text="C:" type="Solution" line="2284" />
<COMMENT id="C2064" spans="558379~558381" text="C:" type="Solution" line="2285" />
<COMMENT id="C2065" spans="559747~559749" text="C:" type="Solution" line="2286" />
<COMMENT id="C2066" spans="560176~560178" text="C:" type="Reference" line="2288" />
<COMMENT id="C2067" spans="560339~560341" text="C:" type="Statement" line="2289" />
<COMMENT id="C2068" spans="560407~560409" text="C:" type="Statement" line="2290" />
<COMMENT id="C2069" spans="560675~560677" text="C:" type="Inquiry" line="2291" />
<COMMENT id="C2070" spans="560781~560783" text="C:" type="Statement" line="2292" />
<COMMENT id="C2071" spans="560813~560815" text="C:" type="Statement" line="2293" />
<COMMENT id="C2072" spans="560901~560903" text="C:" type="Statement" line="2294" />
<COMMENT id="C2073" spans="560949~560951" text="C:" type="Statement" line="2295" />
<COMMENT id="C2074" spans="561061~561063" text="C:" type="Statement" line="2296" />
<COMMENT id="C2075" spans="561596~561598" text="C:" type="Statement" line="2297" />
<COMMENT id="C2076" spans="561818~561820" text="C:" type="Statement" line="2299" />
<COMMENT id="C2077" spans="562729~562731" text="C:" type="Statement" line="2300" />
<COMMENT id="C2078" spans="562784~562786" text="C:" type="Statement" line="2301" />
<COMMENT id="C2079" spans="562852~562854" text="C:" type="Statement" line="2302" />
<COMMENT id="C2080" spans="562945~562947" text="C:" type="Statement" line="2303" />
<COMMENT id="C2081" spans="562997~562999" text="C:" type="Statement" line="2304" />
<COMMENT id="C2082" spans="563077~563079" text="C:" type="Statement" line="2305" />
<COMMENT id="C2083" spans="563171~563173" text="C:" type="Inquiry" line="2306" />
<COMMENT id="C2084" spans="563219~563221" text="C:" type="Solution" line="2307" />
<COMMENT id="C2085" spans="563280~563282" text="C:" type="Statement" line="2308" />
<COMMENT id="C2086" spans="563377~563379" text="C:" type="Statement" line="2310" />
<COMMENT id="C2087" spans="563785~563787" text="C:" type="Solution" line="2311" />
<COMMENT id="C2088" spans="565120~565122" text="C:" type="Solution" line="2312" />
<COMMENT id="C2089" spans="565670~565672" text="C:" type="Statement" line="2313" />
<COMMENT id="C2090" spans="565811~565813" text="C:" type="Solution" line="2314" />
<COMMENT id="C2091" spans="566205~566207" text="C:" type="Statement" line="2315" />
<COMMENT id="C2092" spans="566467~566469" text="C:" type="Removed" line="2316" />
<COMMENT id="C2093" spans="566672~566674" text="C:" type="Statement" line="2317" />
<COMMENT id="C2094" spans="566931~566933" text="C:" type="Statement" line="2318" />
<COMMENT id="C2095" spans="567089~567091" text="C:" type="Statement" line="2319" />
<COMMENT id="C2096" spans="567267~567269" text="C:" type="Solution" line="2321" />
<COMMENT id="C2097" spans="567411~567413" text="C:" type="Reference" line="2322" />
<COMMENT id="C2098" spans="567625~567627" text="C:" type="Solution" line="2323" />
<COMMENT id="C2099" spans="568047~568049" text="C:" type="Solution" line="2324" />
<COMMENT id="C2100" spans="568528~568530" text="C:" type="Inquiry" line="2325" />
<COMMENT id="C2101" spans="568696~568698" text="C:" type="Solution" line="2326" />
<COMMENT id="C2102" spans="569152~569154" text="C:" type="Solution" line="2327" />
<COMMENT id="C2103" spans="569350~569352" text="C:" type="Solution" line="2328" />
<COMMENT id="C2104" spans="569633~569635" text="C:" type="Solution" line="2329" />
<COMMENT id="C2105" spans="570200~570202" text="C:" type="Solution" line="2330" />
<COMMENT id="C2106" spans="570502~570504" text="C:" type="Inquiry" line="2332" />
<COMMENT id="C2107" spans="570533~570535" text="C:" type="Solution" line="2333" />
<COMMENT id="C2108" spans="571133~571135" text="C:" type="Statement" line="2334" />
<COMMENT id="C2109" spans="571154~571156" text="C:" type="Statement" line="2335" />
<COMMENT id="C2110" spans="571260~571262" text="C:" type="Statement" line="2336" />
<COMMENT id="C2111" spans="571369~571371" text="C:" type="Statement" line="2337" />
<COMMENT id="C2112" spans="571454~571456" text="C:" type="Statement" line="2338" />
<COMMENT id="C2113" spans="571586~571588" text="C:" type="Inquiry" line="2339" />
<COMMENT id="C2114" spans="571658~571660" text="C:" type="Statement" line="2340" />
<COMMENT id="C2115" spans="571767~571769" text="C:" type="Solution" line="2341" />
<COMMENT id="C2117" spans="571911~571913" text="C:" type="Reference" line="2343" />
<COMMENT id="C2118" spans="572955~572957" text="C:" type="Statement" line="2344" />
<COMMENT id="C2119" spans="572994~572996" text="C:" type="Statement" line="2345" />
<COMMENT id="C2120" spans="573122~573124" text="C:" type="Inquiry" line="2346" />
<COMMENT id="C2121" spans="573399~573401" text="C:" type="Inquiry" line="2347" />
<COMMENT id="C2122" spans="573507~573509" text="C:" type="Statement" line="2348" />
<COMMENT id="C2123" spans="573546~573548" text="C:" type="Statement" line="2349" />
<COMMENT id="C2124" spans="573620~573622" text="C:" type="Reference" line="2350" />
<COMMENT id="C2125" spans="573786~573788" text="C:" type="Solution" line="2351" />
<COMMENT id="C2126" spans="574581~574583" text="C:" type="Solution" line="2352" />
<COMMENT id="C2127" spans="575441~575443" text="C:" type="Inquiry" line="2354" />
<COMMENT id="C2128" spans="575579~575581" text="C:" type="Solution" line="2355" />
<COMMENT id="C2129" spans="576735~576737" text="C:" type="Solution" line="2356" />
<COMMENT id="C2130" spans="576791~576793" text="C:" type="Statement" line="2357" />
<COMMENT id="C2131" spans="577636~577638" text="C:" type="Inquiry" line="2358" />
<COMMENT id="C2132" spans="577737~577739" text="C:" type="Statement" line="2359" />
<COMMENT id="C2133" spans="577834~577836" text="C:" type="Statement" line="2360" />
<COMMENT id="C2134" spans="577849~577851" text="C:" type="Reference" line="2361" />
<COMMENT id="C2135" spans="577899~577901" text="C:" type="Statement" line="2362" />
<COMMENT id="C2136" spans="578159~578161" text="C:" type="Solution" line="2363" />
<COMMENT id="C2137" spans="578297~578299" text="C:" type="Solution" line="2365" />
<COMMENT id="C2138" spans="578768~578770" text="C:" type="Solution" line="2366" />
<COMMENT id="C2139" spans="579113~579115" text="C:" type="Solution" line="2367" />
<COMMENT id="C2140" spans="580743~580745" text="C:" type="Reference" line="2368" />
<COMMENT id="C2141" spans="580907~580909" text="C:" type="Statement" line="2369" />
<COMMENT id="C2142" spans="581223~581225" text="C:" type="Statement" line="2370" />
<COMMENT id="C2143" spans="581453~581455" text="C:" type="Statement" line="2371" />
<COMMENT id="C2144" spans="581486~581488" text="C:" type="Statement" line="2372" />
<COMMENT id="C2145" spans="581994~581996" text="C:" type="Solution" line="2373" />
<COMMENT id="C2146" spans="582409~582411" text="C:" type="Statement" line="2374" />
<COMMENT id="C2147" spans="582868~582870" text="C:" type="Reference" line="2376" />
<COMMENT id="C2148" spans="583260~583262" text="C:" type="Reference" line="2377" />
<COMMENT id="C2149" spans="583384~583386" text="C:" type="Statement" line="2378" />
<COMMENT id="C2150" spans="583508~583510" text="C:" type="Statement" line="2379" />
<COMMENT id="C2151" spans="583764~583766" text="C:" type="Reference" line="2380" />
<COMMENT id="C2152" spans="583837~583839" text="C:" type="Solution" line="2381" />
<COMMENT id="C2153" spans="583912~583914" text="C:" type="Solution" line="2382" />
<COMMENT id="C2154" spans="583969~583971" text="C:" type="Statement" line="2383" />
<COMMENT id="C2155" spans="584019~584021" text="C:" type="Statement" line="2384" />
<COMMENT id="C2156" spans="585185~585187" text="C:" type="Statement" line="2385" />
<COMMENT id="C2157" spans="585560~585562" text="C:" type="Statement" line="2387" />
<COMMENT id="C2158" spans="585590~585592" text="C:" type="Reference" line="2388" />
<COMMENT id="C2159" spans="585816~585818" text="C:" type="Inquiry" line="2389" />
<COMMENT id="C2160" spans="585994~585996" text="C:" type="Statement" line="2390" />
<COMMENT id="C2161" spans="586012~586014" text="C:" type="Statement" line="2391" />
<COMMENT id="C2162" spans="586045~586047" text="C:" type="Statement" line="2392" />
<COMMENT id="C2163" spans="586101~586103" text="C:" type="Statement" line="2393" />
<COMMENT id="C2164" spans="586115~586117" text="C:" type="Solution" line="2394" />
<COMMENT id="C2165" spans="586186~586188" text="C:" type="Statement" line="2395" />
<COMMENT id="C2166" spans="586349~586351" text="C:" type="Removed" line="2396" />
<COMMENT id="C2167" spans="586403~586405" text="C:" type="Statement" line="2398" />
<COMMENT id="C2168" spans="586434~586436" text="C:" type="Statement" line="2399" />
<COMMENT id="C2169" spans="586494~586496" text="C:" type="Statement" line="2400" />
<COMMENT id="C2170" spans="586563~586565" text="C:" type="Statement" line="2401" />
<COMMENT id="C2171" spans="586646~586648" text="C:" type="Removed" line="2402" />
<COMMENT id="C2172" spans="586659~586661" text="C:" type="Statement" line="2403" />
<COMMENT id="C2173" spans="586729~586731" text="C:" type="Statement" line="2404" />
<COMMENT id="C2174" spans="586778~586780" text="C:" type="Reference" line="2405" />
<COMMENT id="C2175" spans="587222~587224" text="C:" type="Removed" line="2406" />
<COMMENT id="C2176" spans="587235~587237" text="C:" type="Removed" line="2407" />
<COMMENT id="C2177" spans="587340~587342" text="C:" type="Reference" line="2409" />
<COMMENT id="C2178" spans="587766~587768" text="C:" type="Reference" line="2410" />
<COMMENT id="C2179" spans="587851~587853" text="C:" type="Statement" line="2411" />
<COMMENT id="C2180" spans="587893~587895" text="C:" type="Statement" line="2412" />
<COMMENT id="C2181" spans="588113~588115" text="C:" type="Statement" line="2413" />
<COMMENT id="C2182" spans="588212~588214" text="C:" type="Statement" line="2414" />
<COMMENT id="C2183" spans="588284~588286" text="C:" type="Solution" line="2415" />
<COMMENT id="C2184" spans="588354~588356" text="C:" type="Inquiry" line="2416" />
<COMMENT id="C2185" spans="588557~588559" text="C:" type="Statement" line="2417" />
<COMMENT id="C2186" spans="588677~588679" text="C:" type="Statement" line="2418" />
<COMMENT id="C2187" spans="588944~588946" text="C:" type="Statement" line="2420" />
<COMMENT id="C2188" spans="589176~589178" text="C:" type="Statement" line="2421" />
<COMMENT id="C2189" spans="589245~589247" text="C:" type="Statement" line="2422" />
<COMMENT id="C2190" spans="589368~589370" text="C:" type="Statement" line="2423" />
<COMMENT id="C2191" spans="591135~591137" text="C:" type="Statement" line="2424" />
<COMMENT id="C2192" spans="591487~591489" text="C:" type="Solution" line="2425" />
<COMMENT id="C2193" spans="591702~591704" text="C:" type="Statement" line="2426" />
<COMMENT id="C2194" spans="591816~591818" text="C:" type="Statement" line="2427" />
<COMMENT id="C2195" spans="591837~591839" text="C:" type="Inquiry" line="2428" />
<COMMENT id="C2196" spans="591877~591879" text="C:" type="Statement" line="2429" />
<COMMENT id="C2197" spans="591973~591975" text="C:" type="Statement" line="2431" />
<COMMENT id="C2198" spans="592203~592205" text="C:" type="Statement" line="2432" />
<COMMENT id="C2199" spans="592251~592253" text="C:" type="Statement" line="2433" />
<COMMENT id="C2200" spans="592407~592409" text="C:" type="Solution" line="2434" />
<COMMENT id="C2201" spans="592995~592997" text="C:" type="Removed" line="2435" />
<COMMENT id="C2202" spans="593008~593010" text="C:" type="Reference" line="2436" />
<COMMENT id="C2203" spans="593031~593033" text="C:" type="Solution" line="2437" />
<COMMENT id="C2204" spans="593344~593346" text="C:" type="Statement" line="2438" />
<COMMENT id="C2205" spans="593456~593458" text="C:" type="Reference" line="2439" />
<COMMENT id="C2206" spans="593547~593549" text="C:" type="Inquiry" line="2441" />
<COMMENT id="C2207" spans="593823~593825" text="C:" type="Solution" line="2442" />
<COMMENT id="C2208" spans="593871~593873" text="C:" type="Solution" line="2443" />
<COMMENT id="C2209" spans="594046~594048" text="C:" type="Statement" line="2444" />
<COMMENT id="C2210" spans="594331~594333" text="C:" type="Inquiry" line="2445" />
<COMMENT id="C2211" spans="594549~594551" text="C:" type="Solution" line="2446" />
<COMMENT id="C2212" spans="594649~594651" text="C:" type="Solution" line="2447" />
<COMMENT id="C2213" spans="594824~594826" text="C:" type="Removed" line="2448" />
<COMMENT id="C2214" spans="594837~594839" text="C:" type="Reference" line="2449" />
<COMMENT id="C2215" spans="594975~594977" text="C:" type="Statement" line="2450" />
<COMMENT id="C2216" spans="595175~595177" text="C:" type="Statement" line="2452" />
<COMMENT id="C2217" spans="595263~595265" text="C:" type="Statement" line="2453" />
<COMMENT id="C2218" spans="595461~595463" text="C:" type="Statement" line="2454" />
<COMMENT id="C2219" spans="595577~595579" text="C:" type="Solution" line="2455" />
<COMMENT id="C2220" spans="595807~595809" text="C:" type="Inquiry" line="2456" />
<COMMENT id="C2221" spans="595826~595828" text="C:" type="Solution" line="2457" />
<COMMENT id="C2222" spans="595853~595855" text="C:" type="Statement" line="2458" />
<COMMENT id="C2223" spans="595908~595910" text="C:" type="Statement" line="2459" />
<COMMENT id="C2224" spans="596109~596111" text="C:" type="Statement" line="2460" />
<COMMENT id="C2225" spans="596421~596423" text="C:" type="Statement" line="2461" />
<COMMENT id="C2226" spans="596489~596491" text="C:" type="Statement" line="2463" />
<COMMENT id="C2227" spans="596530~596532" text="C:" type="Statement" line="2464" />
<COMMENT id="C2228" spans="596618~596620" text="C:" type="Reference" line="2465" />
<COMMENT id="C2229" spans="596763~596765" text="C:" type="Statement" line="2466" />
<COMMENT id="C2230" spans="596826~596828" text="C:" type="Inquiry" line="2467" />
<COMMENT id="C2231" spans="596968~596970" text="C:" type="Solution" line="2468" />
<COMMENT id="C2232" spans="597110~597112" text="C:" type="Solution" line="2469" />
<COMMENT id="C2233" spans="597350~597352" text="C:" type="Inquiry" line="2470" />
<COMMENT id="C2234" spans="597545~597547" text="C:" type="Solution" line="2471" />
<COMMENT id="C2235" spans="598134~598136" text="C:" type="Solution" line="2473" />
<COMMENT id="C2236" spans="599601~599603" text="C:" type="Solution" line="2474" />
<COMMENT id="C2237" spans="599729~599731" text="C:" type="Statement" line="2475" />
<COMMENT id="C2238" spans="599886~599888" text="C:" type="Solution" line="2476" />
<COMMENT id="C2239" spans="600196~600198" text="C:" type="Solution" line="2477" />
<COMMENT id="C2240" spans="600404~600406" text="C:" type="Removed" line="2478" />
<COMMENT id="C2241" spans="600417~600419" text="C:" type="Inquiry" line="2479" />
<COMMENT id="C2242" spans="600482~600484" text="C:" type="Statement" line="2480" />
<COMMENT id="C2243" spans="600566~600568" text="C:" type="Statement" line="2481" />
<COMMENT id="C2244" spans="600608~600610" text="C:" type="Solution" line="2482" />
<COMMENT id="C2245" spans="600676~600678" text="C:" type="Solution" line="2484" />
<COMMENT id="C2246" spans="601091~601093" text="C:" type="Reference" line="2485" />
<COMMENT id="C2247" spans="601232~601234" text="C:" type="Statement" line="2486" />
<COMMENT id="C2248" spans="601346~601348" text="C:" type="Statement" line="2487" />
<COMMENT id="C2249" spans="601369~601371" text="C:" type="Statement" line="2488" />
<COMMENT id="C2250" spans="601407~601409" text="C:" type="Reference" line="2489" />
<COMMENT id="C2251" spans="601699~601701" text="C:" type="Solution" line="2490" />
<COMMENT id="C2252" spans="601981~601983" text="C:" type="Solution" line="2491" />
<COMMENT id="C2253" spans="602106~602108" text="C:" type="Statement" line="2492" />
<COMMENT id="C2254" spans="602228~602230" text="C:" type="Statement" line="2493" />
<COMMENT id="C2255" spans="602341~602343" text="C:" type="Statement" line="2495" />
<COMMENT id="C2256" spans="602516~602518" text="C:" type="Statement" line="2496" />
<COMMENT id="C2257" spans="602618~602620" text="C:" type="Solution" line="2497" />
<COMMENT id="C2258" spans="603221~603223" text="C:" type="Statement" line="2498" />
<COMMENT id="C2259" spans="603566~603568" text="C:" type="Reference" line="2499" />
<COMMENT id="C2260" spans="603833~603835" text="C:" type="Solution" line="2500" />
<COMMENT id="C1707" spans="604904~604906" text="C:" line="2501" type="Solution" />
<COMMENT id="C2116" spans="605084~605086" text="C:" type="Reference" line="2502" />
<COMMENT id="C2261" spans="605466~605468" text="C:" type="Reference" line="2503" />
<COMMENT id="C2262" spans="605618~605620" text="C:" type="Statement" line="2504" />
<COMMENT id="C2263" spans="605720~605722" text="C:" type="Statement" line="2506" />
<COMMENT id="C2264" spans="605921~605923" text="C:" type="Statement" line="2507" />
<COMMENT id="C2265" spans="606020~606022" text="C:" type="Statement" line="2508" />
<COMMENT id="C2266" spans="606199~606201" text="C:" type="Inquiry" line="2509" />
<COMMENT id="C2267" spans="606262~606264" text="C:" type="Statement" line="2510" />
<COMMENT id="C2268" spans="606330~606332" text="C:" type="Solution" line="2511" />
<COMMENT id="C2269" spans="606388~606390" text="C:" type="Statement" line="2512" />
<COMMENT id="C2270" spans="606564~606566" text="C:" type="Statement" line="2513" />
<COMMENT id="C2271" spans="606641~606643" text="C:" type="Statement" line="2514" />
<COMMENT id="C2272" spans="606744~606746" text="C:" type="Statement" line="2515" />
<COMMENT id="C2273" spans="606856~606858" text="C:" type="Solution" line="2517" />
<COMMENT id="C2274" spans="613360~613362" text="C:" type="Statement" line="2518" />
<COMMENT id="C2275" spans="613383~613385" text="C:" type="Solution" line="2519" />
<COMMENT id="C2276" spans="613501~613503" text="C:" type="Statement" line="2520" />
<COMMENT id="C2277" spans="613613~613615" text="C:" type="Statement" line="2521" />
<COMMENT id="C2278" spans="613869~613871" text="C:" type="Statement" line="2522" />
<COMMENT id="C2279" spans="613909~613911" text="C:" type="Solution" line="2523" />
<COMMENT id="C2280" spans="614756~614758" text="C:" type="Statement" line="2524" />
<COMMENT id="C2281" spans="614843~614845" text="C:" type="Inquiry" line="2525" />
<COMMENT id="C2282" spans="614876~614878" text="C:" type="Reference" line="2526" />
<COMMENT id="C2283" spans="614971~614973" text="C:" type="Reference" line="2528" />
<COMMENT id="C2284" spans="615433~615435" text="C:" type="Statement" line="2529" />
<COMMENT id="C2285" spans="615497~615499" text="C:" type="Statement" line="2530" />
<COMMENT id="C2286" spans="616059~616061" text="C:" type="Statement" line="2531" />
<COMMENT id="C2287" spans="616092~616094" text="C:" line="2532" type="Solution" />
<COMMENT id="C2288" spans="616186~616188" text="C:" line="2533" type="Statement" />
<COMMENT id="C2289" spans="616258~616260" text="C:" type="Statement" line="2534" />
<COMMENT id="C2290" spans="616290~616292" text="C:" type="Statement" line="2535" />
<COMMENT id="C2291" spans="616347~616349" text="C:" type="Solution" line="2536" />
<COMMENT id="C2292" spans="616700~616702" text="C:" type="Reference" line="2538" />
<COMMENT id="C2293" spans="617022~617024" text="C:" type="Statement" line="2539" />
<COMMENT id="C2294" spans="617113~617115" text="C:" type="Statement" line="2540" />
<COMMENT id="C2295" spans="617151~617153" text="C:" type="Statement" line="2541" />
<COMMENT id="C2296" spans="617307~617309" text="C:" type="Statement" line="2542" />
<COMMENT id="C2297" spans="617340~617342" text="C:" type="Inquiry" line="2543" />
<COMMENT id="C2298" spans="617427~617429" text="C:" type="Statement" line="2544" />
<COMMENT id="C2299" spans="617491~617493" text="C:" type="Statement" line="2545" />
<COMMENT id="C2300" spans="617731~617733" text="C:" type="Reference" line="2546" />
<COMMENT id="C2301" spans="617898~617900" text="C:" type="Statement" line="2547" />
<COMMENT id="C2302" spans="618120~618122" text="C:" type="Reference" line="2548" />
<COMMENT id="C2303" spans="618198~618200" text="C:" type="Statement" line="2550" />
<COMMENT id="C2304" spans="618473~618475" text="C:" type="Reference" line="2551" />
<COMMENT id="C2305" spans="618622~618624" text="C:" type="Statement" line="2552" />
<COMMENT id="C2306" spans="618777~618779" text="C:" type="Statement" line="2553" />
<COMMENT id="C2307" spans="618899~618901" text="C:" type="Statement" line="2554" />
<COMMENT id="C2308" spans="618989~618991" text="C:" type="Removed" line="2555" />
<COMMENT id="C2309" spans="619002~619004" text="C:" type="Statement" line="2556" />
<COMMENT id="C2310" spans="619487~619489" text="C:" type="Statement" line="2557" />
<COMMENT id="C2311" spans="619651~619653" text="C:" type="Solution" line="2558" />
<COMMENT id="C2312" spans="619951~619953" text="C:" type="Statement" line="2560" />
<COMMENT id="C2313" spans="620121~620123" text="C:" type="Inquiry" line="2561" />
<COMMENT id="C2314" spans="620188~620190" text="C:" type="Statement" line="2562" />
<COMMENT id="C2315" spans="620353~620355" text="C:" type="Statement" line="2563" />
<COMMENT id="C2316" spans="620497~620499" text="C:" type="Statement" line="2564" />
<COMMENT id="C2317" spans="620582~620584" text="C:" type="Statement" line="2565" />
<COMMENT id="C2318" spans="620624~620626" text="C:" type="Statement" line="2566" />
<COMMENT id="C2319" spans="620807~620809" text="C:" type="Inquiry" line="2567" />
<COMMENT id="C2320" spans="620881~620883" text="C:" type="Statement" line="2568" />
<COMMENT id="C2321" spans="620954~620956" text="C:" type="Statement" line="2569" />
<COMMENT id="C2322" spans="621172~621174" text="C:" type="Reference" line="2571" />
<COMMENT id="C2323" spans="621205~621207" text="C:" type="Solution" line="2572" />
<COMMENT id="C2324" spans="621269~621271" text="C:" type="Reference" line="2573" />
<COMMENT id="C2325" spans="621379~621381" text="C:" type="Solution" line="2574" />
<COMMENT id="C2326" spans="621534~621536" text="C:" type="Statement" line="2575" />
<COMMENT id="C2327" spans="621655~621657" text="C:" type="Statement" line="2576" />
<COMMENT id="C2328" spans="621756~621758" text="C:" type="Statement" line="2577" />
<COMMENT id="C2329" spans="621793~621795" text="C:" type="Reference" line="2578" />
<COMMENT id="C2330" spans="621806~621808" text="C:" type="Solution" line="2579" />
<COMMENT id="C2331" spans="622203~622205" text="C:" type="Solution" line="2580" />
<COMMENT id="C2332" spans="622367~622369" text="C:" type="Reference" line="2582" />
<COMMENT id="C2333" spans="622667~622669" text="C:" type="Inquiry" line="2583" />
<COMMENT id="C2334" spans="622732~622734" text="C:" type="Inquiry" line="2584" />
<COMMENT id="C2335" spans="622770~622772" text="C:" type="Inquiry" line="2585" />
<COMMENT id="C2336" spans="623095~623097" text="C:" type="Inquiry" line="2586" />
<COMMENT id="C2337" spans="623272~623274" text="C:" type="Solution" line="2587" />
<COMMENT id="C2338" spans="623454~623456" text="C:" type="Solution" line="2588" />
<COMMENT id="C2339" spans="623788~623790" text="C:" type="Solution" line="2589" />
<COMMENT id="C2340" spans="623930~623932" text="C:" type="Statement" line="2590" />
<COMMENT id="C2341" spans="624097~624099" text="C:" type="Inquiry" line="2592" />
<COMMENT id="C2342" spans="624278~624280" text="C:" type="Removed" line="2593" />
<COMMENT id="C2343" spans="624291~624293" text="C:" type="Solution" line="2594" />
<COMMENT id="C2344" spans="624328~624330" text="C:" type="Statement" line="2595" />
<COMMENT id="C2345" spans="624908~624910" text="C:" type="Solution" line="2596" />
<COMMENT id="C2346" spans="625314~625316" text="C:" type="Removed" line="2597" />
<COMMENT id="C2347" spans="625327~625329" text="C:" type="Statement" line="2598" />
<COMMENT id="C2348" spans="625408~625410" text="C:" type="Statement" line="2599" />
<COMMENT id="C2349" spans="625604~625606" text="C:" type="Statement" line="2600" />
<COMMENT id="C2350" spans="625753~625755" text="C:" type="Removed" line="2601" />
<COMMENT id="C2351" spans="625800~625802" text="C:" type="Solution" line="2603" />
<COMMENT id="C2352" spans="626652~626654" text="C:" type="Statement" line="2604" />
<COMMENT id="C2353" spans="626803~626805" text="C:" type="Statement" line="2605" />
<COMMENT id="C2354" spans="626854~626856" text="C:" type="Statement" line="2606" />
<COMMENT id="C2355" spans="626917~626919" text="C:" type="Statement" line="2607" />
<COMMENT id="C2356" spans="626978~626980" text="C:" type="Statement" line="2608" />
<COMMENT id="C2357" spans="627038~627040" text="C:" type="Inquiry" line="2609" />
<COMMENT id="C2358" spans="627146~627148" text="C:" type="Statement" line="2610" />
<COMMENT id="C2359" spans="627177~627179" text="C:" type="Solution" line="2611" />
<COMMENT id="C2360" spans="627459~627461" text="C:" type="Inquiry" line="2613" />
<COMMENT id="C2361" spans="627562~627564" text="C:" type="Reference" line="2614" />
<COMMENT id="C2362" spans="627749~627751" text="C:" type="Statement" line="2615" />
<COMMENT id="C2363" spans="627783~627785" text="C:" type="Statement" line="2616" />
<COMMENT id="C2364" spans="627851~627853" text="C:" type="Statement" line="2617" />
<COMMENT id="C2365" spans="628087~628089" text="C:" type="Statement" line="2618" />
<COMMENT id="C2366" spans="628110~628112" text="C:" type="Statement" line="2619" />
<COMMENT id="C2367" spans="628370~628372" text="C:" type="Statement" line="2620" />
<COMMENT id="C2368" spans="628646~628648" text="C:" type="Statement" line="2621" />
<COMMENT id="C2369" spans="629245~629247" text="C:" type="Statement" line="2622" />
<COMMENT id="C2370" spans="629544~629546" text="C:" type="Inquiry" line="2624" />
<COMMENT id="C2371" spans="629790~629792" text="C:" type="Statement" line="2625" />
<COMMENT id="C2372" spans="629911~629913" text="C:" type="Statement" line="2626" />
<COMMENT id="C2373" spans="630007~630009" text="C:" type="Statement" line="2627" />
<COMMENT id="C2374" spans="630058~630060" text="C:" type="Statement" line="2628" />
<COMMENT id="C2375" spans="630084~630086" text="C:" type="Statement" line="2629" />
<COMMENT id="C2376" spans="630478~630480" text="C:" type="Inquiry" line="2630" />
<COMMENT id="C2377" spans="630678~630680" text="C:" type="Inquiry" line="2631" />
<COMMENT id="C2378" spans="631045~631047" text="C:" type="Inquiry" line="2632" />
<COMMENT id="C2379" spans="631146~631148" text="C:" type="Solution" line="2633" />
<COMMENT id="C2380" spans="631827~631829" text="C:" type="Statement" line="2635" />
<COMMENT id="C2381" spans="631839~631841" text="C:" type="Solution" line="2636" />
<COMMENT id="C2382" spans="631955~631957" text="C:" type="Solution" line="2637" />
<COMMENT id="C2383" spans="632866~632868" text="C:" type="Removed" line="2638" />
<COMMENT id="C2384" spans="632879~632881" text="C:" type="Statement" line="2639" />
<COMMENT id="C2385" spans="632908~632910" text="C:" type="Statement" line="2640" />
<COMMENT id="C2386" spans="632934~632936" text="C:" type="Statement" line="2641" />
<COMMENT id="C2387" spans="633001~633003" text="C:" type="Statement" line="2643" />
<COMMENT id="C2388" spans="633056~633058" text="C:" type="Statement" line="2644" />
<COMMENT id="C2389" spans="633271~633273" text="C:" type="Solution" line="2645" />
<COMMENT id="C2390" spans="633417~633419" text="C:" type="Statement" line="2646" />
<COMMENT id="C2391" spans="633526~633528" text="C:" type="Statement" line="2647" />
<COMMENT id="C2392" spans="633542~633544" text="C:" type="Statement" line="2648" />
<COMMENT id="C2393" spans="633607~633609" text="C:" type="Statement" line="2649" />
<COMMENT id="C2394" spans="633723~633725" text="C:" type="Statement" line="2650" />
<COMMENT id="C2395" spans="633893~633895" text="C:" type="Statement" line="2651" />
<COMMENT id="C2396" spans="634049~634051" text="C:" type="Statement" line="2652" />
<COMMENT id="C2397" spans="634239~634241" text="C:" type="Solution" line="2654" />
<COMMENT id="C2398" spans="634320~634322" text="C:" type="Inquiry" line="2655" />
<COMMENT id="C2399" spans="634476~634478" text="C:" type="Removed" line="2656" />
<COMMENT id="C2400" spans="634489~634491" text="C:" type="Statement" line="2657" />
<COMMENT id="C2401" spans="634510~634512" text="C:" type="Statement" line="2658" />
<COMMENT id="C2402" spans="634520~634522" text="C:" type="Statement" line="2659" />
<COMMENT id="C2403" spans="634536~634538" text="C:" type="Statement" line="2660" />
<COMMENT id="C2404" spans="634882~634884" text="C:" type="Solution" line="2661" />
<COMMENT id="C2405" spans="634972~634974" text="C:" line="2662" type="Solution" />
<COMMENT id="C2406" spans="635105~635107" text="C:" type="Statement" line="2663" />
<COMMENT id="C2407" spans="635196~635198" text="C:" type="Inquiry" line="2665" />
<COMMENT id="C2408" spans="635277~635279" text="C:" type="Inquiry" line="2666" />
<COMMENT id="C2409" spans="635405~635407" text="C:" type="Reference" line="2667" />
<COMMENT id="C2410" spans="635904~635906" text="C:" type="Inquiry" line="2668" />
<COMMENT id="C2411" spans="636053~636055" text="C:" type="Statement" line="2669" />
<COMMENT id="C2412" spans="636075~636077" text="C:" type="Statement" line="2670" />
<COMMENT id="C2413" spans="636107~636109" text="C:" type="Statement" line="2671" />
<COMMENT id="C2414" spans="636137~636139" text="C:" type="Statement" line="2672" />
<COMMENT id="C2415" spans="636149~636151" text="C:" type="Solution" line="2673" />
<COMMENT id="C2416" spans="636516~636518" text="C:" type="Statement" line="2674" />
<COMMENT id="C2417" spans="636931~636933" text="C:" type="Solution" line="2676" />
<COMMENT id="C2418" spans="637107~637109" text="C:" type="Removed" line="2677" />
<COMMENT id="C2419" spans="637120~637122" text="C:" type="Solution" line="2678" />
<COMMENT id="C2420" spans="637279~637281" text="C:" type="Solution" line="2679" />
<COMMENT id="C2421" spans="637820~637822" text="C:" type="Statement" line="2680" />
<COMMENT id="C2422" spans="638030~638032" text="C:" type="Statement" line="2681" />
<COMMENT id="C2423" spans="638068~638070" text="C:" type="Solution" line="2682" />
<COMMENT id="C2424" spans="638149~638151" text="C:" type="Solution" line="2683" />
<COMMENT id="C2425" spans="638229~638231" text="C:" type="Solution" line="2684" />
<COMMENT id="C2426" spans="638332~638334" text="C:" type="Statement" line="2685" />
<COMMENT id="C2427" spans="638410~638412" text="C:" type="Statement" line="2687" />
<COMMENT id="C2428" spans="638571~638573" text="C:" type="Statement" line="2688" />
<COMMENT id="C2429" spans="638622~638624" text="C:" type="Inquiry" line="2689" />
<COMMENT id="C2430" spans="638709~638711" text="C:" type="Solution" line="2690" />
<COMMENT id="C2431" spans="638877~638879" text="C:" type="Statement" line="2691" />
<COMMENT id="C2432" spans="638927~638929" text="C:" type="Solution" line="2692" />
<COMMENT id="C2433" spans="638959~638961" text="C:" type="Reference" line="2693" />
<COMMENT id="C2434" spans="639159~639161" text="C:" type="Statement" line="2694" />
<COMMENT id="C2435" spans="639244~639246" text="C:" type="Reference" line="2695" />
<COMMENT id="C2436" spans="639444~639446" text="C:" type="Statement" line="2696" />
<COMMENT id="C2437" spans="639799~639801" text="C:" type="Statement" line="2698" />
<COMMENT id="C2438" spans="639848~639850" text="C:" type="Inquiry" line="2699" />
<COMMENT id="C2439" spans="639860~639862" text="C:" type="Statement" line="2700" />
<COMMENT id="C2440" spans="639939~639941" text="C:" type="Statement" line="2701" />
<COMMENT id="C2441" spans="640108~640110" text="C:" type="Statement" line="2702" />
<COMMENT id="C2442" spans="640156~640158" text="C:" type="Statement" line="2703" />
<COMMENT id="C2443" spans="640262~640264" text="C:" type="Statement" line="2704" />
<COMMENT id="C2444" spans="640358~640360" text="C:" type="Statement" line="2705" />
<COMMENT id="C2445" spans="640416~640418" text="C:" type="Statement" line="2706" />
<COMMENT id="C2446" spans="640437~640439" text="C:" type="Statement" line="2707" />
<COMMENT id="C2447" spans="640531~640533" text="C:" type="Statement" line="2709" />
<COMMENT id="C2448" spans="640605~640607" text="C:" type="Statement" line="2710" />
<COMMENT id="C2449" spans="640619~640621" text="C:" type="Statement" line="2711" />
<COMMENT id="C2450" spans="640661~640663" text="C:" type="Statement" line="2712" />
<COMMENT id="C2451" spans="640682~640684" text="C:" type="Solution" line="2713" />
<COMMENT id="C2452" spans="640754~640756" text="C:" type="Solution" line="2714" />
<COMMENT id="C2453" spans="640918~640920" text="C:" type="Statement" line="2715" />
<COMMENT id="C2454" spans="640929~640931" text="C:" type="Statement" line="2716" />
<COMMENT id="C2455" spans="640939~640941" text="C:" type="Statement" line="2717" />
<COMMENT id="C2456" spans="640957~640959" text="C:" line="2718" type="Statement" />
<COMMENT id="C2457" spans="641063~641065" text="C:" type="Solution" line="2720" />
<COMMENT id="C2458" spans="641287~641289" text="C:" type="Solution" line="2721" />
<COMMENT id="C2459" spans="642594~642596" text="C:" type="Statement" line="2722" />
<COMMENT id="C2460" spans="642796~642798" text="C:" type="Solution" line="2723" />
<COMMENT id="C2461" spans="643301~643303" text="C:" type="Solution" line="2724" />
<COMMENT id="C2462" spans="643582~643584" text="C:" type="Solution" line="2725" />
<COMMENT id="C2463" spans="644465~644467" text="C:" type="Solution" line="2726" />
<COMMENT id="C2464" spans="645317~645319" text="C:" type="Solution" line="2727" />
<COMMENT id="C2465" spans="645397~645399" text="C:" type="Solution" line="2728" />
<COMMENT id="C2466" spans="645833~645835" text="C:" type="Solution" line="2729" />
<COMMENT id="C2467" spans="646273~646275" text="C:" type="Statement" line="2731" />
<COMMENT id="C2468" spans="646342~646344" text="C:" type="Statement" line="2732" />
<COMMENT id="C2469" spans="646454~646456" text="C:" type="Statement" line="2733" />
<COMMENT id="C2470" spans="646467~646469" text="C:" type="Statement" line="2734" />
<COMMENT id="C2471" spans="646536~646538" text="C:" type="Statement" line="2735" />
<COMMENT id="C2472" spans="646571~646573" text="C:" line="2736" type="Inquiry" />
<COMMENT id="C2473" spans="646720~646722" text="C:" type="Statement" line="2737" />
<COMMENT id="C2474" spans="646775~646777" text="C:" type="Statement" line="2738" />
<COMMENT id="C2475" spans="646791~646793" text="C:" type="Statement" line="2739" />
<COMMENT id="C2476" spans="646809~646811" text="C:" type="Statement" line="2740" />
<COMMENT id="C2477" spans="646901~646903" text="C:" type="Statement" line="2742" />
<COMMENT id="C2478" spans="646975~646977" text="C:" type="Statement" line="2743" />
<COMMENT id="C2479" spans="647098~647100" text="C:" type="Statement" line="2744" />
<COMMENT id="C2480" spans="647148~647150" text="C:" type="Statement" line="2745" />
<COMMENT id="C2481" spans="647188~647190" text="C:" type="Statement" line="2746" />
<COMMENT id="C2482" spans="647211~647213" text="C:" type="Statement" line="2747" />
<COMMENT id="C2483" spans="647230~647232" text="C:" type="Statement" line="2748" />
<COMMENT id="C2484" spans="647244~647246" text="C:" type="Statement" line="2749" />
<COMMENT id="C2485" spans="647254~647256" text="C:" type="Inquiry" line="2750" />
<COMMENT id="C2486" spans="647285~647287" text="C:" type="Solution" line="2751" />
<COMMENT id="C2487" spans="647395~647397" text="C:" type="Removed" line="2753" />
<COMMENT id="C2488" spans="647408~647410" text="C:" type="Statement" line="2754" />
<COMMENT id="C2489" spans="647683~647685" text="C:" type="Statement" line="2755" />
<COMMENT id="C2490" spans="647748~647750" text="C:" type="Statement" line="2756" />
<COMMENT id="C2491" spans="647804~647806" text="C:" type="Statement" line="2757" />
<COMMENT id="C2492" spans="647828~647830" text="C:" type="Inquiry" line="2758" />
<COMMENT id="C2493" spans="647861~647863" text="C:" type="Inquiry" line="2759" />
<COMMENT id="C2494" spans="648122~648124" text="C:" type="Statement" line="2760" />
<COMMENT id="C2495" spans="648178~648180" text="C:" type="Statement" line="2761" />
<COMMENT id="C2496" spans="648226~648228" text="C:" type="Statement" line="2762" />
<COMMENT id="C2497" spans="648386~648388" text="C:" type="Solution" line="2764" />
<COMMENT id="C2498" spans="648613~648615" text="C:" type="Statement" line="2765" />
<COMMENT id="C2499" spans="648716~648718" text="C:" type="Statement" line="2766" />
<COMMENT id="C2500" spans="648747~648749" text="C:" type="Statement" line="2767" />
<COMMENT id="C2501" spans="648889~648891" text="C:" type="Statement" line="2768" />
<COMMENT id="C2502" spans="649515~649517" text="C:" type="Reference" line="2769" />
<COMMENT id="C2503" spans="649687~649689" text="C:" type="Statement" line="2770" />
<COMMENT id="C2504" spans="649785~649787" text="C:" type="Statement" line="2771" />
<COMMENT id="C2505" spans="649829~649831" text="C:" type="Reference" line="2772" />
<COMMENT id="C2506" spans="649922~649924" text="C:" type="Statement" line="2774" />
<COMMENT id="C2507" spans="649988~649990" text="C:" type="Statement" line="2775" />
<COMMENT id="C2508" spans="650041~650043" text="C:" type="Statement" line="2776" />
<COMMENT id="C2509" spans="650069~650071" text="C:" type="Statement" line="2777" />
<COMMENT id="C2510" spans="650106~650108" text="C:" line="2778" type="Inquiry" />
<COMMENT id="C2511" spans="650538~650540" text="C:" type="Solution" line="2779" />
<COMMENT id="C2512" spans="650583~650585" text="C:" type="Statement" line="2780" />
<COMMENT id="C2513" spans="650630~650632" text="C:" type="Statement" line="2781" />
<COMMENT id="C2514" spans="650644~650646" text="C:" type="Inquiry" line="2782" />
<COMMENT id="C2515" spans="650698~650700" text="C:" type="Inquiry" line="2784" />
<COMMENT id="C2516" spans="650772~650774" text="C:" type="Solution" line="2785" />
<COMMENT id="C2517" spans="652975~652977" text="C:" line="2786" type="Inquiry" />
<COMMENT id="C2518" spans="653281~653283" text="C:" line="2787" type="Statement" />
<COMMENT id="C2519" spans="653387~653389" text="C:" type="Inquiry" line="2788" />
<COMMENT id="C2520" spans="653479~653481" text="C:" type="Statement" line="2789" />
<COMMENT id="C2521" spans="653607~653609" text="C:" type="Statement" line="2790" />
<COMMENT id="C2522" spans="654072~654074" text="C:" type="Solution" line="2791" />
<COMMENT id="C2523" spans="654815~654817" text="C:" type="Inquiry" line="2792" />
<COMMENT id="C2524" spans="655027~655029" text="C:" type="Statement" line="2793" />
<COMMENT id="C2525" spans="655926~655928" text="C:" type="Solution" line="2795" />
<COMMENT id="C2526" spans="657281~657283" text="C:" type="Solution" line="2796" />
<COMMENT id="C2527" spans="658697~658699" text="C:" type="Statement" line="2797" />
<COMMENT id="C2528" spans="658857~658859" text="C:" type="Solution" line="2798" />
<COMMENT id="C2529" spans="659071~659073" text="C:" type="Solution" line="2799" />
<COMMENT id="C2530" spans="659381~659383" text="C:" type="Solution" line="2800" />
<COMMENT id="C2531" spans="659769~659771" text="C:" type="Statement" line="2801" />
<COMMENT id="C2532" spans="659805~659807" text="C:" type="Statement" line="2802" />
<COMMENT id="C2533" spans="659990~659992" text="C:" type="Statement" line="2803" />
<COMMENT id="C2534" spans="660101~660103" text="C:" type="Statement" line="2804" />
<COMMENT id="C2535" spans="660141~660143" text="C:" type="Inquiry" line="2806" />
<COMMENT id="C2536" spans="660158~660160" text="C:" type="Statement" line="2807" />
<COMMENT id="C2537" spans="660178~660180" text="C:" type="Statement" line="2808" />
<COMMENT id="C2538" spans="660214~660216" text="C:" type="Removed" line="2809" />
<COMMENT id="C2539" spans="660227~660229" text="C:" type="Inquiry" line="2810" />
<COMMENT id="C2540" spans="660281~660283" text="C:" type="Statement" line="2811" />
<COMMENT id="C2541" spans="660300~660302" text="C:" type="Inquiry" line="2812" />
<COMMENT id="C2542" spans="660343~660345" text="C:" line="2813" type="Solution" />
<COMMENT id="C2543" spans="660522~660524" text="C:" type="Statement" line="2814" />
<COMMENT id="C2544" spans="660598~660600" text="C:" line="2816" type="Solution" />
<COMMENT id="C2545" spans="660794~660796" text="C:" line="2817" type="Solution" />
<COMMENT id="C2546" spans="661214~661216" text="C:" type="Solution" line="2818" />
<COMMENT id="C2547" spans="661737~661739" text="C:" type="Solution" line="2819" />
<COMMENT id="C2548" spans="661859~661861" text="C:" type="Reference" line="2820" />
<COMMENT id="C2549" spans="662004~662006" text="C:" type="Solution" line="2821" />
<COMMENT id="C2550" spans="662592~662594" text="C:" type="Statement" line="2822" />
<COMMENT id="C2551" spans="662792~662794" text="C:" type="Statement" line="2823" />
<COMMENT id="C2552" spans="663115~663117" text="C:" type="Statement" line="2824" />
<COMMENT id="C2553" spans="663346~663348" text="C:" type="Statement" line="2825" />
<COMMENT id="C2554" spans="663779~663781" text="C:" type="Statement" line="2827" />
<COMMENT id="C2555" spans="663862~663864" text="C:" type="Solution" line="2828" />
<COMMENT id="C2556" spans="663969~663971" text="C:" type="Solution" line="2829" />
<COMMENT id="C2557" spans="665029~665031" text="C:" type="Statement" line="2830" />
<COMMENT id="C2558" spans="665062~665064" text="C:" line="2831" type="Statement" />
<COMMENT id="C2559" spans="665144~665146" text="C:" type="Statement" line="2832" />
<COMMENT id="C2560" spans="665271~665273" text="C:" type="Reference" line="2833" />
<COMMENT id="C2561" spans="666629~666631" text="C:" type="Statement" line="2834" />
<COMMENT id="C2562" spans="666916~666918" text="C:" type="Statement" line="2835" />
<COMMENT id="C2563" spans="666988~666990" text="C:" type="Statement" line="2836" />
<COMMENT id="C2564" spans="667093~667095" text="C:" type="Reference" line="2838" />
<COMMENT id="C2565" spans="667129~667131" text="C:" type="Solution" line="2839" />
<COMMENT id="C2566" spans="667839~667841" text="C:" type="Reference" line="2840" />
<COMMENT id="C2567" spans="668028~668030" text="C:" type="Reference" line="2841" />
<COMMENT id="C2568" spans="668285~668287" text="C:" type="Statement" line="2842" />
<COMMENT id="C2569" spans="668335~668337" text="C:" type="Statement" line="2843" />
<COMMENT id="C2570" spans="668373~668375" text="C:" type="Statement" line="2844" />
<COMMENT id="C2571" spans="668543~668545" text="C:" type="Reference" line="2845" />
<COMMENT id="C2572" spans="668723~668725" text="C:" type="Statement" line="2846" />
<COMMENT id="C2573" spans="669239~669241" text="C:" type="Statement" line="2847" />
<COMMENT id="C2574" spans="669496~669498" text="C:" type="Solution" line="2849" />
<COMMENT id="C2575" spans="670240~670242" text="C:" type="Statement" line="2850" />
<COMMENT id="C2576" spans="670475~670477" text="C:" type="Statement" line="2851" />
<COMMENT id="C2577" spans="670503~670505" text="C:" type="Statement" line="2852" />
<COMMENT id="C2578" spans="670885~670887" text="C:" type="Statement" line="2853" />
<COMMENT id="C2579" spans="672633~672635" text="C:" type="Solution" line="2854" />
<COMMENT id="C2580" spans="672707~672709" text="C:" type="Solution" line="2855" />
<COMMENT id="C2581" spans="672939~672941" text="C:" type="Reference" line="2856" />
<COMMENT id="C2582" spans="673757~673759" text="C:" type="Solution" line="2857" />
<COMMENT id="C2583" spans="673862~673864" text="C:" type="Solution" line="2858" />
<COMMENT id="C2584" spans="674210~674212" text="C:" type="Statement" line="2860" />
<COMMENT id="C2585" spans="674358~674360" text="C:" type="Solution" line="2861" />
<COMMENT id="C2586" spans="674648~674650" text="C:" type="Statement" line="2862" />
<COMMENT id="C2587" spans="674695~674697" text="C:" type="Solution" line="2863" />
<COMMENT id="C2588" spans="675556~675558" text="C:" type="Statement" line="2864" />
<COMMENT id="C2589" spans="675602~675604" text="C:" type="Solution" line="2865" />
<COMMENT id="C2590" spans="676112~676114" text="C:" type="Statement" line="2866" />
<COMMENT id="C2591" spans="676202~676204" text="C:" type="Statement" line="2867" />
<COMMENT id="C2592" spans="676279~676281" text="C:" type="Solution" line="2868" />
<COMMENT id="C2593" spans="676848~676850" text="C:" type="Solution" line="2869" />
<COMMENT id="C2594" spans="677166~677168" text="C:" type="Statement" line="2871" />
<COMMENT id="C2595" spans="677253~677255" text="C:" type="Statement" line="2872" />
<COMMENT id="C2596" spans="677288~677290" text="C:" line="2873" type="Statement" />
<COMMENT id="C2597" spans="677321~677323" text="C:" line="2874" type="Statement" />
<COMMENT id="C2598" spans="677392~677394" text="C:" type="Statement" line="2875" />
<COMMENT id="C2599" spans="677427~677429" text="C:" type="Removed" line="2876" />
<COMMENT id="C2600" spans="677440~677442" text="C:" type="Statement" line="2877" />
<COMMENT id="C2601" spans="677530~677532" text="C:" type="Statement" line="2878" />
<COMMENT id="C2602" spans="677594~677596" text="C:" type="Removed" line="2879" />
<COMMENT id="C2603" spans="677665~677667" text="C:" type="Statement" line="2881" />
<COMMENT id="C2604" spans="677732~677734" text="C:" type="Statement" line="2882" />
<COMMENT id="C2605" spans="677794~677796" text="C:" type="Statement" line="2883" />
<COMMENT id="C2606" spans="678073~678075" text="C:" type="Statement" line="2884" />
<COMMENT id="C2607" spans="678227~678229" text="C:" type="Solution" line="2885" />
<COMMENT id="C2608" spans="678388~678390" text="C:" type="Solution" line="2887" />
<COMMENT id="C2609" spans="679718~679720" text="C:" type="Solution" line="2888" />
<COMMENT id="C2610" spans="680107~680109" text="C:" type="Solution" line="2889" />
<COMMENT id="C2611" spans="680370~680372" text="C:" type="Solution" line="2890" />
<COMMENT id="C2612" spans="681211~681213" text="C:" type="Solution" line="2891" />
<COMMENT id="C2613" spans="682276~682278" text="C:" type="Reference" line="2892" />
<COMMENT id="C2614" spans="682360~682362" text="C:" type="Reference" line="2893" />
<COMMENT id="C2615" spans="682746~682748" text="C:" type="Removed" line="2894" />
<COMMENT id="C2616" spans="682759~682761" text="C:" type="Statement" line="2895" />
<COMMENT id="C2617" spans="683333~683335" text="C:" type="Inquiry" line="2897" />
<COMMENT id="C2618" spans="683452~683454" text="C:" type="Statement" line="2898" />
<COMMENT id="C2619" spans="683487~683489" text="C:" type="Solution" line="2899" />
<COMMENT id="C2620" spans="684557~684559" text="C:" type="Statement" line="2900" />
<COMMENT id="C2621" spans="684848~684850" text="C:" type="Statement" line="2901" />
<COMMENT id="C2622" spans="684947~684949" text="C:" type="Reference" line="2903" />
<COMMENT id="C2623" spans="685114~685116" text="C:" type="Solution" line="2904" />
<COMMENT id="C2624" spans="685353~685355" text="C:" type="Statement" line="2905" />
<COMMENT id="C2625" spans="685388~685390" text="C:" line="2906" type="Solution" />
<COMMENT id="C2626" spans="686302~686304" text="C:" type="Solution" line="2907" />
<COMMENT id="C2627" spans="686512~686514" text="C:" type="Inquiry" line="2908" />
<COMMENT id="C2628" spans="686771~686773" text="C:" type="Statement" line="2909" />
<COMMENT id="C2629" spans="687026~687028" text="C:" type="Solution" line="2910" />
<COMMENT id="C2630" spans="687681~687683" text="C:" type="Solution" line="2911" />
<COMMENT id="C2631" spans="688132~688134" text="C:" type="Reference" line="2913" />
<COMMENT id="C2632" spans="688344~688346" text="C:" type="Reference" line="2914" />
<COMMENT id="C2633" spans="688379~688381" text="C:" type="Solution" line="2915" />
<COMMENT id="C2634" spans="688392~688394" text="C:" type="Solution" line="2916" />
<COMMENT id="C2635" spans="688414~688416" text="C:" type="Statement" line="2917" />
<COMMENT id="C2636" spans="688444~688446" text="C:" type="Statement" line="2918" />
<COMMENT id="C2637" spans="688512~688514" text="C:" type="Statement" line="2919" />
<COMMENT id="C2638" spans="688608~688610" text="C:" type="Reference" line="2921" />
<COMMENT id="C2639" spans="688976~688978" text="C:" type="Solution" line="2922" />
<COMMENT id="C2640" spans="689720~689722" text="C:" type="Solution" line="2923" />
<COMMENT id="C2641" spans="690267~690269" text="C:" type="Inquiry" line="2924" />
<COMMENT id="C2642" spans="690719~690721" text="C:" type="Statement" line="2925" />
<COMMENT id="C2643" spans="691067~691069" text="C:" type="Inquiry" line="2926" />
<COMMENT id="C2644" spans="691317~691319" text="C:" type="Inquiry" line="2927" />
<COMMENT id="C2645" spans="691415~691417" text="C:" type="Solution" line="2928" />
<COMMENT id="C2646" spans="691774~691776" text="C:" type="Solution" line="2929" />
<COMMENT id="C2647" spans="692144~692146" text="C:" type="Solution" line="2930" />
<COMMENT id="C2648" spans="692895~692897" text="C:" type="Statement" line="2932" />
<COMMENT id="C2649" spans="692994~692996" text="C:" type="Inquiry" line="2933" />
<COMMENT id="C2650" spans="693155~693157" text="C:" type="Statement" line="2934" />
<COMMENT id="C2651" spans="693286~693288" text="C:" type="Statement" line="2935" />
<COMMENT id="C2652" spans="693318~693320" text="C:" type="Statement" line="2936" />
<COMMENT id="C2653" spans="693348~693350" text="C:" type="Statement" line="2937" />
<COMMENT id="C2654" spans="693361~693363" text="C:" type="Inquiry" line="2938" />
<COMMENT id="C2655" spans="693517~693519" text="C:" type="Statement" line="2939" />
<COMMENT id="C2656" spans="693590~693592" text="C:" type="Statement" line="2940" />
<COMMENT id="C2657" spans="693691~693693" text="C:" type="Statement" line="2941" />
<COMMENT id="C2658" spans="693789~693791" text="C:" type="Solution" line="2943" />
<COMMENT id="C2659" spans="694115~694117" text="C:" type="Statement" line="2944" />
<COMMENT id="C2660" spans="694159~694161" text="C:" type="Statement" line="2945" />
<COMMENT id="C2661" spans="694261~694263" text="C:" type="Statement" line="2946" />
<COMMENT id="C2662" spans="694431~694433" text="C:" type="Reference" line="2947" />
<COMMENT id="C2663" spans="694532~694534" text="C:" type="Statement" line="2948" />
<COMMENT id="C2664" spans="694856~694858" text="C:" type="Statement" line="2949" />
<COMMENT id="C2665" spans="695137~695139" text="C:" type="Inquiry" line="2950" />
<COMMENT id="C2666" spans="695183~695185" text="C:" type="Reference" line="2951" />
<COMMENT id="C2667" spans="695385~695387" text="C:" type="Statement" line="2952" />
<COMMENT id="C2668" spans="695532~695534" text="C:" type="Statement" line="2954" />
<COMMENT id="C2669" spans="695546~695548" text="C:" type="Inquiry" line="2955" />
<COMMENT id="C2670" spans="695610~695612" text="C:" type="Reference" line="2956" />
<COMMENT id="C2671" spans="695763~695765" text="C:" type="Statement" line="2957" />
<COMMENT id="C2672" spans="695785~695787" text="C:" type="Statement" line="2958" />
<COMMENT id="C2673" spans="695799~695801" text="C:" type="Statement" line="2959" />
<COMMENT id="C2674" spans="695818~695820" text="C:" type="Statement" line="2960" />
<COMMENT id="C2675" spans="695913~695915" text="C:" type="Inquiry" line="2961" />
<COMMENT id="C2676" spans="695946~695948" text="C:" type="Solution" line="2962" />
<COMMENT id="C2677" spans="696357~696359" text="C:" type="Statement" line="2963" />
<COMMENT id="C2678" spans="696429~696431" text="C:" type="Statement" line="2965" />
<COMMENT id="C2679" spans="697161~697163" text="C:" type="Statement" line="2966" />
<COMMENT id="C2680" spans="697220~697222" text="C:" type="Statement" line="2967" />
<COMMENT id="C2681" spans="697304~697306" text="C:" type="Inquiry" line="2968" />
<COMMENT id="C2682" spans="697319~697321" text="C:" type="Statement" line="2969" />
<COMMENT id="C2683" spans="697530~697532" text="C:" type="Statement" line="2970" />
<COMMENT id="C2684" spans="697829~697831" text="C:" type="Statement" line="2971" />
<COMMENT id="C2685" spans="697886~697888" text="C:" type="Removed" line="2972" />
<COMMENT id="C2686" spans="697899~697901" text="C:" type="Statement" line="2973" />
<COMMENT id="C2687" spans="698018~698020" text="C:" type="Statement" line="2974" />
<COMMENT id="C2688" spans="698094~698096" text="C:" type="Solution" line="2976" />
<COMMENT id="C2689" spans="699214~699216" text="C:" type="Solution" line="2977" />
<COMMENT id="C2690" spans="700148~700150" text="C:" type="Solution" line="2978" />
<COMMENT id="C2691" spans="700320~700322" text="C:" line="2979" type="Solution" />
<COMMENT id="C2692" spans="700845~700847" text="C:" type="Solution" line="2980" />
<COMMENT id="C2693" spans="703265~703267" text="C:" type="Solution" line="2981" />
<COMMENT id="C2694" spans="703616~703618" text="C:" type="Statement" line="2982" />
<COMMENT id="C2695" spans="703666~703668" text="C:" type="Statement" line="2983" />
<COMMENT id="C2696" spans="703706~703708" text="C:" type="Statement" line="2984" />
<COMMENT id="C2697" spans="703728~703730" text="C:" type="Statement" line="2985" />
<COMMENT id="C2698" spans="704326~704328" text="C:" type="Reference" line="2987" />
<COMMENT id="C2699" spans="704656~704658" text="C:" type="Solution" line="2988" />
<COMMENT id="C2700" spans="704749~704751" text="C:" type="Solution" line="2989" />
<COMMENT id="C2701" spans="704790~704792" text="C:" type="Reference" line="2990" />
<COMMENT id="C2702" spans="704908~704910" text="C:" type="Solution" line="2991" />
<COMMENT id="C2703" spans="706452~706454" text="C:" type="Reference" line="2992" />
<COMMENT id="C2704" spans="706524~706526" text="C:" type="Solution" line="2993" />
<COMMENT id="C2705" spans="706893~706895" text="C:" type="Statement" line="2994" />
<COMMENT id="C2706" spans="706943~706945" text="C:" type="Reference" line="2995" />
<COMMENT id="C2707" spans="706957~706959" text="C:" type="Statement" line="2996" />
<COMMENT id="C2708" spans="707042~707044" text="C:" type="Statement" line="2998" />
<COMMENT id="C2709" spans="707293~707295" text="C:" type="Solution" line="2999" />
<COMMENT id="C2710" spans="707367~707369" text="C:" type="Statement" line="3000" />
<COMMENT id="C2711" spans="707412~707414" text="C:" type="Statement" line="3001" />
<COMMENT id="C2712" spans="707473~707475" text="C:" type="Statement" line="3002" />
<COMMENT id="C2713" spans="707497~707499" text="C:" type="Statement" line="3003" />
<COMMENT id="C2714" spans="707519~707521" text="C:" type="Statement" line="3004" />
<COMMENT id="C2715" spans="707617~707619" text="C:" type="Statement" line="3005" />
<COMMENT id="C2716" spans="707656~707658" text="C:" type="Statement" line="3006" />
<COMMENT id="C2717" spans="707956~707958" text="C:" type="Statement" line="3007" />
<COMMENT id="C2718" spans="708137~708139" text="C:" type="Statement" line="3009" />
<COMMENT id="C2719" spans="708210~708212" text="C:" type="Statement" line="3010" />
<COMMENT id="C2720" spans="708318~708320" text="C:" type="Statement" line="3011" />
<COMMENT id="C2721" spans="708330~708332" text="C:" type="Statement" line="3012" />
<COMMENT id="C2722" spans="708554~708556" text="C:" type="Reference" line="3013" />
<COMMENT id="C2723" spans="708691~708693" text="C:" type="Reference" line="3015" />
<COMMENT id="C2724" spans="708836~708838" text="C:" type="Statement" line="3016" />
<COMMENT id="C2725" spans="708966~708968" text="C:" type="Statement" line="3017" />
<COMMENT id="C2726" spans="709108~709110" text="C:" type="Statement" line="3018" />
<COMMENT id="C2727" spans="709171~709173" text="C:" type="Statement" line="3019" />
<COMMENT id="C2729" spans="709264~709266" text="C:" type="Removed" line="3021" />
<COMMENT id="C2730" spans="709277~709279" text="C:" type="Solution" line="3022" />
<COMMENT id="C2731" spans="709306~709308" text="C:" type="Solution" line="3023" />
<COMMENT id="C2732" spans="709336~709338" text="C:" type="Solution" line="3024" />
<COMMENT id="C2733" spans="709357~709359" text="C:" type="Solution" line="3025" />
<COMMENT id="C2734" spans="710037~710039" text="C:" type="Statement" line="3026" />
<COMMENT id="C2735" spans="710463~710465" text="C:" type="Statement" line="3027" />
<COMMENT id="C2736" spans="710821~710823" text="C:" type="Statement" line="3028" />
<COMMENT id="C2737" spans="710855~710857" text="C:" type="Removed" line="3029" />
<COMMENT id="C2738" spans="710868~710870" text="C:" type="Solution" line="3030" />
<COMMENT id="C2739" spans="711044~711046" text="C:" type="Solution" line="3032" />
<COMMENT id="C2740" spans="711162~711164" text="C:" type="Solution" line="3033" />
<COMMENT id="C2741" spans="712423~712425" text="C:" type="Removed" line="3034" />
<COMMENT id="C2742" spans="712436~712438" text="C:" type="Statement" line="3035" />
<COMMENT id="C2743" spans="712503~712505" text="C:" type="Inquiry" line="3036" />
<COMMENT id="C2744" spans="712598~712600" text="C:" type="Solution" line="3037" />
<COMMENT id="C2745" spans="713114~713116" text="C:" type="Statement" line="3038" />
<COMMENT id="C2746" spans="713190~713192" text="C:" type="Solution" line="3039" />
<COMMENT id="C2747" spans="713589~713591" text="C:" type="Solution" line="3040" />
<COMMENT id="C2748" spans="713856~713858" text="C:" type="Inquiry" line="3041" />
<COMMENT id="C2749" spans="714151~714153" text="C:" type="Inquiry" line="3043" />
<COMMENT id="C2750" spans="714238~714240" text="C:" type="Statement" line="3044" />
<COMMENT id="C2751" spans="714252~714254" text="C:" type="Statement" line="3045" />
<COMMENT id="C2752" spans="714306~714308" text="C:" type="Statement" line="3046" />
<COMMENT id="C2753" spans="714331~714333" text="C:" type="Statement" line="3047" />
<COMMENT id="C2754" spans="714342~714344" text="C:" type="Statement" line="3048" />
<COMMENT id="C2755" spans="714353~714355" text="C:" type="Statement" line="3049" />
<COMMENT id="C2756" spans="714366~714368" text="C:" type="Statement" line="3050" />
<COMMENT id="C2757" spans="714377~714379" text="C:" type="Solution" line="3051" />
<COMMENT id="C2758" spans="714547~714549" text="C:" type="Solution" line="3053" />
<COMMENT id="C2759" spans="715502~715504" text="C:" type="Solution" line="3054" />
<COMMENT id="C2760" spans="715989~715991" text="C:" type="Solution" line="3055" />
<COMMENT id="C2761" spans="716518~716520" text="C:" type="Solution" line="3056" />
<COMMENT id="C2762" spans="717669~717671" text="C:" type="Statement" line="3057" />
<COMMENT id="C2763" spans="717768~717770" text="C:" type="Statement" line="3058" />
<COMMENT id="C2764" spans="717791~717793" text="C:" type="Inquiry" line="3059" />
<COMMENT id="C2765" spans="717875~717877" text="C:" type="Statement" line="3060" />
<COMMENT id="C2766" spans="718060~718062" text="C:" type="Statement" line="3061" />
<COMMENT id="C2767" spans="718159~718161" text="C:" type="Solution" line="3062" />
<COMMENT id="C2768" spans="718502~718504" text="C:" type="Solution" line="3064" />
<COMMENT id="C2769" spans="718872~718874" text="C:" type="Inquiry" line="3065" />
<COMMENT id="C2770" spans="718985~718987" text="C:" type="Inquiry" line="3066" />
<COMMENT id="C2771" spans="719158~719160" text="C:" type="Statement" line="3067" />
<COMMENT id="C2772" spans="719209~719211" text="C:" type="Statement" line="3068" />
<COMMENT id="C2773" spans="719718~719720" text="C:" type="Solution" line="3069" />
<COMMENT id="C2774" spans="719741~719743" text="C:" type="Solution" line="3070" />
<COMMENT id="C2775" spans="719811~719813" text="C:" type="Statement" line="3071" />
<COMMENT id="C2776" spans="719886~719888" text="C:" type="Statement" line="3072" />
<COMMENT id="C2777" spans="719925~719927" text="C:" type="Statement" line="3073" />
<COMMENT id="C2778" spans="720243~720245" text="C:" type="Solution" line="3075" />
<COMMENT id="C2779" spans="720493~720495" text="C:" type="Statement" line="3076" />
<COMMENT id="C2780" spans="720612~720614" text="C:" type="Solution" line="3077" />
<COMMENT id="C2781" spans="720682~720684" text="C:" type="Inquiry" line="3078" />
<COMMENT id="C2782" spans="720836~720838" text="C:" type="Solution" line="3079" />
<COMMENT id="C2783" spans="721254~721256" text="C:" type="Solution" line="3080" />
<COMMENT id="C2784" spans="721393~721395" text="C:" type="Solution" line="3081" />
<COMMENT id="C2785" spans="721437~721439" text="C:" type="Statement" line="3082" />
<COMMENT id="C2786" spans="721521~721523" text="C:" type="Solution" line="3083" />
<COMMENT id="C2787" spans="721660~721662" text="C:" type="Solution" line="3085" />
<COMMENT id="C2788" spans="721789~721791" text="C:" type="Solution" line="3086" />
<COMMENT id="C2789" spans="721901~721903" text="C:" type="Removed" line="3087" />
<COMMENT id="C2790" spans="721914~721916" text="C:" type="Solution" line="3088" />
<COMMENT id="C2791" spans="722161~722163" text="C:" type="Solution" line="3089" />
<COMMENT id="C2792" spans="723123~723125" text="C:" type="Solution" line="3090" />
<COMMENT id="C2793" spans="723404~723406" text="C:" type="Statement" line="3091" />
<COMMENT id="C2794" spans="723451~723453" text="C:" type="Inquiry" line="3092" />
<COMMENT id="C2795" spans="723479~723481" text="C:" type="Inquiry" line="3093" />
<COMMENT id="C2796" spans="723506~723508" text="C:" type="Solution" line="3094" />
<COMMENT id="C2797" spans="723939~723941" text="C:" type="Solution" line="3096" />
<COMMENT id="C2798" spans="724362~724364" text="C:" type="Statement" line="3097" />
<COMMENT id="C2799" spans="724641~724643" text="C:" type="Solution" line="3098" />
<COMMENT id="C2800" spans="724969~724971" text="C:" type="Solution" line="3099" />
<COMMENT id="C2801" spans="725940~725942" text="C:" type="Statement" line="3100" />
<COMMENT id="C2802" spans="725998~726000" text="C:" type="Statement" line="3101" />
<COMMENT id="C2803" spans="726138~726140" text="C:" type="Statement" line="3102" />
<COMMENT id="C2804" spans="726226~726228" text="C:" type="Solution" line="3103" />
<COMMENT id="C2805" spans="726547~726549" text="C:" type="Solution" line="3104" />
<COMMENT id="C2806" spans="726812~726814" text="C:" type="Statement" line="3105" />
<COMMENT id="C2807" spans="726922~726924" text="C:" type="Solution" line="3107" />
<COMMENT id="C2808" spans="727421~727423" text="C:" type="Solution" line="3108" />
<COMMENT id="C2809" spans="728010~728012" text="C:" type="Solution" line="3109" />
<COMMENT id="C2810" spans="728357~728359" text="C:" type="Statement" line="3110" />
<COMMENT id="C2811" spans="728472~728474" text="C:" type="Solution" line="3111" />
<COMMENT id="C2812" spans="729538~729540" text="C:" type="Solution" line="3112" />
<COMMENT id="C2813" spans="729973~729975" text="C:" type="Inquiry" line="3113" />
<COMMENT id="C2814" spans="730020~730022" text="C:" type="Statement" line="3114" />
<COMMENT id="C2815" spans="730105~730107" text="C:" type="Statement" line="3115" />
<COMMENT id="C2816" spans="730252~730254" text="C:" type="Solution" line="3116" />
<COMMENT id="C2817" spans="730522~730524" text="C:" type="Inquiry" line="3118" />
<COMMENT id="C2818" spans="730868~730870" text="C:" type="Solution" line="3119" />
<COMMENT id="C2819" spans="731097~731099" text="C:" type="Statement" line="3120" />
<COMMENT id="C2820" spans="731140~731142" text="C:" type="Statement" line="3121" />
<COMMENT id="C2821" spans="731266~731268" text="C:" type="Statement" line="3122" />
<COMMENT id="C2822" spans="731325~731327" text="C:" type="Removed" line="3123" />
<COMMENT id="C2823" spans="731338~731340" text="C:" type="Statement" line="3124" />
<COMMENT id="C2824" spans="733424~733426" text="C:" type="Statement" line="3125" />
<COMMENT id="C2825" spans="733612~733614" text="C:" type="Inquiry" line="3126" />
<COMMENT id="C2826" spans="733913~733915" text="C:" type="Statement" line="3127" />
<COMMENT id="C2828" spans="734018~734020" text="C:" type="Statement" line="3129" />
<COMMENT id="C2829" spans="734228~734230" text="C:" type="Statement" line="3130" />
<COMMENT id="C2830" spans="734362~734364" text="C:" type="Statement" line="3131" />
<COMMENT id="C2831" spans="734457~734459" text="C:" type="Statement" line="3132" />
<COMMENT id="C2832" spans="734698~734700" text="C:" type="Statement" line="3133" />
<COMMENT id="C2833" spans="734767~734769" text="C:" type="Statement" line="3134" />
<COMMENT id="C2834" spans="734962~734964" text="C:" type="Inquiry" line="3135" />
<COMMENT id="C2835" spans="735061~735063" text="C:" type="Statement" line="3136" />
<COMMENT id="C2836" spans="735137~735139" text="C:" type="Statement" line="3137" />
<COMMENT id="C2837" spans="735181~735183" text="C:" type="Solution" line="3138" />
<COMMENT id="C2838" spans="735553~735555" text="C:" type="Reference" line="3140" />
<COMMENT id="C2839" spans="735745~735747" text="C:" type="Statement" line="3141" />
<COMMENT id="C2840" spans="735787~735789" text="C:" type="Statement" line="3142" />
<COMMENT id="C2841" spans="735820~735822" text="C:" type="Statement" line="3143" />
<COMMENT id="C2842" spans="736022~736024" text="C:" type="Statement" line="3144" />
<COMMENT id="C2843" spans="736030~736032" text="C:" type="Statement" line="3145" />
<COMMENT id="C2844" spans="736090~736092" text="C:" type="Inquiry" line="3146" />
<COMMENT id="C2845" spans="736154~736156" text="C:" type="Statement" line="3147" />
<COMMENT id="C2846" spans="736263~736265" text="C:" type="Statement" line="3148" />
<COMMENT id="C2847" spans="736366~736368" text="C:" type="Reference" line="3149" />
<COMMENT id="C2848" spans="736551~736553" text="C:" type="Statement" line="3151" />
<COMMENT id="C2849" spans="736570~736572" text="C:" type="Statement" line="3152" />
<COMMENT id="C2850" spans="736586~736588" text="C:" type="Statement" line="3153" />
<COMMENT id="C2851" spans="736674~736676" text="C:" type="Solution" line="3154" />
<COMMENT id="C2852" spans="737156~737158" text="C:" type="Statement" line="3155" />
<COMMENT id="C2853" spans="737210~737212" text="C:" type="Statement" line="3156" />
<COMMENT id="C2854" spans="737276~737278" text="C:" type="Inquiry" line="3157" />
<COMMENT id="C2855" spans="737312~737314" text="C:" type="Reference" line="3158" />
<COMMENT id="C2856" spans="737518~737520" text="C:" type="Reference" line="3159" />
<COMMENT id="C2857" spans="737558~737560" text="C:" type="Statement" line="3160" />
<COMMENT id="C2858" spans="737602~737604" text="C:" type="Statement" line="3162" />
<COMMENT id="C2859" spans="737612~737614" text="C:" type="Inquiry" line="3163" />
<COMMENT id="C2860" spans="737720~737722" text="C:" type="Statement" line="3164" />
<COMMENT id="C2861" spans="737763~737765" text="C:" type="Statement" line="3165" />
<COMMENT id="C2862" spans="737815~737817" text="C:" type="Statement" line="3166" />
<COMMENT id="C2863" spans="737846~737848" text="C:" type="Statement" line="3167" />
<COMMENT id="C2864" spans="737879~737881" text="C:" type="Statement" line="3168" />
<COMMENT id="C2865" spans="737908~737910" text="C:" type="Inquiry" line="3169" />
<COMMENT id="C2866" spans="737966~737968" text="C:" type="Statement" line="3170" />
<COMMENT id="C2867" spans="738028~738030" text="C:" type="Statement" line="3171" />
<COMMENT id="C2868" spans="738166~738168" text="C:" type="Reference" line="3173" />
<COMMENT id="C2869" spans="738236~738238" text="C:" type="Statement" line="3174" />
<COMMENT id="C2870" spans="738312~738314" text="C:" type="Statement" line="3175" />
<COMMENT id="C2871" spans="738423~738425" text="C:" type="Statement" line="3176" />
<COMMENT id="C2872" spans="738442~738444" text="C:" type="Statement" line="3177" />
<COMMENT id="C2873" spans="738481~738483" text="C:" type="Removed" line="3178" />
<COMMENT id="C2874" spans="738494~738496" text="C:" type="Statement" line="3179" />
<COMMENT id="C2875" spans="738771~738773" text="C:" type="Solution" line="3180" />
<COMMENT id="C2876" spans="739604~739606" text="C:" type="Statement" line="3181" />
<COMMENT id="C2877" spans="739753~739755" text="C:" type="Statement" line="3182" />
<COMMENT id="C2878" spans="740410~740412" text="C:" type="Statement" line="3184" />
<COMMENT id="C2879" spans="740537~740539" text="C:" type="Statement" line="3185" />
<COMMENT id="C2880" spans="740628~740630" text="C:" type="Inquiry" line="3186" />
<COMMENT id="C2881" spans="740700~740702" text="C:" type="Statement" line="3187" />
<COMMENT id="C2882" spans="740746~740748" text="C:" type="Statement" line="3188" />
<COMMENT id="C2883" spans="740858~740860" text="C:" type="Statement" line="3189" />
<COMMENT id="C2884" spans="740903~740905" text="C:" type="Statement" line="3190" />
<COMMENT id="C2885" spans="740974~740976" text="C:" type="Statement" line="3191" />
<COMMENT id="C2886" spans="741062~741064" text="C:" type="Statement" line="3192" />
<COMMENT id="C2887" spans="741110~741112" text="C:" type="Inquiry" line="3193" />
<COMMENT id="C2888" spans="741173~741175" text="C:" type="Solution" line="3195" />
<COMMENT id="C2889" spans="741678~741680" text="C:" type="Solution" line="3196" />
<COMMENT id="C2890" spans="741904~741906" text="C:" type="Solution" line="3197" />
<COMMENT id="C2891" spans="742597~742599" text="C:" type="Statement" line="3198" />
<COMMENT id="C2892" spans="743057~743059" text="C:" type="Solution" line="3199" />
<COMMENT id="C2893" spans="743679~743681" text="C:" type="Statement" line="3200" />
<COMMENT id="C2894" spans="743804~743806" text="C:" type="Solution" line="3201" />
<COMMENT id="C2895" spans="745139~745141" text="C:" type="Solution" line="3202" />
<COMMENT id="C2896" spans="745262~745264" text="C:" type="Inquiry" line="3203" />
<COMMENT id="C2897" spans="745672~745674" text="C:" type="Solution" line="3204" />
<COMMENT id="C2898" spans="747443~747445" text="C:" type="Solution" line="3206" />
<COMMENT id="C2899" spans="747688~747690" text="C:" type="Solution" line="3207" />
<COMMENT id="C2900" spans="747927~747929" text="C:" type="Solution" line="3208" />
<COMMENT id="C2901" spans="748109~748111" text="C:" type="Inquiry" line="3209" />
<COMMENT id="C2902" spans="748127~748129" text="C:" type="Solution" line="3210" />
<COMMENT id="C2903" spans="748364~748366" text="C:" type="Statement" line="3211" />
<COMMENT id="C2904" spans="748476~748478" text="C:" type="Statement" line="3212" />
<COMMENT id="C2905" spans="748543~748545" text="C:" type="Statement" line="3213" />
<COMMENT id="C2906" spans="748598~748600" text="C:" type="Statement" line="3214" />
<COMMENT id="C2907" spans="748640~748642" text="C:" type="Statement" line="3216" />
<COMMENT id="C2908" spans="748668~748670" text="C:" type="Statement" line="3217" />
<COMMENT id="C2909" spans="748729~748731" text="C:" type="Statement" line="3218" />
<COMMENT id="C2910" spans="750614~750616" text="C:" type="Statement" line="3219" />
<COMMENT id="C2911" spans="750884~750886" text="C:" type="Statement" line="3220" />
<COMMENT id="C2912" spans="750921~750923" text="C:" type="Reference" line="3221" />
<COMMENT id="C2913" spans="751166~751168" text="C:" type="Statement" line="3222" />
<COMMENT id="C2914" spans="751302~751304" text="C:" type="Statement" line="3223" />
<COMMENT id="C2915" spans="751344~751346" text="C:" type="Statement" line="3224" />
<COMMENT id="C2916" spans="751496~751498" text="C:" type="Reference" line="3225" />
<COMMENT id="C2917" spans="751596~751598" text="C:" type="Statement" line="3227" />
<COMMENT id="C2918" spans="751667~751669" text="C:" type="Statement" line="3228" />
<COMMENT id="C2919" spans="751728~751730" text="C:" type="Statement" line="3229" />
<COMMENT id="C2920" spans="751847~751849" text="C:" type="Statement" line="3230" />
<COMMENT id="C2921" spans="752012~752014" text="C:" type="Removed" line="3231" />
<COMMENT id="C2922" spans="752025~752027" text="C:" type="Statement" line="3232" />
<COMMENT id="C2923" spans="752045~752047" text="C:" type="Statement" line="3233" />
<COMMENT id="C2924" spans="752109~752111" text="C:" type="Statement" line="3234" />
<COMMENT id="C2925" spans="752174~752176" text="C:" type="Statement" line="3235" />
<COMMENT id="C2926" spans="752332~752334" text="C:" type="Statement" line="3236" />
<COMMENT id="C2927" spans="752468~752470" text="C:" type="Statement" line="3238" />
<COMMENT id="C2928" spans="752520~752522" text="C:" type="Statement" line="3239" />
<COMMENT id="C2929" spans="752576~752578" text="C:" type="Inquiry" line="3240" />
<COMMENT id="C2930" spans="752726~752728" text="C:" type="Statement" line="3241" />
<COMMENT id="C2931" spans="753642~753644" text="C:" type="Solution" line="3242" />
<COMMENT id="C2932" spans="754164~754166" text="C:" type="Statement" line="3243" />
<COMMENT id="C2933" spans="754187~754189" text="C:" type="Inquiry" line="3244" />
<COMMENT id="C2934" spans="754262~754264" text="C:" type="Statement" line="3245" />
<COMMENT id="C2935" spans="754385~754387" text="C:" type="Statement" line="3246" />
<COMMENT id="C2936" spans="754841~754843" text="C:" type="Statement" line="3247" />
<COMMENT id="C2728" spans="755122~755124" text="C:" type="Statement" line="3249" />
<COMMENT id="C2827" spans="755143~755145" text="C:" type="Statement" line="3250" />
<COMMENT id="C2937" spans="755341~755343" text="C:" type="Statement" line="3251" />
<COMMENT id="C2938" spans="755392~755394" text="C:" type="Statement" line="3252" />
<COMMENT id="C2939" spans="755417~755419" text="C:" type="Statement" line="3253" />
<COMMENT id="C2940" spans="755506~755508" text="C:" type="Statement" line="3254" />
<COMMENT id="C2941" spans="755734~755736" text="C:" type="Inquiry" line="3255" />
<COMMENT id="C2942" spans="755844~755846" text="C:" type="Inquiry" line="3256" />
<COMMENT id="C2943" spans="755905~755907" text="C:" type="Statement" line="3257" />
<COMMENT id="C2944" spans="755942~755944" text="C:" type="Statement" line="3258" />
<COMMENT id="C2945" spans="756077~756079" text="C:" type="Statement" line="3260" />
<COMMENT id="C2946" spans="756121~756123" text="C:" type="Statement" line="3261" />
<COMMENT id="C2947" spans="756131~756133" text="C:" type="Statement" line="3262" />
<COMMENT id="C2948" spans="756140~756142" text="C:" type="Statement" line="3263" />
<COMMENT id="C2949" spans="756191~756193" text="C:" type="Statement" line="3264" />
<COMMENT id="C2950" spans="756468~756470" text="C:" type="Statement" line="3265" />
<COMMENT id="C2951" spans="756955~756957" text="C:" type="Inquiry" line="3266" />
<COMMENT id="C2952" spans="757022~757024" text="C:" type="Statement" line="3267" />
<COMMENT id="C2953" spans="757084~757086" text="C:" type="Statement" line="3268" />
<COMMENT id="C2954" spans="757182~757184" text="C:" type="Statement" line="3269" />
<COMMENT id="C2955" spans="757314~757316" text="C:" type="Statement" line="3271" />
<COMMENT id="C2956" spans="757463~757465" text="C:" type="Reference" line="3272" />
<COMMENT id="C2957" spans="757872~757874" text="C:" type="Statement" line="3273" />
<COMMENT id="C2958" spans="757987~757989" text="C:" type="Statement" line="3274" />
<COMMENT id="C2959" spans="758045~758047" text="C:" type="Inquiry" line="3275" />
<COMMENT id="C2960" spans="758136~758138" text="C:" type="Removed" line="3276" />
<COMMENT id="C2961" spans="758149~758151" text="C:" type="Statement" line="3277" />
<COMMENT id="C2962" spans="758247~758249" text="C:" type="Statement" line="3278" />
<COMMENT id="C2963" spans="758425~758427" text="C:" type="Statement" line="3279" />
<COMMENT id="C2964" spans="758498~758500" text="C:" type="Inquiry" line="3280" />
<COMMENT id="C2965" spans="758921~758923" text="C:" type="Statement" line="3282" />
<COMMENT id="C2966" spans="758999~759001" text="C:" type="Inquiry" line="3283" />
<COMMENT id="C2967" spans="759042~759044" text="C:" type="Statement" line="3284" />
<COMMENT id="C2968" spans="759109~759111" text="C:" type="Statement" line="3285" />
<COMMENT id="C2969" spans="759142~759144" text="C:" type="Inquiry" line="3286" />
<COMMENT id="C2970" spans="759214~759216" text="C:" type="Statement" line="3287" />
<COMMENT id="C2971" spans="759295~759297" text="C:" type="Inquiry" line="3288" />
<COMMENT id="C2972" spans="759324~759326" text="C:" type="Statement" line="3289" />
<COMMENT id="C2973" spans="759403~759405" text="C:" type="Statement" line="3290" />
<COMMENT id="C2974" spans="759418~759420" text="C:" type="Statement" line="3291" />
<COMMENT id="C2975" spans="759499~759501" text="C:" type="Removed" line="3293" />
<COMMENT id="C2976" spans="759512~759514" text="C:" type="Inquiry" line="3294" />
<COMMENT id="C2977" spans="759578~759580" text="C:" type="Statement" line="3295" />
<COMMENT id="C2978" spans="759622~759624" text="C:" type="Statement" line="3296" />
<COMMENT id="C2979" spans="759686~759688" text="C:" type="Inquiry" line="3297" />
<COMMENT id="C2980" spans="759730~759732" text="C:" type="Statement" line="3298" />
<COMMENT id="C2981" spans="759738~759740" text="C:" type="Statement" line="3299" />
<COMMENT id="C2982" spans="759773~759775" text="C:" type="Statement" line="3300" />
<COMMENT id="C2983" spans="759929~759931" text="C:" type="Statement" line="3301" />
<COMMENT id="C2984" spans="760150~760152" text="C:" type="Statement" line="3303" />
<COMMENT id="C2985" spans="760238~760240" text="C:" type="Statement" line="3304" />
<COMMENT id="C2986" spans="760312~760314" text="C:" type="Inquiry" line="3305" />
<COMMENT id="C2987" spans="760356~760358" text="C:" type="Statement" line="3306" />
<COMMENT id="C2988" spans="760493~760495" text="C:" type="Statement" line="3307" />
<COMMENT id="C2989" spans="760597~760599" text="C:" type="Statement" line="3308" />
<COMMENT id="C2990" spans="760620~760622" text="C:" type="Solution" line="3309" />
<COMMENT id="C2991" spans="760863~760865" text="C:" type="Statement" line="3310" />
<COMMENT id="C2992" spans="760908~760910" text="C:" type="Statement" line="3311" />
<COMMENT id="C2993" spans="760943~760945" text="C:" type="Statement" line="3312" />
<COMMENT id="C2994" spans="761052~761054" text="C:" type="Solution" line="3314" />
<COMMENT id="C2995" spans="761277~761279" text="C:" type="Statement" line="3315" />
<COMMENT id="C2996" spans="761711~761713" text="C:" type="Inquiry" line="3316" />
<COMMENT id="C2997" spans="761951~761953" text="C:" type="Statement" line="3317" />
<COMMENT id="C2998" spans="762298~762300" text="C:" type="Statement" line="3318" />
<COMMENT id="C2999" spans="762488~762490" text="C:" type="Inquiry" line="3319" />
<COMMENT id="C3000" spans="762585~762587" text="C:" type="Statement" line="3320" />
<COMMENT id="C3001" spans="762617~762619" text="C:" type="Statement" line="3321" />
<COMMENT id="C3002" spans="762793~762795" text="C:" type="Statement" line="3322" />
<COMMENT id="C3003" spans="762921~762923" text="C:" type="Statement" line="3324" />
<COMMENT id="C3004" spans="762947~762949" text="C:" type="Inquiry" line="3325" />
<COMMENT id="C3005" spans="762982~762984" text="C:" type="Statement" line="3326" />
<COMMENT id="C3006" spans="763013~763015" text="C:" type="Statement" line="3327" />
<COMMENT id="C3007" spans="763034~763036" text="C:" type="Statement" line="3328" />
<COMMENT id="C3008" spans="763143~763145" text="C:" type="Statement" line="3329" />
<COMMENT id="C3009" spans="763220~763222" text="C:" type="Inquiry" line="3330" />
<COMMENT id="C3010" spans="763301~763303" text="C:" type="Statement" line="3331" />
<COMMENT id="C3011" spans="763320~763322" text="C:" type="Solution" line="3332" />
<COMMENT id="C3012" spans="763594~763596" text="C:" type="Reference" line="3333" />
<COMMENT id="C3013" spans="764015~764017" text="C:" type="Reference" line="3335" />
<COMMENT id="C3014" spans="764087~764089" text="C:" type="Inquiry" line="3336" />
<COMMENT id="C3015" spans="764171~764173" text="C:" type="Statement" line="3337" />
<COMMENT id="C3016" spans="764241~764243" text="C:" type="Statement" line="3338" />
<COMMENT id="C3017" spans="764655~764657" text="C:" type="Statement" line="3339" />
<COMMENT id="C3018" spans="764709~764711" text="C:" type="Statement" line="3340" />
<COMMENT id="C3019" spans="764755~764757" text="C:" type="Statement" line="3341" />
<COMMENT id="C3020" spans="765076~765078" text="C:" type="Statement" line="3342" />
<COMMENT id="C3021" spans="765203~765205" text="C:" type="Statement" line="3343" />
<COMMENT id="C3022" spans="765427~765429" text="C:" type="Inquiry" line="3344" />
<COMMENT id="C3023" spans="765511~765513" text="C:" type="Statement" line="3346" />
<COMMENT id="C3024" spans="765543~765545" text="C:" type="Statement" line="3347" />
<COMMENT id="C3025" spans="765625~765627" text="C:" type="Statement" line="3348" />
<COMMENT id="C3026" spans="765727~765729" text="C:" type="Statement" line="3349" />
<COMMENT id="C3027" spans="765817~765819" text="C:" type="Statement" line="3350" />
<COMMENT id="C3028" spans="765844~765846" text="C:" type="Statement" line="3351" />
<COMMENT id="C3029" spans="765883~765885" text="C:" type="Statement" line="3352" />
<COMMENT id="C3030" spans="765923~765925" text="C:" type="Statement" line="3353" />
<COMMENT id="C3031" spans="765945~765947" text="C:" type="Statement" line="3354" />
<COMMENT id="C3032" spans="766085~766087" text="C:" type="Statement" line="3355" />
<COMMENT id="C3033" spans="766221~766223" text="C:" type="Solution" line="3357" />
<COMMENT id="C3034" spans="766410~766412" text="C:" type="Statement" line="3358" />
<COMMENT id="C3035" spans="766444~766446" text="C:" type="Inquiry" line="3359" />
<COMMENT id="C3036" spans="766496~766498" text="C:" type="Solution" line="3360" />
<COMMENT id="C3037" spans="766550~766552" text="C:" type="Inquiry" line="3361" />
<COMMENT id="C3038" spans="766591~766593" text="C:" type="Solution" line="3362" />
<COMMENT id="C3039" spans="766661~766663" text="C:" type="Statement" line="3363" />
<COMMENT id="C3040" spans="766680~766682" text="C:" type="Statement" line="3364" />
<COMMENT id="C3041" spans="766711~766713" text="C:" type="Inquiry" line="3365" />
<COMMENT id="C3042" spans="766791~766793" text="C:" type="Statement" line="3366" />
<COMMENT id="C3043" spans="766839~766841" text="C:" type="Solution" line="3368" />
<COMMENT id="C3044" spans="766986~766988" text="C:" type="Solution" line="3369" />
<COMMENT id="C3045" spans="767093~767095" text="C:" type="Statement" line="3370" />
<COMMENT id="C3046" spans="767171~767173" text="C:" type="Statement" line="3371" />
<COMMENT id="C3047" spans="767396~767398" text="C:" type="Statement" line="3372" />
<COMMENT id="C3048" spans="767421~767423" text="C:" type="Statement" line="3373" />
<COMMENT id="C3049" spans="767638~767640" text="C:" type="Statement" line="3374" />
<COMMENT id="C3050" spans="767774~767776" text="C:" type="Reference" line="3375" />
<COMMENT id="C3051" spans="767866~767868" text="C:" type="Statement" line="3376" />
<COMMENT id="C3052" spans="768189~768191" text="C:" type="Statement" line="3377" />
<COMMENT id="C3053" spans="768354~768356" text="C:" type="Inquiry" line="3379" />
<COMMENT id="C3054" spans="768365~768367" text="C:" type="Statement" line="3380" />
<COMMENT id="C3055" spans="768464~768466" text="C:" type="Statement" line="3381" />
<COMMENT id="C3056" spans="768579~768581" text="C:" type="Statement" line="3382" />
<COMMENT id="C3057" spans="768674~768676" text="C:" type="Statement" line="3383" />
<COMMENT id="C3058" spans="768803~768805" text="C:" type="Statement" line="3384" />
<COMMENT id="C3059" spans="768854~768856" text="C:" type="Inquiry" line="3385" />
<COMMENT id="C3060" spans="768886~768888" text="C:" type="Statement" line="3386" />
<COMMENT id="C3061" spans="768920~768922" text="C:" type="Statement" line="3387" />
<COMMENT id="C3062" spans="768991~768993" text="C:" type="Solution" line="3388" />
<COMMENT id="C3063" spans="769351~769353" text="C:" type="Statement" line="3390" />
<COMMENT id="C3064" spans="769394~769396" text="C:" type="Inquiry" line="3391" />
<COMMENT id="C3065" spans="769445~769447" text="C:" type="Statement" line="3392" />
<COMMENT id="C3066" spans="769499~769501" text="C:" type="Inquiry" line="3393" />
<COMMENT id="C3067" spans="769524~769526" text="C:" type="Statement" line="3394" />
<COMMENT id="C3068" spans="769941~769943" text="C:" type="Statement" line="3395" />
<COMMENT id="C3069" spans="769974~769976" text="C:" type="Statement" line="3396" />
<COMMENT id="C3070" spans="770010~770012" text="C:" type="Inquiry" line="3397" />
<COMMENT id="C3071" spans="770032~770034" text="C:" type="Removed" line="3398" />
<COMMENT id="C3072" spans="770045~770047" text="C:" type="Solution" line="3399" />
<COMMENT id="C3073" spans="770532~770534" text="C:" type="Inquiry" line="3401" />
<COMMENT id="C3074" spans="770653~770655" text="C:" type="Solution" line="3402" />
<COMMENT id="C3075" spans="770962~770964" text="C:" type="Statement" line="3403" />
<COMMENT id="C3076" spans="771027~771029" text="C:" type="Statement" line="3404" />
<COMMENT id="C3077" spans="771252~771254" text="C:" type="Inquiry" line="3405" />
<COMMENT id="C3078" spans="771370~771372" text="C:" type="Statement" line="3406" />
<COMMENT id="C3079" spans="771533~771535" text="C:" type="Solution" line="3407" />
<COMMENT id="C3080" spans="771665~771667" text="C:" type="Solution" line="3408" />
<COMMENT id="C3081" spans="771995~771997" text="C:" type="Solution" line="3409" />
<COMMENT id="C3082" spans="772196~772198" text="C:" type="Solution" line="3410" />
<COMMENT id="C3083" spans="772360~772362" text="C:" type="Removed" line="3412" />
<COMMENT id="C3084" spans="772373~772375" text="C:" type="Reference" line="3413" />
<COMMENT id="C3085" spans="772474~772476" text="C:" type="Statement" line="3414" />
<COMMENT id="C3086" spans="772619~772621" text="C:" type="Statement" line="3415" />
<COMMENT id="C3087" spans="772639~772641" text="C:" type="Statement" line="3416" />
<COMMENT id="C3088" spans="772779~772781" text="C:" type="Statement" line="3417" />
<COMMENT id="C3089" spans="772860~772862" text="C:" type="Statement" line="3418" />
<COMMENT id="C3090" spans="773041~773043" text="C:" type="Statement" line="3419" />
<COMMENT id="C3091" spans="773205~773207" text="C:" type="Inquiry" line="3420" />
<COMMENT id="C3092" spans="773573~773575" text="C:" type="Solution" line="3421" />
<COMMENT id="C3093" spans="774476~774478" text="C:" type="Inquiry" line="3423" />
<COMMENT id="C3094" spans="774511~774513" text="C:" type="Solution" line="3424" />
<COMMENT id="C3095" spans="775231~775233" text="C:" type="Statement" line="3425" />
<COMMENT id="C3096" spans="775271~775273" text="C:" type="Statement" line="3426" />
<COMMENT id="C3097" spans="775303~775305" text="C:" type="Solution" line="3427" />
<COMMENT id="C3098" spans="775664~775666" text="C:" type="Solution" line="3428" />
<COMMENT id="C3099" spans="775916~775918" text="C:" type="Statement" line="3429" />
<COMMENT id="C3100" spans="776561~776563" text="C:" type="Inquiry" line="3430" />
<COMMENT id="C3101" spans="776597~776599" text="C:" type="Statement" line="3431" />
<COMMENT id="C3102" spans="776659~776661" text="C:" type="Removed" line="3433" />
<COMMENT id="C3103" spans="776672~776674" text="C:" type="Statement" line="3434" />
<COMMENT id="C3104" spans="776697~776699" text="C:" type="Inquiry" line="3435" />
<COMMENT id="C3105" spans="776709~776711" text="C:" type="Reference" line="3436" />
<COMMENT id="C3106" spans="776843~776845" text="C:" type="Inquiry" line="3437" />
<COMMENT id="C3107" spans="776952~776954" text="C:" type="Solution" line="3438" />
<COMMENT id="C3108" spans="777056~777058" text="C:" type="Solution" line="3439" />
<COMMENT id="C3109" spans="777222~777224" text="C:" type="Solution" line="3440" />
<COMMENT id="C3110" spans="777412~777414" text="C:" type="Statement" line="3441" />
<COMMENT id="C3111" spans="777438~777440" text="C:" type="Inquiry" line="3442" />
<COMMENT id="C3112" spans="777724~777726" text="C:" type="Inquiry" line="3444" />
<COMMENT id="C3113" spans="777780~777782" text="C:" type="Inquiry" line="3445" />
<COMMENT id="C3114" spans="778001~778003" text="C:" type="Statement" line="3446" />
<COMMENT id="C3115" spans="778021~778023" text="C:" type="Statement" line="3447" />
<COMMENT id="C3116" spans="778061~778063" text="C:" type="Statement" line="3448" />
<COMMENT id="C3117" spans="778547~778549" text="C:" type="Inquiry" line="3449" />
<COMMENT id="C3118" spans="778585~778587" text="C:" type="Solution" line="3450" />
<COMMENT id="C3119" spans="778692~778694" text="C:" type="Solution" line="3451" />
<COMMENT id="C3120" spans="779059~779061" text="C:" type="Reference" line="3452" />
<COMMENT id="C3121" spans="779159~779161" text="C:" type="Reference" line="3453" />
<COMMENT id="C3122" spans="779472~779474" text="C:" type="Solution" line="3455" />
<COMMENT id="C3123" spans="779833~779835" text="C:" type="Inquiry" line="3456" />
<COMMENT id="C3124" spans="780000~780002" text="C:" type="Inquiry" line="3457" />
<COMMENT id="C3125" spans="780091~780093" text="C:" type="Statement" line="3458" />
<COMMENT id="C3126" spans="780206~780208" text="C:" type="Statement" line="3459" />
<COMMENT id="C3127" spans="780266~780268" text="C:" type="Solution" line="3460" />
<COMMENT id="C3128" spans="780355~780357" text="C:" type="Reference" line="3461" />
<COMMENT id="C3129" spans="780494~780496" text="C:" type="Statement" line="3462" />
<COMMENT id="C3130" spans="780602~780604" text="C:" type="Solution" line="3463" />
<COMMENT id="C3131" spans="781064~781066" text="C:" type="Solution" line="3464" />
<COMMENT id="C3132" spans="781307~781309" text="C:" type="Reference" line="3466" />
<COMMENT id="C3133" spans="781477~781479" text="C:" type="Solution" line="3467" />
<COMMENT id="C3134" spans="781523~781525" text="C:" type="Inquiry" line="3468" />
<COMMENT id="C3135" spans="781662~781664" text="C:" type="Inquiry" line="3469" />
<COMMENT id="C3136" spans="781755~781757" text="C:" type="Solution" line="3470" />
<COMMENT id="C3137" spans="781787~781789" text="C:" type="Inquiry" line="3471" />
<COMMENT id="C3138" spans="782026~782028" text="C:" type="Statement" line="3472" />
<COMMENT id="C3139" spans="782296~782298" text="C:" type="Removed" line="3473" />
<COMMENT id="C3140" spans="782309~782311" text="C:" type="Solution" line="3474" />
<COMMENT id="C3141" spans="782848~782850" text="C:" type="Solution" line="3475" />
<COMMENT id="C3142" spans="783625~783627" text="C:" type="Reference" line="3477" />
<COMMENT id="C3143" spans="784366~784368" text="C:" type="Inquiry" line="3478" />
<COMMENT id="C3144" spans="784504~784506" text="C:" type="Statement" line="3479" />
<COMMENT id="C3145" spans="784523~784525" text="C:" type="Reference" line="3480" />
<COMMENT id="C3146" spans="784718~784720" text="C:" type="Statement" line="3481" />
<COMMENT id="C3147" spans="784819~784821" text="C:" type="Solution" line="3482" />
<COMMENT id="C3148" spans="785638~785640" text="C:" type="Statement" line="3483" />
<COMMENT id="C3149" spans="785662~785664" text="C:" type="Inquiry" line="3484" />
<COMMENT id="C3150" spans="785878~785880" text="C:" type="Solution" line="3485" />
<COMMENT id="C3151" spans="786291~786293" text="C:" type="Statement" line="3486" />
<COMMENT id="C3152" spans="786698~786700" text="C:" type="Reference" line="3488" />
<COMMENT id="C3153" spans="786805~786807" text="C:" type="Statement" line="3489" />
<COMMENT id="C3154" spans="786836~786838" text="C:" type="Removed" line="3490" />
<COMMENT id="C3155" spans="786849~786851" text="C:" type="Inquiry" line="3491" />
<COMMENT id="C3156" spans="787367~787369" text="C:" type="Statement" line="3492" />
<COMMENT id="C3157" spans="787747~787749" text="C:" type="Statement" line="3493" />
<COMMENT id="C3158" spans="787890~787892" text="C:" type="Statement" line="3494" />
<COMMENT id="C3159" spans="788659~788661" text="C:" type="Statement" line="3495" />
<COMMENT id="C3160" spans="788710~788712" text="C:" type="Statement" line="3496" />
<COMMENT id="C3161" spans="788798~788800" text="C:" type="Solution" line="3498" />
<COMMENT id="C3162" spans="788906~788908" text="C:" type="Solution" line="3499" />
<COMMENT id="C3163" spans="789020~789022" text="C:" type="Statement" line="3500" />
<COMMENT id="C3164" spans="789133~789135" text="C:" type="Inquiry" line="3501" />
<COMMENT id="C3165" spans="789194~789196" text="C:" type="Statement" line="3502" />
<COMMENT id="C3166" spans="789232~789234" text="C:" type="Statement" line="3503" />
<COMMENT id="C3167" spans="789319~789321" text="C:" type="Reference" line="3504" />
<COMMENT id="C3168" spans="789533~789535" text="C:" type="Solution" line="3505" />
<COMMENT id="C3169" spans="789721~789723" text="C:" type="Statement" line="3506" />
<COMMENT id="C3170" spans="789784~789786" text="C:" type="Statement" line="3507" />
<COMMENT id="C3171" spans="789895~789897" text="C:" type="Statement" line="3509" />
<COMMENT id="C3172" spans="789993~789995" text="C:" type="Inquiry" line="3510" />
<COMMENT id="C3173" spans="790070~790072" text="C:" type="Statement" line="3511" />
<COMMENT id="C3174" spans="790115~790117" text="C:" type="Statement" line="3512" />
<COMMENT id="C3175" spans="790141~790143" text="C:" type="Statement" line="3513" />
<COMMENT id="C3176" spans="790169~790171" text="C:" type="Statement" line="3514" />
<COMMENT id="C3177" spans="790196~790198" text="C:" type="Statement" line="3515" />
<COMMENT id="C3178" spans="790363~790365" text="C:" type="Statement" line="3516" />
<COMMENT id="C3179" spans="790381~790383" text="C:" type="Statement" line="3517" />
<COMMENT id="C3180" spans="790424~790426" text="C:" type="Statement" line="3518" />
<COMMENT id="C3181" spans="790505~790507" text="C:" type="Statement" line="3520" />
<COMMENT id="C3182" spans="790732~790734" text="C:" type="Statement" line="3521" />
<COMMENT id="C3183" spans="790782~790784" text="C:" type="Statement" line="3522" />
<COMMENT id="C3184" spans="790857~790859" text="C:" type="Statement" line="3523" />
<COMMENT id="C3185" spans="790906~790908" text="C:" line="3524" type="Statement" />
<COMMENT id="C3186" spans="791052~791054" text="C:" type="Statement" line="3525" />
<COMMENT id="C3187" spans="791125~791127" text="C:" type="Inquiry" line="3526" />
<COMMENT id="C3188" spans="791160~791162" text="C:" type="Statement" line="3527" />
<COMMENT id="C3189" spans="791249~791251" text="C:" type="Inquiry" line="3528" />
<COMMENT id="C3190" spans="791295~791297" text="C:" type="Statement" line="3529" />
<COMMENT id="C3191" spans="791446~791448" text="C:" type="Statement" line="3531" />
<COMMENT id="C3192" spans="791468~791470" text="C:" line="3532" type="Statement" />
<COMMENT id="C3193" spans="791486~791488" text="C:" type="Reference" line="3533" />
<COMMENT id="C3194" spans="791572~791574" text="C:" type="Reference" line="3534" />
<COMMENT id="C3195" spans="791663~791665" text="C:" type="Inquiry" line="3535" />
<COMMENT id="C3196" spans="791766~791768" text="C:" type="Statement" line="3536" />
<COMMENT id="C3197" spans="791794~791796" text="C:" type="Statement" line="3537" />
<COMMENT id="C3198" spans="791818~791820" text="C:" type="Solution" line="3538" />
<COMMENT id="C3199" spans="792098~792100" text="C:" type="Solution" line="3539" />
<COMMENT id="C3200" spans="792209~792211" text="C:" type="Solution" line="3541" />
<COMMENT id="C3201" spans="792341~792343" text="C:" type="Solution" line="3542" />
<COMMENT id="C3202" spans="792458~792460" text="C:" type="Inquiry" line="3543" />
<COMMENT id="C3203" spans="792585~792587" text="C:" type="Statement" line="3544" />
<COMMENT id="C3204" spans="792893~792895" text="C:" type="Statement" line="3545" />
<COMMENT id="C3205" spans="792991~792993" text="C:" type="Solution" line="3546" />
<COMMENT id="C3206" spans="793087~793089" text="C:" type="Statement" line="3547" />
<COMMENT id="C3207" spans="793184~793186" text="C:" type="Inquiry" line="3548" />
<COMMENT id="C3208" spans="793215~793217" text="C:" type="Statement" line="3549" />
<COMMENT id="C3209" spans="793312~793314" text="C:" type="Statement" line="3550" />
<COMMENT id="C3210" spans="793370~793372" text="C:" type="Solution" line="3552" />
<COMMENT id="C3211" spans="793589~793591" text="C:" line="3553" type="Reference" />
<COMMENT id="C3212" spans="793718~793720" text="C:" type="Statement" line="3554" />
<COMMENT id="C3213" spans="793800~793802" text="C:" type="Statement" line="3555" />
<COMMENT id="C3214" spans="793823~793825" text="C:" type="Statement" line="3556" />
<COMMENT id="C3215" spans="793854~793856" text="C:" type="Inquiry" line="3557" />
<COMMENT id="C3216" spans="793914~793916" text="C:" type="Statement" line="3558" />
<COMMENT id="C3217" spans="794001~794003" text="C:" type="Solution" line="3559" />
<COMMENT id="C3218" spans="794370~794372" text="C:" type="Reference" line="3560" />
<COMMENT id="C3219" spans="794630~794632" text="C:" type="Statement" line="3561" />
<COMMENT id="C3220" spans="794793~794795" text="C:" type="Solution" line="3563" />
<COMMENT id="C3221" spans="794884~794886" text="C:" type="Statement" line="3564" />
<COMMENT id="C3222" spans="795333~795335" text="C:" type="Inquiry" line="3565" />
<COMMENT id="C3223" spans="795500~795502" text="C:" type="Inquiry" line="3566" />
<COMMENT id="C3224" spans="795573~795575" text="C:" type="Statement" line="3567" />
<COMMENT id="C3225" spans="795864~795866" text="C:" type="Solution" line="3568" />
<COMMENT id="C3226" spans="795922~795924" text="C:" type="Statement" line="3569" />
<COMMENT id="C3227" spans="796352~796354" text="C:" type="Statement" line="3570" />
<COMMENT id="C3228" spans="796372~796374" text="C:" type="Statement" line="3571" />
<COMMENT id="C3229" spans="796531~796533" text="C:" type="Statement" line="3572" />
<COMMENT id="C3230" spans="796681~796683" text="C:" type="Solution" line="3574" />
<COMMENT id="C3231" spans="797116~797118" text="C:" type="Solution" line="3575" />
<COMMENT id="C3232" spans="797691~797693" text="C:" type="Statement" line="3576" />
<COMMENT id="C3233" spans="797802~797804" text="C:" type="Inquiry" line="3577" />
<COMMENT id="C3234" spans="797919~797921" text="C:" type="Solution" line="3578" />
<COMMENT id="C3235" spans="798190~798192" text="C:" type="Solution" line="3579" />
<COMMENT id="C3236" spans="799108~799110" text="C:" type="Statement" line="3580" />
<COMMENT id="C3237" spans="799356~799358" text="C:" type="Solution" line="3581" />
<COMMENT id="C3238" spans="799583~799585" text="C:" type="Statement" line="3582" />
<COMMENT id="C3239" spans="799719~799721" text="C:" type="Statement" line="3583" />
<COMMENT id="C3240" spans="799881~799883" text="C:" type="Reference" line="3585" />
<COMMENT id="C3241" spans="799956~799958" text="C:" type="Statement" line="3586" />
<COMMENT id="C3242" spans="800015~800017" text="C:" type="Statement" line="3587" />
<COMMENT id="C3243" spans="800052~800054" text="C:" type="Statement" line="3588" />
<COMMENT id="C3244" spans="800077~800079" text="C:" type="Statement" line="3589" />
<COMMENT id="C3245" spans="800118~800120" text="C:" type="Statement" line="3590" />
<COMMENT id="C3246" spans="800163~800165" text="C:" type="Statement" line="3591" />
<COMMENT id="C3247" spans="800186~800188" text="C:" line="3592" type="Statement" />
<COMMENT id="C3248" spans="800197~800199" text="C:" type="Statement" line="3593" />
<COMMENT id="C3249" spans="800219~800221" text="C:" type="Statement" line="3594" />
<COMMENT id="C3250" spans="800335~800337" text="C:" type="Statement" line="3596" />
<COMMENT id="C3251" spans="800478~800480" text="C:" type="Statement" line="3597" />
<COMMENT id="C3252" spans="800536~800538" text="C:" type="Reference" line="3598" />
<COMMENT id="C3253" spans="800656~800658" text="C:" type="Statement" line="3599" />
<COMMENT id="C3254" spans="800705~800707" text="C:" type="Inquiry" line="3600" />
<COMMENT id="C3255" spans="800744~800746" text="C:" type="Inquiry" line="3601" />
<COMMENT id="C3256" spans="800777~800779" text="C:" type="Statement" line="3602" />
<COMMENT id="C3257" spans="800847~800849" text="C:" type="Inquiry" line="3603" />
<COMMENT id="C3258" spans="801000~801002" text="C:" type="Statement" line="3604" />
<COMMENT id="C3259" spans="801058~801060" text="C:" type="Statement" line="3605" />
<COMMENT id="C3260" spans="801130~801132" text="C:" type="Statement" line="3607" />
<COMMENT id="C3261" spans="801213~801215" text="C:" type="Statement" line="3608" />
<COMMENT id="C3262" spans="801292~801294" text="C:" type="Statement" line="3609" />
<COMMENT id="C3263" spans="801320~801322" text="C:" type="Solution" line="3610" />
<COMMENT id="C3264" spans="801402~801404" text="C:" type="Solution" line="3611" />
<COMMENT id="C3265" spans="801486~801488" text="C:" type="Statement" line="3613" />
<COMMENT id="C3266" spans="801511~801513" text="C:" type="Statement" line="3614" />
<COMMENT id="C3267" spans="801536~801538" text="C:" type="Inquiry" line="3615" />
<COMMENT id="C3268" spans="801705~801707" text="C:" type="Solution" line="3616" />
<COMMENT id="C3269" spans="801993~801995" text="C:" type="Statement" line="3617" />
<COMMENT id="C3270" spans="802209~802211" text="C:" type="Solution" line="3618" />
<COMMENT id="C3271" spans="802770~802772" text="C:" type="Statement" line="3619" />
<COMMENT id="C3272" spans="802778~802780" text="C:" type="Statement" line="3620" />
<COMMENT id="C3273" spans="802786~802788" text="C:" type="Inquiry" line="3621" />
<COMMENT id="C3274" spans="802906~802908" text="C:" type="Solution" line="3622" />
<COMMENT id="C3275" spans="803288~803290" text="C:" type="Statement" line="3624" />
<COMMENT id="C3276" spans="803344~803346" text="C:" type="Solution" line="3625" />
<COMMENT id="C3277" spans="803387~803389" text="C:" type="Solution" line="3626" />
<COMMENT id="C3278" spans="803709~803711" text="C:" type="Solution" line="3627" />
<COMMENT id="C3279" spans="803747~803749" text="C:" type="Solution" line="3628" />
<COMMENT id="C3280" spans="804097~804099" text="C:" type="Statement" line="3629" />
<COMMENT id="C3281" spans="804144~804146" text="C:" type="Statement" line="3630" />
<COMMENT id="C3282" spans="804179~804181" text="C:" type="Statement" line="3631" />
<COMMENT id="C3283" spans="804205~804207" text="C:" type="Solution" line="3632" />
<COMMENT id="C3284" spans="804528~804530" text="C:" type="Inquiry" line="3633" />
<COMMENT id="C3285" spans="805100~805102" text="C:" type="Solution" line="3635" />
<COMMENT id="C3286" spans="806682~806684" text="C:" type="Solution" line="3636" />
<COMMENT id="C3287" spans="806846~806848" text="C:" type="Statement" line="3637" />
<COMMENT id="C3288" spans="806917~806919" text="C:" type="Statement" line="3638" />
<COMMENT id="C3289" spans="806934~806936" text="C:" type="Statement" line="3639" />
<COMMENT id="C3290" spans="806978~806980" text="C:" type="Statement" line="3640" />
<COMMENT id="C3291" spans="807162~807164" text="C:" line="3641" type="Solution" />
<COMMENT id="C3292" spans="807746~807748" text="C:" line="3642" type="Solution" />
<COMMENT id="C3293" spans="808320~808322" text="C:" type="Inquiry" line="3643" />
<COMMENT id="C3294" spans="808363~808365" text="C:" type="Solution" line="3644" />
<COMMENT id="C3295" spans="808750~808752" text="C:" type="Statement" line="3646" />
<COMMENT id="C3296" spans="809055~809057" text="C:" type="Reference" line="3647" />
<COMMENT id="C3297" spans="809145~809147" text="C:" type="Inquiry" line="3648" />
<COMMENT id="C3298" spans="809179~809181" text="C:" type="Reference" line="3649" />
<COMMENT id="C3299" spans="809245~809247" text="C:" type="Inquiry" line="3650" />
<COMMENT id="C3300" spans="809319~809321" text="C:" type="Statement" line="3651" />
<COMMENT id="C3301" spans="809329~809331" text="C:" type="Inquiry" line="3652" />
<COMMENT id="C3302" spans="809465~809467" text="C:" type="Inquiry" line="3653" />
<COMMENT id="C3303" spans="809538~809540" text="C:" type="Solution" line="3654" />
<COMMENT id="C3304" spans="809647~809649" text="C:" type="Statement" line="3655" />
<COMMENT id="C3305" spans="809994~809996" text="C:" type="Statement" line="3657" />
<COMMENT id="C3306" spans="810047~810049" text="C:" type="Solution" line="3658" />
<COMMENT id="C3307" spans="810257~810259" text="C:" type="Statement" line="3659" />
<COMMENT id="C3308" spans="810331~810333" text="C:" type="Statement" line="3660" />
<COMMENT id="C3309" spans="810450~810452" text="C:" type="Statement" line="3661" />
<COMMENT id="C3310" spans="810584~810586" text="C:" type="Statement" line="3662" />
<COMMENT id="C3311" spans="810608~810610" text="C:" type="Statement" line="3663" />
<COMMENT id="C3312" spans="810645~810647" text="C:" type="Statement" line="3664" />
<COMMENT id="C3313" spans="810651~810653" text="C:" type="Statement" line="3665" />
<COMMENT id="C3314" spans="810662~810664" text="C:" type="Statement" line="3666" />
<COMMENT id="C3315" spans="810834~810836" text="C:" type="Inquiry" line="3668" />
<COMMENT id="C3316" spans="810936~810938" text="C:" type="Statement" line="3669" />
<COMMENT id="C3317" spans="811025~811027" text="C:" type="Inquiry" line="3670" />
<COMMENT id="C3318" spans="811374~811376" text="C:" line="3671" type="Solution" />
<COMMENT id="C3319" spans="811449~811451" text="C:" type="Solution" line="3672" />
<COMMENT id="C3320" spans="812395~812397" text="C:" type="Statement" line="3673" />
<COMMENT id="C3321" spans="812412~812414" text="C:" type="Removed" line="3674" />
<COMMENT id="C3322" spans="812425~812427" text="C:" type="Statement" line="3675" />
<COMMENT id="C3323" spans="812728~812730" text="C:" type="Statement" line="3676" />
<COMMENT id="C3324" spans="812765~812767" text="C:" type="Statement" line="3677" />
<COMMENT id="C3325" spans="812858~812860" text="C:" type="Statement" line="3679" />
<COMMENT id="C3326" spans="813077~813079" text="C:" type="Statement" line="3680" />
<COMMENT id="C3327" spans="813218~813220" text="C:" type="Statement" line="3681" />
<COMMENT id="C3328" spans="813276~813278" text="C:" type="Solution" line="3682" />
<COMMENT id="C3329" spans="813709~813711" text="C:" type="Statement" line="3683" />
<COMMENT id="C3330" spans="813785~813787" text="C:" type="Statement" line="3684" />
<COMMENT id="C3331" spans="813862~813864" text="C:" type="Statement" line="3685" />
<COMMENT id="C3332" spans="813953~813955" text="C:" type="Statement" line="3686" />
<COMMENT id="C3333" spans="813984~813986" text="C:" type="Statement" line="3687" />
<COMMENT id="C3334" spans="814032~814034" text="C:" type="Statement" line="3688" />
<COMMENT id="C3335" spans="814425~814427" text="C:" type="Statement" line="3690" />
<COMMENT id="C3336" spans="814504~814506" text="C:" type="Statement" line="3691" />
<COMMENT id="C3337" spans="814678~814680" text="C:" type="Statement" line="3692" />
<COMMENT id="C3338" spans="814700~814702" text="C:" type="Inquiry" line="3693" />
<COMMENT id="C3339" spans="814940~814942" text="C:" type="Solution" line="3694" />
<COMMENT id="C3340" spans="814971~814973" text="C:" type="Statement" line="3695" />
<COMMENT id="C3341" spans="815258~815260" text="C:" type="Removed" line="3696" />
<COMMENT id="C3342" spans="815271~815273" text="C:" type="Reference" line="3697" />
<COMMENT id="C3343" spans="815369~815371" text="C:" type="Statement" line="3698" />
<COMMENT id="C3344" spans="816790~816792" text="C:" type="Statement" line="3699" />
<COMMENT id="C3345" spans="816926~816928" text="C:" type="Statement" line="3701" />
<COMMENT id="C3346" spans="816969~816971" text="C:" type="Solution" line="3702" />
<COMMENT id="C3347" spans="817236~817238" text="C:" type="Statement" line="3703" />
<COMMENT id="C3348" spans="817300~817302" text="C:" type="Statement" line="3704" />
<COMMENT id="C3349" spans="817458~817460" text="C:" type="Statement" line="3705" />
<COMMENT id="C3350" spans="817639~817641" text="C:" type="Statement" line="3706" />
<COMMENT id="C3351" spans="817659~817661" text="C:" type="Statement" line="3707" />
<COMMENT id="C3352" spans="817675~817677" text="C:" type="Removed" line="3708" />
<COMMENT id="C3353" spans="817688~817690" text="C:" type="Inquiry" line="3709" />
<COMMENT id="C3354" spans="817727~817729" text="C:" type="Statement" line="3710" />
<COMMENT id="C3355" spans="817947~817949" text="C:" type="Solution" line="3712" />
<COMMENT id="C3356" spans="818664~818666" text="C:" type="Statement" line="3713" />
<COMMENT id="C3357" spans="818771~818773" text="C:" type="Statement" line="3714" />
<COMMENT id="C3358" spans="819065~819067" text="C:" type="Inquiry" line="3715" />
<COMMENT id="C3359" spans="819116~819118" text="C:" type="Solution" line="3716" />
<COMMENT id="C3360" spans="819582~819584" text="C:" type="Statement" line="3717" />
<COMMENT id="C3361" spans="819714~819716" text="C:" type="Solution" line="3718" />
<COMMENT id="C3362" spans="819821~819823" text="C:" type="Statement" line="3719" />
<COMMENT id="C3363" spans="819996~819998" text="C:" type="Statement" line="3720" />
<COMMENT id="C3364" spans="820036~820038" text="C:" type="Statement" line="3721" />
<COMMENT id="C3365" spans="820179~820181" text="C:" type="Inquiry" line="3723" />
<COMMENT id="C3366" spans="820270~820272" text="C:" type="Statement" line="3724" />
<COMMENT id="C3367" spans="820324~820326" text="C:" type="Statement" line="3725" />
<COMMENT id="C3368" spans="820634~820636" text="C:" type="Statement" line="3726" />
<COMMENT id="C3369" spans="820675~820677" text="C:" type="Statement" line="3727" />
<COMMENT id="C3370" spans="820723~820725" text="C:" type="Removed" line="3728" />
<COMMENT id="C3371" spans="820736~820738" text="C:" type="Statement" line="3729" />
<COMMENT id="C3372" spans="820748~820750" text="C:" type="Statement" line="3730" />
<COMMENT id="C3373" spans="820785~820787" text="C:" type="Statement" line="3731" />
<COMMENT id="C3374" spans="820854~820856" text="C:" type="Statement" line="3732" />
<COMMENT id="C3375" spans="821070~821072" text="C:" type="Statement" line="3734" />
<COMMENT id="C3376" spans="821106~821108" text="C:" type="Inquiry" line="3735" />
<COMMENT id="C3377" spans="821456~821458" text="C:" type="Statement" line="3736" />
<COMMENT id="C3378" spans="822302~822304" text="C:" type="Statement" line="3737" />
<COMMENT id="C3379" spans="822340~822342" text="C:" type="Statement" line="3738" />
<COMMENT id="C3380" spans="822383~822385" text="C:" type="Statement" line="3739" />
<COMMENT id="C3381" spans="822481~822483" text="C:" type="Inquiry" line="3740" />
<COMMENT id="C3382" spans="822632~822634" text="C:" type="Statement" line="3741" />
<COMMENT id="C3383" spans="822647~822649" text="C:" type="Solution" line="3742" />
<COMMENT id="C3384" spans="824038~824040" text="C:" type="Reference" line="3743" />
<COMMENT id="C3385" spans="824196~824198" text="C:" type="Inquiry" line="3745" />
<COMMENT id="C3386" spans="824330~824332" text="C:" type="Statement" line="3746" />
<COMMENT id="C3387" spans="824383~824385" text="C:" type="Solution" line="3747" />
<COMMENT id="C3388" spans="824948~824950" text="C:" type="Statement" line="3748" />
<COMMENT id="C3389" spans="825052~825054" text="C:" type="Statement" line="3749" />
<COMMENT id="C3390" spans="825495~825497" text="C:" type="Solution" line="3750" />
<COMMENT id="C3391" spans="825762~825764" text="C:" type="Statement" line="3751" />
<COMMENT id="C3392" spans="825804~825806" text="C:" line="3752" type="Inquiry" />
<COMMENT id="C3393" spans="825911~825913" text="C:" type="Solution" line="3753" />
<COMMENT id="C3394" spans="826379~826381" text="C:" type="Statement" line="3754" />
<COMMENT id="C3395" spans="826568~826570" text="C:" type="Statement" line="3756" />
<COMMENT id="C3396" spans="826657~826659" text="C:" type="Statement" line="3757" />
<COMMENT id="C3397" spans="826681~826683" text="C:" type="Statement" line="3758" />
<COMMENT id="C3398" spans="826695~826697" text="C:" type="Statement" line="3759" />
<COMMENT id="C3399" spans="826827~826829" text="C:" type="Statement" line="3760" />
<COMMENT id="C3400" spans="826896~826898" text="C:" type="Statement" line="3761" />
<COMMENT id="C3401" spans="826907~826909" text="C:" type="Solution" line="3762" />
<COMMENT id="C3402" spans="828355~828357" text="C:" type="Solution" line="3763" />
<COMMENT id="C3403" spans="828791~828793" text="C:" type="Statement" line="3764" />
<COMMENT id="C3404" spans="828807~828809" text="C:" type="Reference" line="3765" />
<COMMENT id="C3405" spans="829171~829173" text="C:" type="Statement" line="3767" />
<COMMENT id="C3406" spans="829283~829285" text="C:" type="Statement" line="3768" />
<COMMENT id="C3407" spans="830059~830061" text="C:" type="Statement" line="3769" />
<COMMENT id="C3408" spans="830064~830066" text="C:" type="Statement" line="3770" />
<COMMENT id="C3409" spans="830154~830156" text="C:" type="Statement" line="3771" />
<COMMENT id="C3410" spans="830279~830281" text="C:" type="Statement" line="3772" />
<COMMENT id="C3411" spans="831189~831191" text="C:" type="Statement" line="3773" />
<COMMENT id="C3412" spans="831611~831613" text="C:" type="Statement" line="3774" />
<COMMENT id="C3413" spans="832140~832142" text="C:" type="Statement" line="3775" />
<COMMENT id="C3414" spans="832579~832581" text="C:" type="Statement" line="3776" />
<COMMENT id="C3415" spans="833424~833426" text="C:" type="Statement" line="3778" />
<COMMENT id="C3416" spans="833651~833653" text="C:" type="Solution" line="3779" />
<COMMENT id="C3417" spans="834014~834016" text="C:" type="Statement" line="3780" />
<COMMENT id="C3418" spans="834093~834095" text="C:" type="Statement" line="3781" />
<COMMENT id="C3419" spans="834121~834123" text="C:" type="Statement" line="3782" />
<COMMENT id="C3420" spans="834189~834191" text="C:" type="Statement" line="3783" />
<COMMENT id="C3421" spans="834228~834230" text="C:" type="Statement" line="3784" />
<COMMENT id="C3422" spans="834262~834264" text="C:" type="Statement" line="3785" />
<COMMENT id="C3423" spans="834312~834314" text="C:" type="Statement" line="3786" />
<COMMENT id="C3424" spans="834334~834336" text="C:" type="Statement" line="3787" />
<COMMENT id="C3425" spans="834412~834414" text="C:" type="Statement" line="3789" />
<COMMENT id="C3426" spans="834508~834510" text="C:" type="Solution" line="3790" />
<COMMENT id="C3427" spans="834958~834960" text="C:" type="Statement" line="3791" />
<COMMENT id="C3428" spans="835034~835036" text="C:" type="Statement" line="3792" />
<COMMENT id="C3429" spans="835084~835086" text="C:" type="Statement" line="3793" />
<COMMENT id="C3430" spans="835171~835173" text="C:" type="Solution" line="3794" />
<COMMENT id="C3431" spans="835662~835664" text="C:" type="Statement" line="3795" />
<COMMENT id="C3432" spans="836092~836094" text="C:" type="Statement" line="3796" />
<COMMENT id="C3433" spans="837685~837687" text="C:" type="Statement" line="3797" />
<COMMENT id="C3434" spans="838081~838083" text="C:" type="Statement" line="3798" />
<COMMENT id="C3435" spans="838894~838896" text="C:" type="Statement" line="3800" />
<COMMENT id="C3436" spans="838913~838915" text="C:" type="Removed" line="3801" />
<COMMENT id="C3437" spans="838926~838928" text="C:" type="Solution" line="3802" />
<COMMENT id="C3438" spans="839447~839449" text="C:" type="Statement" line="3803" />
<COMMENT id="C3439" spans="839458~839460" text="C:" type="Statement" line="3804" />
<COMMENT id="C3440" spans="839568~839570" text="C:" type="Statement" line="3805" />
<COMMENT id="C3441" spans="839588~839590" text="C:" type="Statement" line="3806" />
<COMMENT id="C3442" spans="839757~839759" text="C:" type="Statement" line="3807" />
<COMMENT id="C3443" spans="839956~839958" text="C:" type="Statement" line="3808" />
<COMMENT id="C3444" spans="839962~839964" text="C:" type="Statement" line="3809" />
<COMMENT id="C3445" spans="840118~840120" text="C:" type="Statement" line="3811" />
<COMMENT id="C3446" spans="840203~840205" text="C:" type="Statement" line="3812" />
<COMMENT id="C3447" spans="840235~840237" text="C:" type="Statement" line="3813" />
<COMMENT id="C3448" spans="840334~840336" text="C:" type="Statement" line="3814" />
<COMMENT id="C3449" spans="840447~840449" text="C:" type="Statement" line="3815" />
<COMMENT id="C3450" spans="840461~840463" text="C:" type="Statement" line="3816" />
<COMMENT id="C3451" spans="840525~840527" text="C:" type="Statement" line="3817" />
<COMMENT id="C3452" spans="840708~840710" text="C:" type="Statement" line="3818" />
<COMMENT id="C3453" spans="840822~840824" text="C:" type="Statement" line="3819" />
<COMMENT id="C3454" spans="840933~840935" text="C:" type="Reference" line="3820" />
<COMMENT id="C3455" spans="841152~841154" text="C:" type="Statement" line="3822" />
<COMMENT id="C3456" spans="841467~841469" text="C:" type="Inquiry" line="3823" />
<COMMENT id="C3457" spans="841633~841635" text="C:" type="Statement" line="3824" />
<COMMENT id="C3458" spans="841891~841893" text="C:" type="Inquiry" line="3825" />
<COMMENT id="C3459" spans="843137~843139" text="C:" type="Statement" line="3826" />
<COMMENT id="C3460" spans="843301~843303" text="C:" type="Solution" line="3827" />
<COMMENT id="C3461" spans="843474~843476" text="C:" type="Solution" line="3828" />
<COMMENT id="C3462" spans="844965~844967" text="C:" type="Solution" line="3829" />
<COMMENT id="C3463" spans="847786~847788" text="C:" type="Statement" line="3830" />
<COMMENT id="C3464" spans="847822~847824" text="C:" type="Statement" line="3831" />
<COMMENT id="C3465" spans="848935~848937" text="C:" type="Statement" line="3833" />
<COMMENT id="C3466" spans="849063~849065" text="C:" type="Statement" line="3834" />
<COMMENT id="C3467" spans="849144~849146" text="C:" type="Statement" line="3835" />
<COMMENT id="C3468" spans="849355~849357" text="C:" type="Statement" line="3836" />
<COMMENT id="C3469" spans="849511~849513" text="C:" type="Statement" line="3837" />
<COMMENT id="C3470" spans="849600~849602" text="C:" type="Statement" line="3838" />
<COMMENT id="C3471" spans="849888~849890" text="C:" type="Statement" line="3839" />
<COMMENT id="C3472" spans="849942~849944" text="C:" type="Statement" line="3840" />
<COMMENT id="C3473" spans="850117~850119" text="C:" type="Statement" line="3841" />
<COMMENT id="C3474" spans="850307~850309" text="C:" type="Statement" line="3842" />
<COMMENT id="C3476" spans="850579~850581" text="C:" type="Solution" line="3844" />
<COMMENT id="C3477" spans="851082~851084" text="C:" type="Statement" line="3845" />
<COMMENT id="C3478" spans="851178~851180" text="C:" type="Statement" line="3846" />
<COMMENT id="C3479" spans="851184~851186" text="C:" type="Solution" line="3847" />
<COMMENT id="C3480" spans="853661~853663" text="C:" type="Statement" line="3848" />
<COMMENT id="C3481" spans="853696~853698" text="C:" type="Statement" line="3849" />
<COMMENT id="C3482" spans="854141~854143" text="C:" type="Statement" line="3850" />
<COMMENT id="C3483" spans="854160~854162" text="C:" type="Solution" line="3851" />
<COMMENT id="C3484" spans="854296~854298" text="C:" type="Statement" line="3852" />
<COMMENT id="C3485" spans="854782~854784" text="C:" type="Solution" line="3853" />
<COMMENT id="C3486" spans="855085~855087" text="C:" type="Statement" line="3855" />
<COMMENT id="C3487" spans="855180~855182" text="C:" type="Reference" line="3856" />
<COMMENT id="C3488" spans="855454~855456" text="C:" type="Statement" line="3857" />
<COMMENT id="C3489" spans="855542~855544" text="C:" type="Statement" line="3858" />
<COMMENT id="C3490" spans="855590~855592" text="C:" type="Statement" line="3859" />
<COMMENT id="C3491" spans="855750~855752" text="C:" type="Statement" line="3860" />
<COMMENT id="C3492" spans="855780~855782" text="C:" type="Statement" line="3861" />
<COMMENT id="C3493" spans="855833~855835" text="C:" type="Statement" line="3862" />
<COMMENT id="C3494" spans="855901~855903" text="C:" type="Inquiry" line="3863" />
<COMMENT id="C3495" spans="855920~855922" text="C:" type="Inquiry" line="3864" />
<COMMENT id="C3496" spans="856119~856121" text="C:" type="Solution" line="3866" />
<COMMENT id="C3497" spans="857006~857008" text="C:" type="Statement" line="3867" />
<COMMENT id="C3498" spans="857240~857242" text="C:" type="Statement" line="3868" />
<COMMENT id="C3499" spans="857286~857288" text="C:" type="Statement" line="3869" />
<COMMENT id="C3500" spans="857451~857453" text="C:" type="Statement" line="3870" />
<COMMENT id="C3501" spans="857503~857505" text="C:" type="Statement" line="3871" />
<COMMENT id="C3502" spans="857650~857652" text="C:" type="Statement" line="3872" />
<COMMENT id="C3503" spans="857840~857842" text="C:" line="3873" type="Statement" />
<COMMENT id="C3504" spans="857995~857997" text="C:" type="Solution" line="3874" />
<COMMENT id="C3505" spans="858406~858408" text="C:" type="Statement" line="3876" />
<COMMENT id="C3506" spans="858524~858526" text="C:" type="Solution" line="3877" />
<COMMENT id="C3507" spans="858870~858872" text="C:" type="Statement" line="3878" />
<COMMENT id="C3508" spans="859029~859031" text="C:" type="Statement" line="3879" />
<COMMENT id="C3509" spans="859165~859167" text="C:" type="Statement" line="3880" />
<COMMENT id="C3510" spans="859259~859261" text="C:" type="Statement" line="3881" />
<COMMENT id="C3511" spans="859432~859434" text="C:" type="Solution" line="3882" />
<COMMENT id="C3512" spans="859572~859574" text="C:" type="Solution" line="3883" />
<COMMENT id="C3513" spans="859922~859924" text="C:" type="Solution" line="3884" />
<COMMENT id="C3514" spans="860127~860129" text="C:" type="Statement" line="3885" />
<COMMENT id="C3515" spans="860669~860671" text="C:" type="Statement" line="3887" />
<COMMENT id="C3516" spans="860716~860718" text="C:" type="Solution" line="3888" />
<COMMENT id="C3517" spans="860810~860812" text="C:" type="Removed" line="3889" />
<COMMENT id="C3518" spans="860823~860825" text="C:" type="Statement" line="3890" />
<COMMENT id="C3519" spans="860860~860862" text="C:" type="Statement" line="3891" />
<COMMENT id="C3520" spans="860916~860918" text="C:" type="Statement" line="3892" />
<COMMENT id="C3521" spans="861011~861013" text="C:" type="Statement" line="3893" />
<COMMENT id="C3522" spans="861458~861460" text="C:" type="Statement" line="3894" />
<COMMENT id="C3523" spans="861514~861516" text="C:" type="Statement" line="3895" />
<COMMENT id="C3524" spans="861568~861570" text="C:" type="Solution" line="3896" />
<COMMENT id="C3525" spans="861794~861796" text="C:" type="Solution" line="3898" />
<COMMENT id="C3526" spans="863303~863305" text="C:" type="Statement" line="3899" />
<COMMENT id="C3527" spans="863523~863525" text="C:" type="Solution" line="3900" />
<COMMENT id="C3528" spans="864370~864372" text="C:" type="Statement" line="3901" />
<COMMENT id="C3529" spans="864546~864548" text="C:" type="Statement" line="3902" />
<COMMENT id="C3530" spans="864577~864579" text="C:" type="Statement" line="3903" />
<COMMENT id="C3531" spans="864626~864628" text="C:" type="Solution" line="3904" />
<COMMENT id="C3532" spans="866279~866281" text="C:" type="Statement" line="3905" />
<COMMENT id="C3533" spans="866365~866367" text="C:" type="Statement" line="3906" />
<COMMENT id="C3534" spans="866429~866431" text="C:" type="Inquiry" line="3907" />
<COMMENT id="C3535" spans="866706~866708" text="C:" type="Statement" line="3909" />
<COMMENT id="C3536" spans="866882~866884" text="C:" type="Inquiry" line="3910" />
<COMMENT id="C3537" spans="867103~867105" text="C:" type="Statement" line="3911" />
<COMMENT id="C3538" spans="867561~867563" text="C:" type="Inquiry" line="3912" />
<COMMENT id="C3539" spans="867703~867705" text="C:" type="Solution" line="3913" />
<COMMENT id="C3540" spans="867799~867801" text="C:" type="Solution" line="3914" />
<COMMENT id="C3541" spans="867908~867910" text="C:" type="Statement" line="3915" />
<COMMENT id="C3542" spans="868021~868023" text="C:" type="Solution" line="3916" />
<COMMENT id="C3543" spans="868094~868096" text="C:" type="Statement" line="3917" />
<COMMENT id="C3544" spans="868152~868154" text="C:" type="Statement" line="3918" />
<COMMENT id="C3545" spans="868438~868440" text="C:" type="Solution" line="3920" />
<COMMENT id="C3546" spans="868631~868633" text="C:" type="Statement" line="3921" />
<COMMENT id="C3547" spans="868665~868667" text="C:" type="Statement" line="3922" />
<COMMENT id="C3548" spans="868787~868789" text="C:" type="Statement" line="3923" />
<COMMENT id="C3549" spans="868920~868922" text="C:" type="Statement" line="3924" />
<COMMENT id="C3550" spans="868961~868963" text="C:" type="Inquiry" line="3925" />
<COMMENT id="C3551" spans="869025~869027" text="C:" type="Solution" line="3926" />
<COMMENT id="C3552" spans="869205~869207" text="C:" type="Solution" line="3927" />
<COMMENT id="C3553" spans="871599~871601" text="C:" type="Solution" line="3928" />
<COMMENT id="C3554" spans="872590~872592" text="C:" type="Statement" line="3929" />
<COMMENT id="C3555" spans="872872~872874" text="C:" type="Statement" line="3931" />
<COMMENT id="C3556" spans="873281~873283" text="C:" type="Statement" line="3932" />
<COMMENT id="C3557" spans="873336~873338" text="C:" type="Solution" line="3933" />
<COMMENT id="C3558" spans="873611~873613" text="C:" type="Statement" line="3934" />
<COMMENT id="C3559" spans="873991~873993" text="C:" type="Statement" line="3935" />
<COMMENT id="C3560" spans="874020~874022" text="C:" type="Inquiry" line="3936" />
<COMMENT id="C3561" spans="874199~874201" text="C:" type="Statement" line="3937" />
<COMMENT id="C3562" spans="874533~874535" text="C:" type="Statement" line="3938" />
<COMMENT id="C3563" spans="874606~874608" text="C:" type="Solution" line="3939" />
<COMMENT id="C3564" spans="874822~874824" text="C:" type="Inquiry" line="3940" />
<COMMENT id="C3565" spans="875036~875038" text="C:" type="Solution" line="3942" />
<COMMENT id="C3566" spans="875149~875151" text="C:" type="Inquiry" line="3943" />
<COMMENT id="C3567" spans="875182~875184" text="C:" type="Solution" line="3944" />
<COMMENT id="C3568" spans="875294~875296" text="C:" type="Statement" line="3945" />
<COMMENT id="C3569" spans="875336~875338" text="C:" type="Statement" line="3946" />
<COMMENT id="C3570" spans="876049~876051" text="C:" type="Inquiry" line="3947" />
<COMMENT id="C3571" spans="876138~876140" text="C:" type="Statement" line="3948" />
<COMMENT id="C3572" spans="876321~876323" text="C:" line="3949" type="Statement" />
<COMMENT id="C3573" spans="876331~876333" text="C:" line="3950" type="Solution" />
<COMMENT id="C3574" spans="876429~876431" text="C:" type="Statement" line="3951" />
<COMMENT id="C3575" spans="876626~876628" text="C:" type="Statement" line="3953" />
<COMMENT id="C3576" spans="876704~876706" text="C:" type="Statement" line="3954" />
<COMMENT id="C3577" spans="876737~876739" text="C:" type="Statement" line="3955" />
<COMMENT id="C3578" spans="876885~876887" text="C:" type="Statement" line="3956" />
<COMMENT id="C3579" spans="877171~877173" text="C:" type="Statement" line="3957" />
<COMMENT id="C3580" spans="877216~877218" text="C:" type="Statement" line="3958" />
<COMMENT id="C3581" spans="877238~877240" text="C:" type="Statement" line="3959" />
<COMMENT id="C3582" spans="877412~877414" text="C:" type="Statement" line="3960" />
<COMMENT id="C3583" spans="877891~877893" text="C:" type="Statement" line="3961" />
<COMMENT id="C3584" spans="877932~877934" text="C:" type="Statement" line="3962" />
<COMMENT id="C3585" spans="877989~877991" text="C:" type="Solution" line="3964" />
<COMMENT id="C3586" spans="878455~878457" text="C:" type="Statement" line="3965" />
<COMMENT id="C3587" spans="878612~878614" text="C:" type="Removed" line="3966" />
<COMMENT id="C3588" spans="878625~878627" text="C:" type="Solution" line="3967" />
<COMMENT id="C3589" spans="878891~878893" text="C:" type="Inquiry" line="3968" />
<COMMENT id="C3590" spans="878934~878936" text="C:" type="Statement" line="3969" />
<COMMENT id="C3591" spans="879015~879017" text="C:" type="Reference" line="3970" />
<COMMENT id="C3592" spans="879387~879389" text="C:" type="Statement" line="3971" />
<COMMENT id="C3593" spans="879427~879429" text="C:" type="Statement" line="3972" />
<COMMENT id="C3594" spans="879661~879663" text="C:" type="Statement" line="3973" />
<COMMENT id="C3595" spans="879828~879830" text="C:" type="Statement" line="3975" />
<COMMENT id="C3596" spans="880000~880002" text="C:" type="Statement" line="3976" />
<COMMENT id="C3597" spans="880375~880377" text="C:" type="Statement" line="3977" />
<COMMENT id="C3598" spans="880417~880419" text="C:" type="Statement" line="3978" />
<COMMENT id="C3599" spans="880431~880433" text="C:" type="Statement" line="3979" />
<COMMENT id="C3600" spans="880475~880477" text="C:" type="Inquiry" line="3980" />
<COMMENT id="C3601" spans="880738~880740" text="C:" type="Inquiry" line="3981" />
<COMMENT id="C3602" spans="880872~880874" text="C:" type="Solution" line="3982" />
<COMMENT id="C3603" spans="881233~881235" text="C:" type="Statement" line="3983" />
<COMMENT id="C3604" spans="881432~881434" text="C:" type="Statement" line="3984" />
<COMMENT id="C3605" spans="881624~881626" text="C:" type="Statement" line="3986" />
<COMMENT id="C3606" spans="881669~881671" text="C:" type="Solution" line="3987" />
<COMMENT id="C3607" spans="882029~882031" text="C:" type="Statement" line="3988" />
<COMMENT id="C3608" spans="882066~882068" text="C:" type="Statement" line="3989" />
<COMMENT id="C3609" spans="882097~882099" text="C:" type="Statement" line="3990" />
<COMMENT id="C3610" spans="882306~882308" text="C:" type="Solution" line="3991" />
<COMMENT id="C3611" spans="882544~882546" text="C:" type="Statement" line="3992" />
<COMMENT id="C3612" spans="882580~882582" text="C:" type="Statement" line="3993" />
<COMMENT id="C3613" spans="882616~882618" text="C:" type="Statement" line="3994" />
<COMMENT id="C3614" spans="882744~882746" text="C:" type="Solution" line="3995" />
<COMMENT id="C3615" spans="884821~884823" text="C:" type="Statement" line="3997" />
<COMMENT id="C3616" spans="885272~885274" text="C:" type="Solution" line="3998" />
<COMMENT id="C3617" spans="885653~885655" text="C:" type="Statement" line="3999" />
<COMMENT id="C3618" spans="886176~886178" text="C:" type="Statement" line="4000" />
</TAGS>
</RedditAnnotation>